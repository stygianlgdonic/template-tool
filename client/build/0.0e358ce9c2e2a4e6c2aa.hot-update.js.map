{"version":3,"file":"0.0e358ce9c2e2a4e6c2aa.hot-update.js","sources":["webpack:///./src/Screens/CreateCardLayout/components/DesignTool/Components/SubNavBar/components/TextSelector/components/EffectStyletool/EffectStyletool.tsx"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { DesignToolContext } from '../../../../../../../../../../contexts/DesignToolContext';\r\nimport CardElementsFunctions from '../../../../../../../../../../Hooks/CardElementsFunctions';\r\nimport { defaultTextGlitch, defaultTextHollow, defaultTextLift, defaultTextNeon, defaultTextShadow, defaultTextSplice } from '../../../../../../../../../../utils/defaults';\r\nconst image1 = require('./../../../../../../../../../../assets/images/hollow.png');\r\nconst image2 = require('./../../../../../../../../../../assets/images/splice.png');\r\nconst image4 = require('./../../../../../../../../../../assets/images/neon.png');\r\nconst image5 = require('./../../../../../../../../../../assets/images/glitch.png');\r\nconst image6 = require('./../../../../../../../../../../assets/images/lift.png');\r\nconst image7 = require('./../../../../../../../../../../assets/images/shadow.png');\r\nconst FontStyletool: React.FC = (): JSX.Element => {\r\n    const {\r\n        selectedId, cardData,\r\n    } = useContext(DesignToolContext)\r\n    const { handleTextEffect } = CardElementsFunctions()\r\n\r\n    const handleTextHollow = (type: \"hollow\" | \"lift\" | \"shadow\" | \"neon\" | \"glitch\" | \"splice\") => {\r\n        let selectedEffect\r\n        switch (type) {\r\n            case \"hollow\":\r\n                selectedEffect = defaultTextHollow\r\n                break;\r\n\r\n            case \"lift\":\r\n                selectedEffect = defaultTextLift\r\n                break;\r\n\r\n            case \"shadow\":\r\n                selectedEffect = defaultTextShadow\r\n                break;\r\n\r\n            case \"neon\":\r\n                selectedEffect = defaultTextNeon\r\n                break;\r\n\r\n            case \"glitch\":\r\n                selectedEffect = defaultTextGlitch\r\n                break;\r\n\r\n            case \"splice\":\r\n                selectedEffect = defaultTextSplice\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n        const updatedText = {\r\n            ...cardData.elements.find(item => item.id === selectedId),\r\n            ...defaultTextHollow\r\n        }\r\n        handleTextEffect(updatedText)\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"h-full flex  flex-col w-full px-6\">\r\n\r\n\r\n            <div> <h1 className=\"font-bold text-xl mt-6\">\r\n                Effects\r\n            </h1>\r\n            </div>\r\n            <div className=\"border-b-2 border-bordercolor mt-6 \" ></div>\r\n            <div> <h1 className=\"font-medium text-lg mt-6\">\r\n                Style\r\n            </h1>\r\n            </div >\r\n            <div className=\"w-full gap-4  flex-wrap flex flex-row mt-4\">\r\n                <button><img src={image6} className=\"w-24\" /> <p className=\"text-gray94 mt-1\">None</p></button>\r\n                <button onClick={handleTextHollow} ><img src={image1} className=\"w-24\" /> <p className=\"text-gray94 mt-1\">Hollow</p></button>\r\n                <button><img src={image6} className=\"w-24\" /> <p className=\"text-gray94 mt-1\">Lift</p></button>\r\n                <button><img src={image7} className=\"w-24\" /> <p className=\"text-gray94 mt-1\">Shadow</p></button>\r\n                <button><img src={image4} className=\"w-24\" /> <p className=\"text-gray94 mt-1\">Neon</p></button>\r\n                <button><img src={image5} className=\"w-24\" /> <p className=\"text-gray94 mt-1\">glitch</p></button>\r\n                <button><img src={image2} className=\"w-24\" /> <p className=\"text-gray94 mt-1\">splice</p></button>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default FontStyletool;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1BA;AACA;AA2BA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAAA;;;;A","sourceRoot":""}