{"version":3,"file":"3.f5559f3b19db763d4e81.hot-update.js","sources":["webpack:///./src/services/auth_service.ts"],"sourcesContent":["export const userAuthenticationService =\r\n{\r\n    signupUser,\r\n    loginUser,\r\n\r\n}\r\n\r\nfunction signupUser(email: string, password: string) {\r\n    new Promise((resolve, reject) => {\r\n        try {\r\n            // const res = fetch(\"http://localhost:5000/signup\",\r\n            const res = fetch(\"http://localhost:5000/signup?email=ikram100@gmail.com&password=1234\",\r\n                {\r\n                    // credentials: \"include\",\r\n                    mode: 'cors',\r\n                    headers: {\r\n                        'Access-Control-Allow-Origin': '*',\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    method: \"POST\",\r\n                    body: JSON.stringify({ email, password })\r\n                })\r\n\r\n            console.log(\"Getting response ===>\", res)\r\n            res.then((resp) => console.log(resp)).catch((err) => console.log(err))\r\n            resolve(res)\r\n        }\r\n        catch (err) {\r\n            console.log(\"Sign Up error =>\", err)\r\n            reject(err)\r\n        }\r\n    }\r\n    )\r\n}\r\n\r\nasync function loginUser(email: string, password: string) {\r\n    new Promise((resolve, reject) => {\r\n        try {\r\n            const res = fetch(\"http://localhost:5000/login\",\r\n                {\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    method: \"POST\",\r\n                    body: JSON.stringify({ email, password })\r\n                })\r\n\r\n            resolve(res)\r\n        }\r\n        catch (err) {\r\n            reject(err)\r\n        }\r\n    }\r\n    )\r\n\r\n}"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AACA;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AAAA;AATA;AAYA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AAAA;AAAA;AANA;AASA;AACA;AAEA;AACA;AACA;AAGA;;;;A","sourceRoot":""}