{"version":3,"file":"0.650fa45c306b33032652.hot-update.js","sources":["webpack:///./src/services/cardService.ts"],"sourcesContent":["const URL_ENDPOINTS = {\r\n  getAllCardsURL: \"https://polar-tor-04971.herokuapp.com/card\",\r\n  getCardByIdURL: \"https://polar-tor-04971.herokuapp.com/card\",\r\n  createCardURL: \"https://polar-tor-04971.herokuapp.com/card\",\r\n  updateCardByIdURL: \"https://polar-tor-04971.herokuapp.com/card\",\r\n  deleteCardByIdURL: \"https://polar-tor-04971.herokuapp.com/card\"\r\n}\r\n\r\nexport const card_service = {\r\n  getAllCards,\r\n  addNewCard,\r\n  getCardByID,\r\n  updateCardByID,\r\n  deleteCardByID\r\n}\r\n\r\nasync function getAllCards() {\r\n  const response = await fetch(URL_ENDPOINTS.getAllCardsURL)\r\n  console.log({ response })\r\n  if (!response.ok) {\r\n    throw new Error(\"Error while fetching Cards\")\r\n  }\r\n  return response.json()\r\n}\r\n\r\nasync function addNewCard(cardData: any) {\r\n  const response = await fetch(URL_ENDPOINTS.createCardURL, {\r\n    method: \"POST\",\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(cardData)\r\n  })\r\n  if (!response.ok) {\r\n    throw new Error(\"Error while adding new card\")\r\n  }\r\n  return response.json()\r\n}\r\n\r\nasync function getCardByID(cardID: string) {\r\n  const response = await fetch(`${URL_ENDPOINTS.getAllCardsURL}/${cardID}`)\r\n  if (!response.ok) {\r\n    throw new Error(\"Error while fetching Cards\")\r\n  }\r\n  return response.json()\r\n}\r\n\r\nasync function updateCardByID(cardID: string, cardData: any) {\r\n\r\n  console.log({ JSON: JSON.stringify(cardData), cardData })\r\n\r\n  const response = await fetch(`${URL_ENDPOINTS.updateCardByIdURL}/${cardID}`, {\r\n    method: \"PATCH\",\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(cardData)\r\n  })\r\n  console.log({ response })\r\n  if (!response.ok) {\r\n    throw new Error(\"Error while updating card\")\r\n  }\r\n  return response.json()\r\n}\r\n\r\nasync function deleteCardByID(cardID: string) {\r\n  const response = await fetch(`${URL_ENDPOINTS.deleteCardByIdURL}/${cardID}`, {\r\n    method: \"DELETE\",\r\n  })\r\n  console.log({ response })\r\n  if (!response.ok) {\r\n    throw new Error(\"Error while updating card\")\r\n  }\r\n  return response.json()\r\n}\r\n\r\n"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AALA;AACA;AAMA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AADA;AAGA;AALA;AAOA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;;;;A","sourceRoot":""}