{"version":3,"file":"0.e5d06fc9a64f96dcac2f.hot-update.js","sources":["webpack:///./src/Hooks/CardElementsFunctions/index.tsx","webpack:///./src/Screens/CreateCardLayout/components/DesignTool/Components/SubNavBar/components/TextSelector/TextSelector.tsx"],"sourcesContent":["import * as svg from \"../../utils/svg\"\r\nimport { useFileUpload } from 'use-file-upload'\r\nimport { useContext } from 'react';\r\nimport { DesignToolContext } from '../../contexts/DesignToolContext';\r\nimport { defaultImage, defaultSvg } from \"../../utils/defaults\";\r\n\r\nconst CardElementsFunctions = (selectedId: string) => {\r\n    const [, , , setCardData,] = useContext(DesignToolContext)\r\n\r\n    const [file, selectFile] = useFileUpload()\r\n\r\n\r\n    const handleAddNewRect = (rectData: any) => {\r\n        setCardData((prev) => {\r\n            let shapeID = new Date().getTime();\r\n            prev.elements.push({ ...rectData, id: `shapes_${shapeID.toString()}` })\r\n        })\r\n    }\r\n\r\n    const handleAddNewCircle = (circleData: any) => {\r\n        setCardData((prev) => {\r\n            let shapeID = new Date().getTime();\r\n            prev.elements.push({ ...circleData, id: `shapes_${shapeID.toString()}` })\r\n        })\r\n    }\r\n    const handleAddNewTrianlge = (triangleData: any) => {\r\n        setCardData((prev) => {\r\n            let shapeID = new Date().getTime();\r\n            prev.elements.push({ ...triangleData, id: `shapes_${shapeID.toString()}` })\r\n        })\r\n    }\r\n    const handleAddNewPolygon = (polygonData: any) => {\r\n        setCardData((prev) => {\r\n            let shapeID = new Date().getTime();\r\n            prev.elements.push({ ...polygonData, id: `shapes_${shapeID.toString()}` })\r\n        })\r\n    }\r\n\r\n    const handleSvgUpload = (e) => {\r\n        svg.getSvgStringFromUpload(e.target.files).then((SVG_STRING) => {\r\n\r\n            setCardData((prev) => {\r\n                let svgId = new Date().getTime()\r\n                prev.elements.push({\r\n\r\n                    id: `svgs_${svgId.toString()}`,\r\n                    svgString: SVG_STRING,\r\n                    ...defaultSvg\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    const handleImageUpload = () => {\r\n        selectFile({ accept: \"image/png, image/jpg, image/jpeg\", multiple: false },\r\n            ({ file }: any) => {\r\n\r\n                const reader = new FileReader();\r\n                reader.readAsDataURL(file);\r\n\r\n                reader.onload = () => {\r\n                    //base64encoded string\r\n                    setCardData((prev) => {\r\n                        let imageID = new Date().getTime();\r\n                        prev.elements.push({\r\n                            ...defaultImage,\r\n                            src: reader.result,\r\n                            id: `images_${imageID.toString()}`\r\n                        })\r\n                    })\r\n                };\r\n            })\r\n    }\r\n\r\n    const handleAddNewText = (textData: any) => {\r\n        setCardData((prev) => {\r\n            let textID = new Date().getTime();\r\n            prev.elements.push({ ...textData, id: `textBoxes_${textID.toString()}` })\r\n        })\r\n    }\r\n\r\n    const onBringtoFront = () => {\r\n        if (!selectedId) return\r\n        setCardData((prev) => {\r\n            const shapeIndex = prev.elements.findIndex(\r\n                (item) => item.id === selectedId\r\n            );\r\n            if (shapeIndex < (prev.elements.length - 1)) {\r\n\r\n                const temp = prev.elements[shapeIndex]\r\n\r\n                prev.elements[shapeIndex] = prev.elements[shapeIndex + 1]\r\n\r\n                prev.elements[shapeIndex + 1] = temp\r\n\r\n            }\r\n        });\r\n    };\r\n\r\n    const onBringtoBack = () => {\r\n        if (!selectedId) return\r\n        setCardData((prev) => {\r\n            const shapeIndex = prev.elements.findIndex(\r\n                (item) => item.id === selectedId\r\n            );\r\n\r\n            // NOTE - shapeIndex > 1 because index 0 is for background\r\n            if (shapeIndex > 1) {\r\n\r\n                const temp = prev.elements[shapeIndex]\r\n\r\n                prev.elements[shapeIndex] = prev.elements[shapeIndex - 1]\r\n\r\n                prev.elements[shapeIndex - 1] = temp\r\n\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n\r\n    return {\r\n        handleAddNewRect,\r\n        handleAddNewCircle,\r\n        handleAddNewTrianlge,\r\n        handleAddNewPolygon,\r\n        handleSvgUpload,\r\n        handleImageUpload,\r\n        handleAddNewText,\r\n        onBringtoBack,\r\n        onBringtoFront\r\n    }\r\n}\r\n\r\nexport default CardElementsFunctions\r\n","import React from 'react';\r\nimport CardElementsFunctions from '../../../../../../../../Hooks/CardElementsFunctions';\r\nimport { defaultTextBox, fontSizeArray } from '../../../../../../../../utils/defaults';\r\n\r\nconst TextSelector: React.FC = (): JSX.Element => {\r\n\r\n    const { handleAddNewText } = CardElementsFunctions(selectedId = \"\")\r\n\r\n    const handleTextAdd = (type: \"Header\" | \"Sub header\" | \"body text\") => {\r\n        const textTypeFont = fontSizeArray.find(item => item.name === type).size\r\n        handleAddNewText({\r\n            ...defaultTextBox,\r\n            fontSize: textTypeFont\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\" flex   flex-col justify-center w-full p-6 \">\r\n\r\n            <div className=\" w-full\">\r\n                <h1 className=\"mt-3 font-bold text-xl\">Click text to add to page</h1>\r\n            </div>\r\n            <div className=\"mt-6 w-full flex flex-col justify-start items-start\">\r\n                <button\r\n                    onClick={() => handleTextAdd(\"Header\")}\r\n                    className=\"text-5xl leading-none font-normal text-gray94 mb-2\"><p>Heading 1</p></button>\r\n                <button\r\n                    onClick={() => handleTextAdd(\"Sub header\")}\r\n                    className=\"text-5xl leading-none font-normal text-gray94 mb-2\"><p>Sub header</p></button>\r\n                <button\r\n                    onClick={() => handleTextAdd(\"body text\")}\r\n                    className=\"text-5xl leading-none font-normal text-gray94 mb-2\"><p>body text</p></button>\r\n            </div>\r\n            <div className=\"mt-6 w-full border-b-2 border-bordercolor\">\r\n            </div>\r\n            <div className=\" w-full flex flex-row items-center justify-start\">\r\n\r\n                <h1 className=\"mt-3 font-bold text-xl mr-2\">Available merge tags</h1>\r\n                <svg className=\"mt-3\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M16 8C16 12.4183 12.4183 16 8 16C3.58172 16 0 12.4183 0 8C0 3.58172 3.58172 0 8 0C12.4183 0 16 3.58172 16 8ZM9 12C9 12.5523 8.55229 13 8 13C7.44772 13 7 12.5523 7 12C7 11.4477 7.44772 11 8 11C8.55229 11 9 11.4477 9 12ZM8 3C7.44772 3 7 3.44772 7 4V8C7 8.55228 7.44772 9 8 9C8.55229 9 9 8.55228 9 8V4C9 3.44772 8.55229 3 8 3Z\" fill=\"#4338CA\" />\r\n                </svg>\r\n\r\n            </div>\r\n            <div className=\"flex flex-row flex-wrap  gap-4  mt-4 \">\r\n                <button className=\"hover:bg-indigo100\">\r\n\r\n                    <div className=\"hover:font-bold px-2 text-sm   font-normal py-1 border-2 border-bordercolor w-32 h-9 rounded-md \">\r\n                        Company_name\r\n                    </div>\r\n                </button>\r\n                <button className=\"hover:bg-indigo100\">\r\n\r\n                    <div className=\"hover:font-bold px-2 text-sm   font-normal py-1 border-2 border-bordercolor  h-9 rounded-md \">\r\n                        Company_name\r\n                    </div>\r\n                </button>\r\n                <button className=\"hover:bg-indigo100\">\r\n\r\n                    <div className=\"hover:font-bold px-2 text-sm   font-normal py-1 border-2 border-bordercolor  h-9 rounded-md \">\r\n                        Company_name\r\n                    </div>\r\n                </button>\r\n                <button className=\"hover:bg-indigo100\">\r\n\r\n                    <div className=\"hover:font-bold px-2 text-sm   font-normal py-1 border-2 border-bordercolor  h-9 rounded-md \">\r\n                        Business_name Amazon\r\n                    </div>\r\n                </button>\r\n                <button className=\"hover:bg-indigo100\">\r\n\r\n                    <div className=\"hover:font-bold px-2 text-sm   font-normal py-1 border-2 border-bordercolor  h-9 rounded-md \">\r\n                        Website_URL\r\n                    </div>\r\n                </button>\r\n                <button className=\"hover:bg-indigo100\">\r\n\r\n                    <div className=\"hover:font-bold px-2 text-sm   font-normal py-1 border-2 border-bordercolor h-9 rounded-md \">\r\n                        Pakistan Super League\r\n                    </div>\r\n                </button>\r\n\r\n            </div>\r\n\r\n            <div>\r\n                <button className=\"text-indigo600 text-sm font-medium mt-6 \">Didnâ€™t find the right merge tag?</button>\r\n            </div>\r\n            <div className=\"border-dashed  px-2 py-1 border-2 border-bordercolor w-60 h-9 mt-4 rounded-md flex flex-row\">\r\n                <svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <g filter=\"url(#filter0_d)\">\r\n                        <g clip-path=\"url(#clip0)\">\r\n                            <path d=\"M2 12C2 5.92487 6.92487 1 13 1C19.0751 1 24 5.92487 24 12C24 18.0751 19.0751 23 13 23C6.92487 23 2 18.0751 2 12Z\" fill=\"#C7D2FE\" />\r\n                            <path d=\"M13 6V12M13 12V18M13 12H19M13 12L7 12\" stroke=\"white\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                        </g>\r\n                    </g>\r\n                    <defs>\r\n                        <filter id=\"filter0_d\" x=\"0\" y=\"0\" width=\"26\" height=\"26\" filterUnits=\"userSpaceOnUse\" color-interpolation-filters=\"sRGB\">\r\n                            <feFlood flood-opacity=\"0\" result=\"BackgroundImageFix\" />\r\n                            <feColorMatrix in=\"SourceAlpha\" type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" result=\"hardAlpha\" />\r\n                            <feOffset dy=\"1\" />\r\n                            <feGaussianBlur stdDeviation=\"1\" />\r\n                            <feColorMatrix type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.05 0\" />\r\n                            <feBlend mode=\"normal\" in2=\"BackgroundImageFix\" result=\"effect1_dropShadow\" />\r\n                            <feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"effect1_dropShadow\" result=\"shape\" />\r\n                        </filter>\r\n                        <clipPath id=\"clip0\">\r\n                            <path d=\"M2 12C2 5.92487 6.92487 1 13 1C19.0751 1 24 5.92487 24 12C24 18.0751 19.0751 23 13 23C6.92487 23 2 18.0751 2 12Z\" fill=\"white\" />\r\n                        </clipPath>\r\n                    </defs>\r\n                </svg>\r\n\r\n                <button className=\"text-sm  font-normal ml-2\">Create custom merge tag</button>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default TextSelector;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACtsourceRoot":""}