{"version":3,"file":"0.60b597c3190e0c521391.hot-update.js","sources":["webpack:///./src/Screens/CreateCardLayout/components/DesignTool/Components/Card/MainCanvas/UTransformer.tsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Transformer } from \"react-konva\";\r\nimport { DesignToolContext } from \"../../../../../../../contexts/DesignToolContext\";\r\nimport ImageFallbackModal from \"../tailwindComponents/CardHeader/components/ImageFallbackModal/ImageFallbackModal\";\r\nimport { Html } from \"react-konva-utils\";\r\nexport const MIN_WIDTH = 50;\r\nexport const MIN_HEIGHT = 30;\r\n\r\ninterface Props {\r\n  id: any;\r\n  $tr: any;\r\n  selectedShapeName: any;\r\n  setSelectedId: any;\r\n}\r\n\r\nconst TransformerComponent: React.FC<Props> = ({\r\n  id,\r\n  $tr,\r\n  selectedShapeName,\r\n  setSelectedId,\r\n}) => {\r\n  const [isOpenFallbackModal, setIsOpenFallbackModal] =\r\n    useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    checkNode();\r\n  }, [selectedShapeName]);\r\n  const checkNode = () => {\r\n    const stage = $tr.current.getStage();\r\n    const selectedNode = stage.findOne(\"#\" + selectedShapeName);\r\n    if (selectedNode) {\r\n      $tr.current.nodes([selectedNode]);\r\n    } else {\r\n      $tr.current.detach();\r\n      setSelectedId(null);\r\n    }\r\n    $tr.current.getLayer().batchDraw();\r\n  };\r\n\r\n  const handleOpenFallbackModal = () => {\r\n    const nodes = $tr.current.nodes();\r\n    if (!!nodes.length && nodes[0]?.attrs?.id.split(\"_\")[0] === \"shapes\") {\r\n      setIsOpenFallbackModal(!isOpenFallbackModal);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Transformer\r\n        id={id}\r\n        ref={$tr}\r\n        ignoreStroke={true}\r\n        boundBoxFunc={(oldBox, newBox) => {\r\n          if (selectedShapeName === \"shapes_background\") return oldBox;\r\n          if (newBox.width < MIN_WIDTH) {\r\n            return { ...oldBox, width: MIN_WIDTH };\r\n          }\r\n          return newBox;\r\n        }}\r\n      >\r\n        <Html>\r\n          <div>\r\n            <button onClick={handleOpenFallbackModal}>\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                className=\"w-6 h-6\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                stroke=\"currentColor\"\r\n              >\r\n                <path\r\n                  stroke-linecap=\"round\"\r\n                  stroke-linejoin=\"round\"\r\n                  stroke-width=\"2\"\r\n                  d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"\r\n                />\r\n              </svg>\r\n            </button>\r\n            <div className={!!isOpenFallbackModal ? \"\" : \"hidden\"}>\r\n              <ImageFallbackModal\r\n                closeModal={() => {\r\n                  // setIsOpenFallbackModal(false);\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Html>\r\n      </Transformer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TransformerComponent;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;;;;A","sourceRoot":""}