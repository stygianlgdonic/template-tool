{"version":3,"file":"server.abfec5a0690852057e5c.hot-update.js","sources":["webpack:///./src/contexts/DesignToolContext.tsx","webpack:///./src/contexts/DesignToolReducers.ts"],"sourcesContent":["import React, { createContext, useState, useReducer } from 'react'\r\n\r\nimport { useImmerState } from '@shrugsy/use-immer-state';\r\nimport { stageDimensions } from '../utils/defaults';\r\nimport { designToolReducer, designToolInit } from './DesignToolReducers';\r\n\r\nexport const INITIAL_STATE = {\r\n    dimensions: { width: stageDimensions.width, height: stageDimensions.height },\r\n    labels: [],\r\n    elements: [{\r\n        id: 'shapes_background',\r\n        type: \"rectangle\",\r\n        x: 0,\r\n        y: 0,\r\n        width: stageDimensions.width,\r\n        height: stageDimensions.height,\r\n        // fill: '#F0F0F0',\r\n        fillLinearGradientStartPoint: { x: 0, y: 0 },\r\n        fillLinearGradientEndPoint: { x: stageDimensions.width, y: stageDimensions.height },\r\n        fillLinearGradientColorStops: [0, '#ffffff', 1, '#ffffff'],\r\n        draggable: false,\r\n    }],\r\n}\r\n\r\n\r\nexport const DesignToolContext = createContext(null)\r\n\r\nexport const DesignToolProvider = ({ children }) => {\r\n\r\n    const [designToolnavigator, setDesignToolnavigator] = useState('element')\r\n    const [designHeadernavigator, setDesignHeadernavigator] = useState('')\r\n    const [cardData, setCardData, { goForward, goBack, stepNum, history }] = useImmerState(INITIAL_STATE)\r\n    const [selectedId, setSelectedId] = useState<string | null>(null);\r\n\r\n    const [designToolState, designToolDispatch] = useReducer(designToolReducer, designToolInit)\r\n    console.log({ designToolState })\r\n    return (\r\n        <DesignToolContext.Provider\r\n            value={{\r\n                designToolnavigator, setDesignToolnavigator,\r\n                designHeadernavigator, setDesignHeadernavigator,\r\n                selectedId, setSelectedId,\r\n                cardData, setCardData,\r\n                cardHistory: { goForward, goBack, stepNum, history },\r\n                designToolState, designToolDispatch\r\n            }}\r\n        >\r\n            {children}\r\n        </DesignToolContext.Provider >\r\n    );\r\n\r\n}\r\n","export const designToolInit: any = {\r\n    navbar_selection: \"\"\r\n}\r\n\r\nexport const designToolReducer = (designToolState, action) => {\r\n    if (action.type == 'Navbar_Select_Elements') {\r\n        return {\r\n            ...designToolState,\r\n            navbar_selection: \"element\"\r\n        }\r\n    }\r\n    if (action.type == 'Navbar_Select_Text') {\r\n        return designToolState.navbar_selection = \"text\"\r\n    }\r\n    if (action.type == 'Navbar_Select_Image') {\r\n        return designToolState.navbar_selection = \"images\"\r\n    }\r\n    if (action.type == 'Navbar_Select_Background') {\r\n        return designToolState.navbar_selection = \"background\"\r\n    }\r\n    if (action.type == 'Navbar_Select_Logo') {\r\n        return designToolState.navbar_selection = \"logo\"\r\n    }\r\n    if (action.type == 'Navbar_Select_Logo') {\r\n        return designToolState.navbar_selection = \"texttool\"\r\n    }\r\n    if (action.type == 'Navbar_Select_Logo') {\r\n        return designToolState.navbar_selection = \"fonttool\"\r\n    }\r\n    if (action.type == 'Navbar_Select_Logo') {\r\n        return designToolState.navbar_selection = \"effecttool\"\r\n    }\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAXA;AAHA;AAmBA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AANA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;;;;;;;;;;;;;;;;;;;;;;;;ACnDA;AACA;AADA;AAIA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;;;A","sourceRoot":""}