{"version":3,"file":"0.b57d0f5feae70933c157.hot-update.js","sources":["webpack:///./src/Screens/CreateCardLayout/components/DesignTool/Components/CustomColorPicker/index.tsx","webpack:///./src/Screens/CreateCardLayout/components/DesignTool/Components/SubNavBar/components/TextSelector/components/FontColortool/FontColortool.tsx"],"sourcesContent":["import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { SketchPicker } from \"react-color\"\r\n\r\ninterface Prop {\r\n    closeModal: () => void\r\n    currentColor: string\r\n}\r\nconst CustomColorPicker: React.FC<Prop> = ({\r\n    closeModal,\r\n}): JSX.Element => {\r\n    const [fillType, setfillType] = useState<\"\" | \"solid\" | \"gradient\">(\"\");\r\n    const [gradientType, setGradientType] = useState<\"linear\" | \"radial\">(\"linear\")\r\n    const myRef = useRef(null);\r\n    const [currentColor, setCurrentColor] = useState(\"#171717\")\r\n\r\n    const handleClickOutside = (e) => {\r\n        //   console.log({ LOL: reference.current.contains(e.target), ee: e.target });\r\n        if (!myRef.current.contains(e.target)) {\r\n            // setShowModal(false);\r\n            closeModal();\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    });\r\n\r\n    const handleColorChange = (color) => {\r\n        setCurrentColor(color.hex)\r\n    }\r\n\r\n    const handleGradientTypeChange = (e) => {\r\n        setGradientType(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                ref={myRef}\r\n                className=\"fixed z-50 flex items-center justify-center overflow-x-hidden overflow-y-auto outline-none focus:outline-none\"\r\n            >\r\n                <div className=\"relative w-auto max-w-3xl mx-auto my-6\">\r\n                    <div className=\"relative flex flex-col w-full bg-white border-0 rounded-lg shadow-lg border-bordercolor focus:outline-none\">\r\n                        <label className=\"mt-4 ml-6 text-base font-medium leading-5 text-left text-black font-inter\">\r\n                            Fill type\r\n                        </label>\r\n\r\n                        <div className=\"flex items-start justify-between p-5 rounded-t border-blueGray-200 \">\r\n                            <div className=\"flex gap-2 ml-2\">\r\n                                <div>\r\n                                    <button\r\n                                        onClick={() => {\r\n                                            setfillType(\"solid\")\r\n                                        }}\r\n                                        type=\"button\"\r\n                                        className={\r\n                                            \" w-14 font-inter h-10 inline-flex items-center px-3 py-1.5 border-2 border-gray300 text-xs font-medium rounded-md shadow-sm   \" +\r\n                                            (fillType === \"solid\"\r\n                                                ? \"bg-SolidColor text-white\"\r\n                                                : \"text-gradientColor bg-jacksonsGray\")\r\n                                        }\r\n                                    >\r\n                                        Solid\r\n                                    </button>\r\n                                </div>\r\n                                <div>\r\n                                    <button\r\n                                        onClick={() => setfillType(\"gradient\")}\r\n                                        type=\"button\"\r\n                                        className={\"w-28 font-inter h-10 inline-flex text-center items-center px-5 py-1.5 border-2 border-gray300 text-xs font-medium  rounded-md shadow-sm \"\r\n                                            + (fillType === \"gradient\"\r\n                                                ? \"bg-SolidColor text-white\"\r\n                                                : \"text-gradientColor bg-jacksonsGray\")}\r\n                                    >\r\n                                        Fill gradient\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"mt-2 ml-2\"></div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={fillType === \"solid\" ? \"hidden\" : \"\"}>\r\n                            <div className=\" flex justify-between \">\r\n\r\n                                <label><input\r\n                                    onClick={handleGradientTypeChange}\r\n                                    checked={gradientType === \"linear\"}\r\n                                    value=\"linear\"\r\n                                    id=\"linear\"\r\n                                    name=\"linear\"\r\n                                    type=\"radio\"\r\n                                    className=\"w-4 h-4 mt-1 text-indigo600 border-gray300 focus:ring-indigo500\"\r\n                                />\r\n                                    Linear\r\n                                </label>\r\n\r\n                                <label><input\r\n                                    onClick={handleGradientTypeChange}\r\n                                    checked={gradientType === \"radial\"}\r\n                                    value=\"radial\"\r\n                                    id=\"radial\"\r\n                                    name=\"radial\"\r\n                                    type=\"radio\"\r\n                                    className=\"w-4 h-4 mt-1 text-left text-indigo600 border-gray300 focus:ring-indigo500\"\r\n                                />\r\n                                    Radial\r\n                                </label>\r\n\r\n                            </div>\r\n                            <div className={\" w-60 \" + (gradientType === \"linear\" ? \"\" : \"hidden\")} >\r\n                                <SketchPicker\r\n                                    width=\"w-60\"\r\n                                    color={currentColor}\r\n                                    onChange={handleColorChange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"fixed inset-0 z-40 bg-transparent opacity-25\"></div>\r\n        </>\r\n    );\r\n};\r\nexport default CustomColorPicker;\r\n","import React, { useEffect, useState } from 'react';\r\nimport CardElementsFunctions from '../../../../../../../../../../Hooks/CardElementsFunctions';\r\nimport CustomColorPicker from '../../../../../CustomColorPicker';\r\nconst image = require('./../../../../../../../../../../assets/images/custom.png');\r\nconst FontStyletool: React.FC = (): JSX.Element => {\r\n\r\n    const [colorQuery, setColorQuery] = useState<string>(\"\")\r\n    const [colorsArray, setColorsArray] = useState([])\r\n\r\n    const [isOpenColorPicker, setIsOpenColorPicker] = useState(false)\r\n\r\n\r\n    const handleColorQueryChange = (e) => {\r\n        setColorQuery(e.target.value)\r\n    }\r\n    const { handleFill, getDocumentColors } = CardElementsFunctions()\r\n\r\n    const documentColors = getDocumentColors()\r\n\r\n    useEffect(() => {\r\n\r\n        if (!colorQuery) return\r\n\r\n        const fetchURl = colorQuery.charAt(0) !== \"#\" ?\r\n            `https://api.color.pizza/v1/names/?name=${colorQuery}&goodnamesonly=true` :\r\n            `https://api.color.pizza/v1/?values=${colorQuery.substring(1)}&goodnamesonly=true`\r\n\r\n        fetch(fetchURl)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n\r\n                const newColors = data.colors.map(item => item.hex)\r\n                newColors.splice(6)\r\n\r\n                setColorsArray(newColors)\r\n            }).catch(error => console.log(\"No colors found!\"))\r\n    }, [colorQuery])\r\n\r\n    const openColorPicker = () => {\r\n        setIsOpenColorPicker(true)\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"h-full flex flex-col w-full px-6 \">\r\n\r\n            <div className=\" flex justify-center items-center  w-full mt-6\">\r\n\r\n                <div className=\"flex h-14 rounded-md border-bordercolor border justify-center items-center w-full z-50\">\r\n                    <button>\r\n                        <span className=\"w-auto flex justify-end items-center text-grey text-sm p-3\">\r\n                            <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6 2C3.79086 2 2 3.79086 2 6C2 8.20914 3.79086 10 6 10C8.20914 10 10 8.20914 10 6C10 3.79086 8.20914 2 6 2ZM0 6C0 2.68629 2.68629 0 6 0C9.31371 0 12 2.68629 12 6C12 7.29583 11.5892 8.49572 10.8907 9.47653L15.7071 14.2929C16.0976 14.6834 16.0976 15.3166 15.7071 15.7071C15.3166 16.0976 14.6834 16.0976 14.2929 15.7071L9.47653 10.8907C8.49572 11.5892 7.29583 12 6 12C2.68629 12 0 9.31371 0 6Z\" fill=\"#9CA3AF\" />\r\n                            </svg>\r\n\r\n                        </span>\r\n                    </button>\r\n                    <input\r\n                        onChange={handleColorQueryChange}\r\n                        className=\"w-full rounded text-sm text-gray95 outline-none h-10 z-0 \" type=\"text\" placeholder=\"Try “blue” or “#43345”\" />\r\n                </div>\r\n            </div>\r\n            <div className={!!colorsArray.length ? \"\" : \"hidden\"} >\r\n                <h1 className=\"text-md text-gray40 mt-4\" >Search results</h1>\r\n                <div className=\" mt-4 flex flex-row items-center gap-3\">\r\n                    {colorsArray.map(item =>\r\n                        <button style={{ backgroundColor: item }} className=\"h-10 w-10 rounded-md\" onClick={() => handleFill(item)}></button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <div className=\"\" >\r\n                <h1 className=\"text-md text-gray40 mt-4\" >Document Colors</h1>\r\n                <div className=\" mt-4 flex flex-row items-center justify-between\">\r\n                    <button>\r\n                        <img onClick={openColorPicker} src={image} className=\"w-10 h-10\" />\r\n                    </button>\r\n                    {documentColors.map(item =>\r\n                        <button style={{ backgroundColor: item }} className=\"h-10 w-10 rounded-md\" onClick={() => handleFill(item)}></button>\r\n                    )}\r\n\r\n                </div>\r\n                <div className={isOpenColorPicker ? \"\" : \"hidden\"}>\r\n                    <CustomColorPicker />\r\n                </div>\r\n            </div>\r\n            <div className=\"border-b-2 border-bordercolor mt-6\" ></div>\r\n            <div>\r\n                <button className=\"text-md text-black mt-4\" ><span className=\"text-2xl mr-6\">+</span>Add your brand colors in Brand Kit</button>\r\n            </div>\r\n\r\n            <div className=\"border-b-2 border-bordercolor mt-4\" ></div>\r\n            <div>\r\n                <h1 className=\"text-md text-gray40 mt-4\" >Default Colors</h1>\r\n                <div className=\" mt-4 flex flex-col items-center \">\r\n                    <div className=\" mt-4 flex flex-row items-center gap-3 w-full\">\r\n\r\n                        <button className=\"bg-gray95 h-10 w-10 rounded-md\" onClick={() => handleFill(\"#6B7280\")} ></button>\r\n                        <button className=\"bg-indigo600 h-10 w-10 rounded-md\" onClick={() => handleFill(\"#4F46E5\")} ></button>\r\n                        <button className=\"bg-fuschia h-10 w-10 rounded-md\" onClick={() => handleFill(\"#EF5DA8\")} ></button>\r\n                        <button className=\"bg-greenish h-10 w-10 rounded-md\" onClick={() => handleFill(\"#5DEFC3\")} ></button>\r\n                        <button className=\"bg-redish h-10 w-10 rounded-md\" onClick={() => handleFill(\"#EE4646\")} ></button>\r\n                        <button className=\"bg-yellowish h-10 w-10 rounded-md\" onClick={() => handleFill(\"#EEA146\")} ></button>\r\n                    </div>\r\n                    <div className=\" mt-4 flex flex-row items-center gap-3  w-full\">\r\n\r\n                        <button className=\"bg-canvasbgcolor h-10 w-10 rounded-md\" onClick={() => handleFill(\"#f2f2f2\")} ></button>\r\n                        <button className=\"bg-gray95 h-10 w-10 rounded-md\" onClick={() => handleFill(\"#6B7280\")} ></button>\r\n                        <button className=\"bg-lightindigo h-10 w-10 rounded-md\" onClick={() => handleFill(\"#E0E7FF\")} ></button>\r\n                        <button className=\"bg-fuschia h-10 w-10 rounded-md\" onClick={() => handleFill(\"#EF5DA8\")} ></button>\r\n                        <button className=\"bg-greenish h-10 w-10 rounded-md\" onClick={() => handleFill(\"#5DEFC3\")} ></button>\r\n                        <button className=\"bg-yellowish h-10 w-10 rounded-md\" onClick={() => handleFill(\"#EEA146\")} ></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};\r\nexport default FontStyletool;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAKA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;;;;;;;;;;;;;;;;;;;AC5HA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAEA;AAEA;AAIA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAAA;;;;A","sourceRoot":""}