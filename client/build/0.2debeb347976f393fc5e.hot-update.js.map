{"version":3,"file":"0.2debeb347976f393fc5e.hot-update.js","sources":["webpack:///./node_modules/react-konva-utils/es/html.js","webpack:///./node_modules/react-konva-utils/es/index.js","webpack:///./node_modules/react-konva-utils/es/portal.js","webpack:///./node_modules/react-konva-utils/es/use-image.js","webpack:///./src/Screens/CreateCardLayout/components/DesignTool/Components/Card/MainCanvas/UTransformer.tsx"],"sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Group } from 'react-konva';\nconst needForceStyle = (el) => {\n    const pos = window.getComputedStyle(el).position;\n    const ok = pos === 'absolute' || pos === 'relative';\n    return !ok;\n};\nexport const Html = ({ children, groupProps, divProps, transform }) => {\n    const groupRef = React.useRef(null);\n    const container = React.useRef();\n    const shouldTransform = transform !== null && transform !== void 0 ? transform : true;\n    const handleTransform = () => {\n        const div = container.current;\n        if (!div) {\n            return;\n        }\n        if (shouldTransform && groupRef.current) {\n            const tr = groupRef.current.getAbsoluteTransform();\n            const attrs = tr.decompose();\n            div.style.position = 'absolute';\n            div.style.zIndex = '10';\n            div.style.top = '0px';\n            div.style.left = '0px';\n            div.style.transform = `translate(${attrs.x}px, ${attrs.y}px) rotate(${attrs.rotation}deg) scaleX(${attrs.scaleX}) scaleY(${attrs.scaleY})`;\n            div.style.transformOrigin = 'top left';\n        }\n        else {\n            div.style.position = '';\n            div.style.zIndex = '';\n            div.style.top = '';\n            div.style.left = '';\n            div.style.transform = ``;\n            div.style.transformOrigin = '';\n        }\n        const _a = divProps || {}, { style } = _a, restProps = __rest(_a, [\"style\"]);\n        Object.assign(div.style, style);\n        Object.assign(div, restProps);\n    };\n    React.useLayoutEffect(() => {\n        var _a;\n        const group = groupRef.current;\n        if (!group) {\n            return;\n        }\n        const parent = (_a = group.getStage()) === null || _a === void 0 ? void 0 : _a.container();\n        if (!parent) {\n            return;\n        }\n        let div = document.createElement('div');\n        container.current = div;\n        parent.appendChild(div);\n        if (shouldTransform && needForceStyle(parent)) {\n            parent.style.position = 'relative';\n        }\n        group.on('absoluteTransformChange', handleTransform);\n        handleTransform();\n        return () => {\n            var _a;\n            group.off('absoluteTransformChange', handleTransform);\n            ReactDOM.unmountComponentAtNode(div);\n            (_a = div.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(div);\n        };\n    }, [shouldTransform]);\n    React.useLayoutEffect(() => {\n        handleTransform();\n    }, [divProps]);\n    React.useLayoutEffect(() => {\n        ReactDOM.render(children, container.current);\n    });\n    return React.createElement(Group, Object.assign({ ref: groupRef }, groupProps));\n};\n","export { Html } from './html';\nexport { Portal } from './portal';\nexport { useImage } from './use-image';\n","import React from 'react';\nimport { Group } from 'react-konva';\nexport const Portal = ({ selector, enabled, children }) => {\n    const outer = React.useRef(null);\n    const inner = React.useRef(null);\n    const safeRef = React.useRef();\n    const shouldMove = enabled !== null && enabled !== void 0 ? enabled : true;\n    React.useLayoutEffect(() => {\n        if (!outer.current || !inner.current) {\n            return;\n        }\n        safeRef.current = inner.current;\n        const stage = outer.current.getStage();\n        const newContainer = stage.findOne(selector);\n        if (shouldMove && newContainer) {\n            inner.current.moveTo(newContainer);\n        }\n        else {\n            inner.current.moveTo(outer.current);\n        }\n        outer.current.getLayer().batchDraw();\n        if (newContainer) {\n            newContainer.getLayer().batchDraw();\n        }\n    }, [selector, shouldMove]);\n    React.useEffect(() => {\n        return () => {\n            var _a;\n            (_a = safeRef.current) === null || _a === void 0 ? void 0 : _a.destroy();\n        };\n    }, []);\n    return (React.createElement(Group, { name: \"_outer_portal\", ref: outer },\n        React.createElement(Group, { name: \"_inner_portal\", ref: inner }, children)));\n};\n","export { default as useImage } from 'use-image';\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Transformer } from 'react-konva'\r\nimport { Html } from \"react-konva-utils\"\r\nimport { DesignToolContext } from '../../../../../../../contexts/DesignToolContext';\r\nimport ImageFallbackModal from '../tailwindComponents/CardHeader/components/ImageFallbackModal/ImageFallbackModal';\r\n\r\nexport const MIN_WIDTH = 50\r\nexport const MIN_HEIGHT = 30\r\n\r\ninterface Props {\r\n    id: any\r\n    $tr: any\r\n    selectedShapeName: any\r\n    setSelectedId: any\r\n}\r\n\r\nconst TransformerComponent: React.FC<Props> = ({\r\n    id,\r\n    $tr,\r\n    selectedShapeName,\r\n    setSelectedId\r\n}) => {\r\n\r\n    const [isOpenFallbackModal, setIsOpenFallbackModal] = useState<boolean>(false)\r\n\r\n    useEffect(() => {\r\n        checkNode();\r\n    }, [selectedShapeName])\r\n    const checkNode = () => {\r\n        const stage = $tr.current.getStage();\r\n        const selectedNode = stage.findOne(\"#\" + selectedShapeName);\r\n        if (selectedNode) {\r\n            $tr.current.nodes([selectedNode])\r\n        } else {\r\n            $tr.current.detach();\r\n            setSelectedId(null)\r\n        }\r\n        $tr.current.getLayer().batchDraw();\r\n    }\r\n\r\n    const handleOpenFallbackModal = () => {\r\n        const nodes = $tr.current.nodes()\r\n        if (!!nodes.length && nodes[0]?.attrs?.id.split(\"_\")[0] === \"shapes\") {\r\n            setIsOpenFallbackModal(!isOpenFallbackModal)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Transformer\r\n                id={id}\r\n                ref={$tr}\r\n                ignoreStroke={true}\r\n                boundBoxFunc={(oldBox, newBox) => {\r\n                    if (selectedShapeName === \"shapes_background\") return oldBox\r\n                    if (newBox.width < MIN_WIDTH) {\r\n                        return { ...oldBox, width: MIN_WIDTH };\r\n                    }\r\n                    return newBox;\r\n                }}\r\n            >\r\n                <Html >\r\n                    <div >\r\n                        <button onClick={handleOpenFallbackModal}>\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\r\n                            </svg>\r\n                        </button>\r\n                        <div className={!!isOpenFallbackModal ? \"\" : \"hidden\"}>\r\n                            <ImageFallbackModal\r\n                                closeModal={() => {\r\n                                    // setIsOpenFallbackModal(false);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </Html>\r\n            </Transformer>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TransformerComponent"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjCA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAOA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;;;;A","sourceRoot":""}