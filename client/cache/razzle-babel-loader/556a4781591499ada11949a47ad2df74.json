{"ast":null,"code":"import _extends from \"C:/Users/HP/cardclan-backend/client/node_modules/@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\cardclan-backend\\\\client\\\\src\\\\Screens\\\\CreateCardLayout\\\\components\\\\DesignTool\\\\Components\\\\Card\\\\MainCanvas\\\\UText.tsx\",\n    _this = this;\n\nvar __jsx = React.createElement;\nimport React, { useRef } from 'react';\nimport { Text } from 'react-konva';\n\nvar UText = function UText(_ref) {\n  var textProps = _ref.textProps,\n      onChange = _ref.onChange,\n      onSelect = _ref.onSelect,\n      onEditClick = _ref.onEditClick;\n  var textNode = useRef(null);\n  return __jsx(Text, _extends({\n    ref: textNode,\n    draggable: true,\n    onClick: onSelect,\n    onTap: onSelect,\n    onDblClick: onEditClick,\n    onDblTap: onEditClick,\n    onTransform: function onTransform(e) {\n      var SX = textNode.current.scaleX();\n      var W = textNode.current.width();\n      textNode.current.setAttrs({\n        // ...textNode.current.getAttrs(),\n        // fontSize: isWordWrapping ? textNode.current.fontSize() : textNode.current.fontSize() * textNode.current.scaleX(),\n        width: W * SX,\n        scaleX: 1,\n        scaleY: 1\n      });\n    } // onTransformEnd={onChange}\n    ,\n    onDragEnd: onChange\n  }, textProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default UText;","map":{"version":3,"sources":["C:/Users/HP/cardclan-backend/client/src/Screens/CreateCardLayout/components/DesignTool/Components/Card/MainCanvas/UText.tsx"],"names":["React","useRef","Text","UText","textProps","onChange","onSelect","onEditClick","textNode","e","SX","current","scaleX","W","width","setAttrs","scaleY"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,IAAT,QAAqB,aAArB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAoD;AAAA,MAAjDC,SAAiD,QAAjDA,SAAiD;AAAA,MAAtCC,QAAsC,QAAtCA,QAAsC;AAAA,MAA5BC,QAA4B,QAA5BA,QAA4B;AAAA,MAAlBC,WAAkB,QAAlBA,WAAkB;AAC9D,MAAMC,QAAQ,GAAGP,MAAM,CAAC,IAAD,CAAvB;AAEA,SACI,MAAC,IAAD;AACI,IAAA,GAAG,EAAEO,QADT;AAEI,IAAA,SAAS,MAFb;AAGI,IAAA,OAAO,EAAEF,QAHb;AAII,IAAA,KAAK,EAAEA,QAJX;AAKI,IAAA,UAAU,EAAEC,WALhB;AAMI,IAAA,QAAQ,EAAEA,WANd;AAOI,IAAA,WAAW,EAAE,qBAACE,CAAD,EAAO;AAChB,UAAIC,EAAE,GAAGF,QAAQ,CAACG,OAAT,CAAiBC,MAAjB,EAAT;AACA,UAAIC,CAAC,GAAGL,QAAQ,CAACG,OAAT,CAAiBG,KAAjB,EAAR;AAEAN,MAAAA,QAAQ,CAACG,OAAT,CAAiBI,QAAjB,CAA0B;AACtB;AACA;AACAD,QAAAA,KAAK,EAAED,CAAC,GAAGH,EAHW;AAItBE,QAAAA,MAAM,EAAE,CAJc;AAKtBI,QAAAA,MAAM,EAAE;AALc,OAA1B;AAOH,KAlBL,CAmBI;AAnBJ;AAoBI,IAAA,SAAS,EAAEX;AApBf,KAqBQD,SArBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAyBH,CA5BD;;AA8BA,eAAeD,KAAf","sourcesContent":["import React, { useRef } from 'react'\r\nimport { Text } from 'react-konva'\r\n\r\nconst UText = ({ textProps, onChange, onSelect, onEditClick }) => {\r\n    const textNode = useRef(null)\r\n\r\n    return (\r\n        <Text\r\n            ref={textNode}\r\n            draggable\r\n            onClick={onSelect}\r\n            onTap={onSelect}\r\n            onDblClick={onEditClick}\r\n            onDblTap={onEditClick}\r\n            onTransform={(e) => {\r\n                let SX = textNode.current.scaleX();\r\n                let W = textNode.current.width();\r\n\r\n                textNode.current.setAttrs({\r\n                    // ...textNode.current.getAttrs(),\r\n                    // fontSize: isWordWrapping ? textNode.current.fontSize() : textNode.current.fontSize() * textNode.current.scaleX(),\r\n                    width: W * SX,\r\n                    scaleX: 1,\r\n                    scaleY: 1\r\n                });\r\n            }}\r\n            // onTransformEnd={onChange}\r\n            onDragEnd={onChange}\r\n            {...textProps}\r\n        />\r\n    )\r\n}\r\n\r\nexport default UText\r\n"]},"metadata":{},"sourceType":"module"}