{"ast":null,"code":"var _jsxFileName = \"D:\\\\dev\\\\hyper-engage\\\\web\\\\src\\\\Screens\\\\CreateCardLayout\\\\components\\\\DesignTool\\\\Components\\\\Card\\\\MainCanvas\\\\index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\n\nconst DesignTool = () => {\n  // const [variationIndex, setVariationIndex] = useState<number>(0)\n  // const [templateData, setTemplateData, { goForward, goBack, stepNum }] = useContext(TemplateContext)\n  // const [selectedId, setSelectedId] = useState<string | null>(null);\n  // const [isOpenColorPicker, setIsOpenColorPicker] = useState<boolean>(false)\n  // const [isEditTextBox, setIsEditTextBox] = useState(false)\n  // const unSelectAll = () => {\n  //     setIsOpenColorPicker(false)\n  //     setIsEditTextBox(false)\n  //     setSelectedId(null)\n  // }\n  // const handleEscape = (e) => {\n  //     if (e.key === \"Escape\") {\n  //         unSelectAll()\n  //     }\n  // }\n  // useEffect(() => {\n  //     document.addEventListener(\"keydown\", handleEscape, false);\n  //     WebFont.load({\n  //         google: {\n  //             families: ['Comfortaa', 'Josefin Sans', 'Euphoria Script', 'Oswald', 'Alfa Slab One', 'Bangers', 'Caveat', 'DM Sans', 'East Sea Dokdo', 'Homemade Apple', 'Kristi', 'Lobster Two', 'Maven Pro', 'Monoton', 'Montserrat', 'Playfair Display', 'Press Start 2P', 'Raleway', 'Roboto Slab', 'Shadows Into Light', 'Swanky and Moo Moo']\n  //         }\n  //     });\n  //     return () => {\n  //         document.removeEventListener(\"keydown\", handleEscape, false);\n  //     };\n  // }, []);\n  const onUndo = () => {\n    !!setSelectedId && unSelectAll();\n    stepNum > 1 && goBack();\n  };\n\n  const onRedo = () => {\n    !!setSelectedId && unSelectAll();\n    stepNum < history.length - 1 && goForward();\n  }; // const handleEditSelectedItem = () => {\n  //     if (selectedId?.split(\"_\")[0] === \"textBoxes\") {\n  //         setIsEditTextBox(true)\n  //         return\n  //     }\n  //     setIsOpenColorPicker(true)\n  // }\n  // const handleDeleteSelectedItem = () => {\n  //     const type = selectedId?.split(\"_\")[0]\n  //     setTemplateData(prev => {\n  //         prev.variations[variationIndex][type] = prev.variations[variationIndex][type].filter(\n  //             item => item.id !== selectedId\n  //         )\n  //         unSelectAll()\n  //     })\n  // }\n\n\n  const handleCloseEditTextModal = () => {\n    setIsEditTextBox(false);\n  };\n\n  return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 12\n    }\n  }, \"HELO\"); // return (\n  //     <div className=\"min-w-max\">\n  //         <div className=\"h-20 mb-5 flex flex-wrap justify-center content-center bg-green-800\">\n  //             <p className=\"text-xl text-white\">Tempalte Design</p>\n  //         </div>\n  //         <div className=\"grid grid-cols-3 gap-4\">\n  //             {/* first col */}\n  //             <SideBar variationIndex={variationIndex} setTemplateData={setTemplateData} />\n  //             {/* Center column */}\n  //             <div>\n  //                 <TopToolBar\n  //                     onUndo={onUndo}\n  //                     onRedo={onRedo}\n  //                     setTemplateData={setTemplateData}\n  //                     variationIndex={variationIndex}\n  //                     selectedId={selectedId}\n  //                 />\n  //                 <div className=\"flex justify-center mt-5\">\n  //                     <MainStage\n  //                         templateData={templateData}\n  //                         setTemplateData={setTemplateData}\n  //                         variationIndex={variationIndex}\n  //                         selectedId={selectedId}\n  //                         setSelectedId={setSelectedId}\n  //                         unSelectAll={unSelectAll}\n  //                         handleEditSelectedItem={handleEditSelectedItem}\n  //                     />\n  //                 </div>\n  //             </div>\n  //             {/* third col */}\n  //             <div className={selectedId ? \"\" : \"hidden\"}>\n  //                 <EditingTools\n  //                     selectedId={selectedId}\n  //                     unSelectAll={unSelectAll}\n  //                     isOpenColorPicker={isOpenColorPicker}\n  //                     isEditTextBox={isEditTextBox}\n  //                     templateData={templateData}\n  //                     setTemplateData={setTemplateData}\n  //                     variationIndex={variationIndex}\n  //                     handleEditSelectedItem={handleEditSelectedItem}\n  //                     handleDeleteSelectedItem={handleDeleteSelectedItem}\n  //                     handleCloseEditTextModal={handleCloseEditTextModal}\n  //                 />\n  //             </div>\n  //         </div>\n  //     </div >\n  // );\n};\n\nexport default DesignTool;","map":{"version":3,"sources":["D:/dev/hyper-engage/web/src/Screens/CreateCardLayout/components/DesignTool/Components/Card/MainCanvas/index.tsx"],"names":["React","DesignTool","onUndo","setSelectedId","unSelectAll","stepNum","goBack","onRedo","history","length","goForward","handleCloseEditTextModal","setIsEditTextBox"],"mappings":";;AAAA,OAAOA,KAAP,MAAuD,OAAvD;;AAQA,MAAMC,UAAoB,GAAG,MAAM;AAE/B;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA,QAAMC,MAAM,GAAG,MAAM;AACjB,KAAC,CAACC,aAAF,IAAmBC,WAAW,EAA9B;AACAC,IAAAA,OAAO,GAAG,CAAV,IAAeC,MAAM,EAArB;AACH,GAHD;;AAIA,QAAMC,MAAM,GAAG,MAAM;AACjB,KAAC,CAACJ,aAAF,IAAmBC,WAAW,EAA9B;AACAC,IAAAA,OAAO,GAAIG,OAAO,CAACC,MAAR,GAAiB,CAA5B,IAAkCC,SAAS,EAA3C;AACH,GAHD,CAtC+B,CA2C/B;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAMC,wBAAwB,GAAG,MAAM;AACnCC,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH,GAFD;;AAIA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP,CAjE+B,CAmE/B;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACH,CA1HD;;AA2HA,eAAeX,UAAf","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { TemplateContext } from '../../../../../../../contexts/TemplateContext';\r\nimport SideBar from './SideBar';\r\nimport WebFont from \"webfontloader\";\r\nimport TopToolBar from './TopToolBar';\r\nimport MainStage from './MainStage';\r\nimport EditingTools from './EditingTools';\r\n\r\nconst DesignTool: React.FC = () => {\r\n\r\n    // const [variationIndex, setVariationIndex] = useState<number>(0)\r\n\r\n    // const [templateData, setTemplateData, { goForward, goBack, stepNum }] = useContext(TemplateContext)\r\n    // const [selectedId, setSelectedId] = useState<string | null>(null);\r\n    // const [isOpenColorPicker, setIsOpenColorPicker] = useState<boolean>(false)\r\n    // const [isEditTextBox, setIsEditTextBox] = useState(false)\r\n\r\n    // const unSelectAll = () => {\r\n    //     setIsOpenColorPicker(false)\r\n    //     setIsEditTextBox(false)\r\n    //     setSelectedId(null)\r\n    // }\r\n\r\n    // const handleEscape = (e) => {\r\n    //     if (e.key === \"Escape\") {\r\n    //         unSelectAll()\r\n    //     }\r\n    // }\r\n\r\n    // useEffect(() => {\r\n    //     document.addEventListener(\"keydown\", handleEscape, false);\r\n    //     WebFont.load({\r\n    //         google: {\r\n    //             families: ['Comfortaa', 'Josefin Sans', 'Euphoria Script', 'Oswald', 'Alfa Slab One', 'Bangers', 'Caveat', 'DM Sans', 'East Sea Dokdo', 'Homemade Apple', 'Kristi', 'Lobster Two', 'Maven Pro', 'Monoton', 'Montserrat', 'Playfair Display', 'Press Start 2P', 'Raleway', 'Roboto Slab', 'Shadows Into Light', 'Swanky and Moo Moo']\r\n    //         }\r\n    //     });\r\n\r\n    //     return () => {\r\n    //         document.removeEventListener(\"keydown\", handleEscape, false);\r\n    //     };\r\n    // }, []);\r\n\r\n    const onUndo = () => {\r\n        !!setSelectedId && unSelectAll();\r\n        stepNum > 1 && goBack();\r\n    };\r\n    const onRedo = () => {\r\n        !!setSelectedId && unSelectAll();\r\n        stepNum < (history.length - 1) && goForward();\r\n    };\r\n\r\n    // const handleEditSelectedItem = () => {\r\n    //     if (selectedId?.split(\"_\")[0] === \"textBoxes\") {\r\n    //         setIsEditTextBox(true)\r\n    //         return\r\n    //     }\r\n    //     setIsOpenColorPicker(true)\r\n    // }\r\n\r\n    // const handleDeleteSelectedItem = () => {\r\n    //     const type = selectedId?.split(\"_\")[0]\r\n    //     setTemplateData(prev => {\r\n    //         prev.variations[variationIndex][type] = prev.variations[variationIndex][type].filter(\r\n    //             item => item.id !== selectedId\r\n    //         )\r\n    //         unSelectAll()\r\n    //     })\r\n    // }\r\n\r\n    const handleCloseEditTextModal = () => {\r\n        setIsEditTextBox(false)\r\n    }\r\n\r\n    return <p>HELO</p>\r\n\r\n    // return (\r\n    //     <div className=\"min-w-max\">\r\n    //         <div className=\"h-20 mb-5 flex flex-wrap justify-center content-center bg-green-800\">\r\n    //             <p className=\"text-xl text-white\">Tempalte Design</p>\r\n    //         </div>\r\n\r\n    //         <div className=\"grid grid-cols-3 gap-4\">\r\n\r\n    //             {/* first col */}\r\n    //             <SideBar variationIndex={variationIndex} setTemplateData={setTemplateData} />\r\n\r\n    //             {/* Center column */}\r\n    //             <div>\r\n    //                 <TopToolBar\r\n    //                     onUndo={onUndo}\r\n    //                     onRedo={onRedo}\r\n    //                     setTemplateData={setTemplateData}\r\n    //                     variationIndex={variationIndex}\r\n    //                     selectedId={selectedId}\r\n    //                 />\r\n    //                 <div className=\"flex justify-center mt-5\">\r\n    //                     <MainStage\r\n    //                         templateData={templateData}\r\n    //                         setTemplateData={setTemplateData}\r\n    //                         variationIndex={variationIndex}\r\n    //                         selectedId={selectedId}\r\n    //                         setSelectedId={setSelectedId}\r\n    //                         unSelectAll={unSelectAll}\r\n    //                         handleEditSelectedItem={handleEditSelectedItem}\r\n    //                     />\r\n    //                 </div>\r\n\r\n    //             </div>\r\n\r\n    //             {/* third col */}\r\n    //             <div className={selectedId ? \"\" : \"hidden\"}>\r\n    //                 <EditingTools\r\n    //                     selectedId={selectedId}\r\n    //                     unSelectAll={unSelectAll}\r\n    //                     isOpenColorPicker={isOpenColorPicker}\r\n    //                     isEditTextBox={isEditTextBox}\r\n    //                     templateData={templateData}\r\n    //                     setTemplateData={setTemplateData}\r\n    //                     variationIndex={variationIndex}\r\n    //                     handleEditSelectedItem={handleEditSelectedItem}\r\n    //                     handleDeleteSelectedItem={handleDeleteSelectedItem}\r\n    //                     handleCloseEditTextModal={handleCloseEditTextModal}\r\n    //                 />\r\n    //             </div>\r\n\r\n    //         </div>\r\n\r\n\r\n    //     </div >\r\n    // );\r\n};\r\nexport default DesignTool\r\n"]},"metadata":{},"sourceType":"module"}