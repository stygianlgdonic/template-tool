{"ast":null,"code":"var _jsxFileName = \"D:\\\\dev\\\\hyper-engage\\\\web\\\\src\\\\Screens\\\\CreateCardLayout\\\\components\\\\DesignTool\\\\Components\\\\Card\\\\tailwindComponents\\\\EditTextBox.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { googleFontsList } from '../../../../../../../utils/defaults';\n\nconst EditTextBox = ({\n  selectedId,\n  variationIndex,\n  templateData,\n  setTemplateData,\n  handleCloseEditTextModal\n}) => {\n  const {\n    0: inputValue,\n    1: setInputValue\n  } = useState(\"\");\n  const {\n    0: fontSize,\n    1: setFontSize\n  } = useState(20);\n  const {\n    0: fontStyle,\n    1: setFontStyle\n  } = useState(\"normal\"); // const [fontFamily, setFontFamily] = useState(googleFontsList[0]);\n\n  const {\n    0: fontFamily,\n    1: setFontFamily\n  } = useState(\"Montserrat\");\n  const {\n    0: textAlign,\n    1: setTextAlign\n  } = useState(\"left\");\n  useEffect(() => {\n    if ((selectedId === null || selectedId === void 0 ? void 0 : selectedId.split(\"_\")[0]) === \"textBoxes\") {\n      const index = templateData.variations[variationIndex].textBoxes.findIndex(item => item.id === selectedId);\n      setInputValue(templateData.variations[variationIndex].textBoxes[index].text);\n      setFontSize(templateData.variations[variationIndex].textBoxes[index].fontSize);\n      setFontFamily(templateData.variations[variationIndex].textBoxes[index].fontFamily);\n      setTextAlign(templateData.variations[variationIndex].textBoxes[index].align);\n    }\n  }, [selectedId]);\n\n  const handleSave = () => {\n    setTemplateData(prev => {\n      const index = prev.variations[variationIndex].textBoxes.findIndex(item => item.id === selectedId);\n      prev.variations[variationIndex].textBoxes[index].text = inputValue;\n      prev.variations[variationIndex].textBoxes[index].fontSize = fontSize;\n      prev.variations[variationIndex].textBoxes[index].fontStyle = fontStyle;\n      prev.variations[variationIndex].textBoxes[index].fontFamily = fontFamily;\n      prev.variations[variationIndex].textBoxes[index].align = textAlign;\n    });\n    handleCloseEditTextModal();\n  };\n\n  return __jsx(\"div\", {\n    className: \"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, \"Font Size:\"), __jsx(\"input\", {\n    className: \"border mb-5\",\n    type: \"number\",\n    value: fontSize,\n    onChange: e => setFontSize(parseInt(e.target.value)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, \"Select Font style:\"), __jsx(\"select\", {\n    className: \"border mb-5\",\n    name: \"font-style\",\n    onChange: e => setFontStyle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, __jsx(\"option\", {\n    value: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }, \"normal\"), __jsx(\"option\", {\n    value: \"bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }, \"bold\"), __jsx(\"option\", {\n    value: \"italic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, \"italic\"), __jsx(\"option\", {\n    value: \"italic bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }, \"italic bold\")), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, \"Select Text Alignment:\"), __jsx(\"select\", {\n    className: \"border mb-5\",\n    name: \"text-align\",\n    onChange: e => setTextAlign(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, __jsx(\"option\", {\n    value: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }, \"left\"), __jsx(\"option\", {\n    value: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }, \"center\"), __jsx(\"option\", {\n    value: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, \"right\")), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, \"Select font family:\"), __jsx(\"select\", {\n    value: fontFamily,\n    style: {\n      fontFamily: fontFamily\n    },\n    onChange: e => setFontFamily(e.target.value),\n    className: \"border mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, googleFontsList.map((val, index) => {\n    return __jsx(\"option\", {\n      className: \"bg-white text-black\",\n      style: {\n        fontFamily: val\n      },\n      key: index,\n      selected: val === fontFamily,\n      value: val,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 33\n      }\n    }, val);\n  }))), __jsx(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, __jsx(\"textarea\", {\n    className: \"border h-40 w-full\",\n    style: {\n      fontFamily: fontFamily,\n      fontSize: fontSize,\n      fontStyle: fontStyle,\n      textAlign: textAlign\n    },\n    value: inputValue,\n    onChange: e => setInputValue(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }))), __jsx(\"div\", {\n    className: \"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    onClick: handleSave,\n    type: \"button\",\n    className: \"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, \"Done\")));\n};\n\nexport default EditTextBox;","map":{"version":3,"sources":["D:/dev/hyper-engage/web/src/Screens/CreateCardLayout/components/DesignTool/Components/Card/tailwindComponents/EditTextBox.tsx"],"names":["React","useEffect","useState","googleFontsList","EditTextBox","selectedId","variationIndex","templateData","setTemplateData","handleCloseEditTextModal","inputValue","setInputValue","fontSize","setFontSize","fontStyle","setFontStyle","fontFamily","setFontFamily","textAlign","setTextAlign","split","index","variations","textBoxes","findIndex","item","id","text","align","handleSave","prev","e","parseInt","target","value","map","val"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { googleFontsList } from '../../../../../../../utils/defaults'\r\n\r\ninterface Props {\r\n    selectedId: string\r\n    variationIndex: number\r\n    templateData: any\r\n    setTemplateData: any\r\n    handleCloseEditTextModal: any\r\n}\r\n\r\nconst EditTextBox: React.FC<Props> = ({ selectedId, variationIndex, templateData, setTemplateData, handleCloseEditTextModal }) => {\r\n\r\n    const [inputValue, setInputValue] = useState<string>(\"\")\r\n    const [fontSize, setFontSize] = useState<number>(20)\r\n    const [fontStyle, setFontStyle] = useState<string>(\"normal\")\r\n    // const [fontFamily, setFontFamily] = useState(googleFontsList[0]);\r\n    const [fontFamily, setFontFamily] = useState(\"Montserrat\");\r\n    const [textAlign, setTextAlign] = useState(\"left\")\r\n\r\n    useEffect(() => {\r\n        if (selectedId?.split(\"_\")[0] === \"textBoxes\") {\r\n            const index = templateData.variations[variationIndex].textBoxes.findIndex(item => item.id === selectedId)\r\n            setInputValue(templateData.variations[variationIndex].textBoxes[index].text)\r\n            setFontSize(templateData.variations[variationIndex].textBoxes[index].fontSize)\r\n            setFontFamily(templateData.variations[variationIndex].textBoxes[index].fontFamily)\r\n            setTextAlign(templateData.variations[variationIndex].textBoxes[index].align)\r\n        }\r\n    }, [selectedId])\r\n\r\n    const handleSave = () => {\r\n        setTemplateData(prev => {\r\n            const index = prev.variations[variationIndex].textBoxes.findIndex(item => item.id === selectedId)\r\n            prev.variations[variationIndex].textBoxes[index].text = inputValue\r\n            prev.variations[variationIndex].textBoxes[index].fontSize = fontSize\r\n            prev.variations[variationIndex].textBoxes[index].fontStyle = fontStyle\r\n            prev.variations[variationIndex].textBoxes[index].fontFamily = fontFamily\r\n            prev.variations[variationIndex].textBoxes[index].align = textAlign\r\n        })\r\n        handleCloseEditTextModal()\r\n    }\r\n\r\n    return (\r\n        <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\r\n            <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\r\n                <div className=\"\">\r\n                    <p>Font Size:</p>\r\n                    <input className=\"border mb-5\" type=\"number\" value={fontSize} onChange={e => setFontSize(parseInt(e.target.value))} />\r\n                    <p>Select Font style:</p>\r\n                    <select className=\"border mb-5\" name=\"font-style\" onChange={e => setFontStyle(e.target.value)}>\r\n                        <option value=\"normal\">normal</option>\r\n                        <option value=\"bold\">bold</option>\r\n                        <option value=\"italic\">italic</option>\r\n                        <option value=\"italic bold\">italic bold</option>\r\n                    </select>\r\n                    <p>Select Text Alignment:</p>\r\n                    <select className=\"border mb-5\" name=\"text-align\" onChange={e => setTextAlign(e.target.value)}>\r\n                        <option value=\"left\">left</option>\r\n                        <option value=\"center\">center</option>\r\n                        <option value=\"right\">right</option>\r\n                    </select>\r\n                    <p>Select font family:</p>\r\n                    <select\r\n                        value={fontFamily}\r\n                        style={{ fontFamily: fontFamily }}\r\n                        onChange={e => setFontFamily(e.target.value)}\r\n                        className=\"border mb-5\"\r\n                    >\r\n                        {googleFontsList.map((val, index) => {\r\n                            return (\r\n                                <option\r\n                                    className=\"bg-white text-black\"\r\n                                    style={{ fontFamily: val }}\r\n                                    key={index}\r\n                                    selected={val === fontFamily}\r\n                                    value={val}\r\n                                >\r\n                                    {val}\r\n                                </option>\r\n                            );\r\n                        })}\r\n                    </select>\r\n                </div>\r\n                <div className=\"\">\r\n                    <textarea\r\n                        className=\"border h-40 w-full\"\r\n                        style={{\r\n                            fontFamily: fontFamily,\r\n                            fontSize: fontSize,\r\n                            fontStyle: fontStyle,\r\n                            textAlign: textAlign as \"center\",\r\n                        }}\r\n                        value={inputValue}\r\n                        onChange={(e) => setInputValue(e.target.value)}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\r\n                <button\r\n                    onClick={handleSave}\r\n                    type=\"button\"\r\n                    className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\">\r\n                    Done\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditTextBox\r\n"]},"metadata":{},"sourceType":"module"}