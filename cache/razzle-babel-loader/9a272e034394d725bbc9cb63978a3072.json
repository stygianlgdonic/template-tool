{"ast":null,"code":"var _jsxFileName = \"D:\\\\dev\\\\template-tool\\\\src\\\\components\\\\SelectPalette.tsx\",\n    _this = this;\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport useTemplateData from '../hooks/useTemplateData';\n\nvar SelectPalette = function SelectPalette() {\n  var _useTemplateData = useTemplateData(),\n      templateData = _useTemplateData.templateData,\n      setTemplateData = _useTemplateData.setTemplateData;\n\n  var _useState = useState(false),\n      showColorPicker = _useState[0],\n      setShowColorPicker = _useState[1];\n\n  var _useState2 = useState(null),\n      currentSelectedColor = _useState2[0],\n      setCurrentSelectedColor = _useState2[1];\n\n  var handleShowColorPicker = function handleShowColorPicker(Color) {\n    console.log({\n      Color: Color\n    });\n    setShowColorPicker(true);\n    setCurrentSelectedColor(Color);\n  };\n\n  var handleCloseColorPicker = function handleCloseColorPicker() {\n    setShowColorPicker(false);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, \"Select Palette\"), templateData.palette.map(function (item) {\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, item.name, \" : \", __jsx(\"div\", {\n      style: {\n        backgroundColor: item.color,\n        width: '30px',\n        height: '30px'\n      },\n      onClick: function onClick() {\n        return handleShowColorPicker(item);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 35\n      }\n    }));\n  }), __jsx(\"div\", {\n    style: {\n      display: showColorPicker ? \"\" : \"none\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, __jsx(SketchPicker, {\n    color: currentSelectedColor,\n    onChange: handleColorChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }), __jsx(\"button\", {\n    onClick: handleCloseColorPicker,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, \"Close\")));\n};\n\nexport default SelectPalette;","map":{"version":3,"sources":["D:/dev/template-tool/src/components/SelectPalette.tsx"],"names":["React","useState","useTemplateData","SelectPalette","templateData","setTemplateData","showColorPicker","setShowColorPicker","currentSelectedColor","setCurrentSelectedColor","handleShowColorPicker","Color","console","log","handleCloseColorPicker","palette","map","item","name","backgroundColor","color","width","height","display","handleColorChange"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,eAAP,MAA4B,0BAA5B;;AAOA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAExB,yBAA0CD,eAAe,EAAzD;AAAA,MAAQE,YAAR,oBAAQA,YAAR;AAAA,MAAsBC,eAAtB,oBAAsBA,eAAtB;;AACA,kBAA8CJ,QAAQ,CAAU,KAAV,CAAtD;AAAA,MAAOK,eAAP;AAAA,MAAwBC,kBAAxB;;AACA,mBAAwDN,QAAQ,CAAgB,IAAhB,CAAhE;AAAA,MAAOO,oBAAP;AAAA,MAA6BC,uBAA7B;;AAEA,MAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,KAAD,EAAmB;AAC7CC,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEF,MAAAA,KAAK,EAALA;AAAF,KAAZ;AACAJ,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAE,IAAAA,uBAAuB,CAACE,KAAD,CAAvB;AACH,GAJD;;AAMA,MAAMG,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAM;AACjCP,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACH,GAFD;;AAIA,SACI,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEKH,YAAY,CAACW,OAAb,CAAqBC,GAArB,CAAyB,UAAAC,IAAI;AAAA,WAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,IAAI,CAACC,IADV,SACkB;AACV,MAAA,KAAK,EAAE;AAAEC,QAAAA,eAAe,EAAEF,IAAI,CAACG,KAAxB;AAA+BC,QAAAA,KAAK,EAAE,MAAtC;AAA8CC,QAAAA,MAAM,EAAE;AAAtD,OADG;AAEV,MAAA,OAAO,EAAE;AAAA,eAAMZ,qBAAqB,CAACO,IAAD,CAA3B;AAAA,OAFC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADlB,CAD0B;AAAA,GAA7B,CAFL,EAUI;AAAK,IAAA,KAAK,EAAE;AAAEM,MAAAA,OAAO,EAAEjB,eAAe,GAAG,EAAH,GAAQ;AAAlC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,YAAD;AACI,IAAA,KAAK,EAAEE,oBADX;AAEI,IAAA,QAAQ,EAAEgB,iBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAMI;AAAQ,IAAA,OAAO,EAAEV,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANJ,CAVJ,CADJ;AAqBH,CArCD;;AAuCA,eAAeX,aAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport useTemplateData from '../hooks/useTemplateData'\r\n\r\ninterface IColor {\r\n    name: string\r\n    color: string\r\n}\r\n\r\nconst SelectPalette = () => {\r\n\r\n    const { templateData, setTemplateData } = useTemplateData()\r\n    const [showColorPicker, setShowColorPicker] = useState<boolean>(false)\r\n    const [currentSelectedColor, setCurrentSelectedColor] = useState<IColor | null>(null)\r\n\r\n    const handleShowColorPicker = (Color: IColor) => {\r\n        console.log({ Color })\r\n        setShowColorPicker(true)\r\n        setCurrentSelectedColor(Color)\r\n    }\r\n\r\n    const handleCloseColorPicker = () => {\r\n        setShowColorPicker(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div>Select Palette</div>\r\n            {templateData.palette.map(item => (\r\n                <div>\r\n                    {item.name} : <div\r\n                        style={{ backgroundColor: item.color, width: '30px', height: '30px' }}\r\n                        onClick={() => handleShowColorPicker(item)}\r\n                    ></div>\r\n                </div>\r\n            ))}\r\n            <div style={{ display: showColorPicker ? \"\" : \"none\" }}>\r\n                <SketchPicker\r\n                    color={currentSelectedColor}\r\n                    onChange={handleColorChange}\r\n                />\r\n                <br />\r\n                <button onClick={handleCloseColorPicker}>Close</button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SelectPalette\r\n"]},"metadata":{},"sourceType":"module"}