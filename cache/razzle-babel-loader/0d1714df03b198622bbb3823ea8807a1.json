{"ast":null,"code":"import _objectSpread from \"D:/dev/template-tool/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"D:\\\\dev\\\\template-tool\\\\src\\\\components\\\\SelectPalette.tsx\",\n    _this = this;\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport useTemplateData from '../hooks/useTemplateData';\nimport { SketchPicker } from 'react-color';\nimport { NavLink } from 'react-router-dom';\nimport { ROUTE_NAMES } from '../routes/route_names';\n\nvar SelectPalette = function SelectPalette() {\n  var _useTemplateData = useTemplateData(),\n      templateData = _useTemplateData.templateData,\n      setTemplateData = _useTemplateData.setTemplateData;\n\n  var _useState = useState(false),\n      showColorPicker = _useState[0],\n      setShowColorPicker = _useState[1];\n\n  var _useState2 = useState(null),\n      currentSelectedColor = _useState2[0],\n      setCurrentSelectedColor = _useState2[1];\n\n  var handleShowColorPicker = function handleShowColorPicker(Color) {\n    setShowColorPicker(true);\n    setCurrentSelectedColor(Color);\n  };\n\n  var handleCloseColorPicker = function handleCloseColorPicker() {\n    setShowColorPicker(false);\n  };\n\n  var handleColorChange = function handleColorChange(colorObj) {\n    setTemplateData(function (prev) {\n      var index = prev.palette.findIndex(function (item) {\n        return item.name === (currentSelectedColor === null || currentSelectedColor === void 0 ? void 0 : currentSelectedColor.name);\n      });\n      prev.palette[index].color = colorObj.hex;\n      setCurrentSelectedColor(_objectSpread(_objectSpread({}, currentSelectedColor), {}, {\n        color: colorObj.hex\n      }));\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"Select Palette for your template\"), templateData.palette.map(function (item, index) {\n    return __jsx(\"div\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, item.name, \" : \", __jsx(\"div\", {\n      style: {\n        backgroundColor: item.color,\n        width: '30px',\n        height: '30px'\n      },\n      onClick: function onClick() {\n        return handleShowColorPicker(item);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 35\n      }\n    }));\n  }), __jsx(\"div\", {\n    style: {\n      display: showColorPicker ? \"\" : \"none\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, __jsx(SketchPicker, {\n    color: currentSelectedColor === null || currentSelectedColor === void 0 ? void 0 : currentSelectedColor.color,\n    onChange: handleColorChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }), __jsx(\"button\", {\n    onClick: handleCloseColorPicker,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \"Close\")), __jsx(\"div\", {\n    style: {\n      marginTop: '50px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, __jsx(NavLink, {\n    to: ROUTE_NAMES.design_tool,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \"Proceed\")));\n};\n\nexport default SelectPalette;","map":{"version":3,"sources":["D:/dev/template-tool/src/components/SelectPalette.tsx"],"names":["React","useState","useTemplateData","SketchPicker","NavLink","ROUTE_NAMES","SelectPalette","templateData","setTemplateData","showColorPicker","setShowColorPicker","currentSelectedColor","setCurrentSelectedColor","handleShowColorPicker","Color","handleCloseColorPicker","handleColorChange","colorObj","prev","index","palette","findIndex","item","name","color","hex","map","backgroundColor","width","height","display","marginTop","design_tool"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport useTemplateData from '../hooks/useTemplateData'\r\nimport { SketchPicker } from 'react-color'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { ROUTE_NAMES } from '../routes/route_names'\r\n\r\ninterface IColor {\r\n    name: string\r\n    color: string\r\n}\r\n\r\nconst SelectPalette = () => {\r\n\r\n    const { templateData, setTemplateData } = useTemplateData()\r\n    const [showColorPicker, setShowColorPicker] = useState<boolean>(false)\r\n    const [currentSelectedColor, setCurrentSelectedColor] = useState<IColor | null>(null)\r\n\r\n    const handleShowColorPicker = (Color: IColor) => {\r\n        setShowColorPicker(true)\r\n        setCurrentSelectedColor(Color)\r\n    }\r\n\r\n    const handleCloseColorPicker = () => {\r\n        setShowColorPicker(false)\r\n    }\r\n\r\n    const handleColorChange = (colorObj: any) => {\r\n        setTemplateData(prev => {\r\n            const index = prev.palette.findIndex(item => item.name === currentSelectedColor?.name)\r\n            prev.palette[index].color = colorObj.hex\r\n            setCurrentSelectedColor({ ...currentSelectedColor, color: colorObj.hex })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div>Select Palette for your template</div>\r\n            {templateData.palette.map((item, index) => (\r\n                <div key={index} >\r\n                    {item.name} : <div\r\n                        style={{ backgroundColor: item.color, width: '30px', height: '30px' }}\r\n                        onClick={() => handleShowColorPicker(item)}\r\n                    ></div>\r\n                </div>\r\n            ))}\r\n            <div style={{ display: showColorPicker ? \"\" : \"none\" }}>\r\n                <SketchPicker\r\n                    color={currentSelectedColor?.color}\r\n                    onChange={handleColorChange}\r\n                />\r\n                <br />\r\n                <button onClick={handleCloseColorPicker}>Close</button>\r\n            </div>\r\n            <div style={{ marginTop: '50px' }}>\r\n                <NavLink to={ROUTE_NAMES.design_tool}>Proceed</NavLink>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SelectPalette\r\n"]},"metadata":{},"sourceType":"module"}