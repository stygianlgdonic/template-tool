{"ast":null,"code":"var _jsxFileName = \"D:\\\\dev\\\\template-tool\\\\src\\\\components\\\\SelectPalette.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport useTemplateData from '../hooks/useTemplateData';\nimport { SketchPicker } from 'react-color';\nimport { NavLink } from 'react-router-dom';\n\nconst SelectPalette = () => {\n  const {\n    templateData,\n    setTemplateData\n  } = useTemplateData();\n  const {\n    0: showColorPicker,\n    1: setShowColorPicker\n  } = useState(false);\n  const {\n    0: currentSelectedColor,\n    1: setCurrentSelectedColor\n  } = useState(null);\n\n  const handleShowColorPicker = Color => {\n    setShowColorPicker(true);\n    setCurrentSelectedColor(Color);\n  };\n\n  const handleCloseColorPicker = () => {\n    setShowColorPicker(false);\n  };\n\n  const handleColorChange = colorObj => {\n    setTemplateData(prev => {\n      const index = prev.palette.findIndex(item => item.name === (currentSelectedColor === null || currentSelectedColor === void 0 ? void 0 : currentSelectedColor.name));\n      prev.palette[index].color = colorObj.hex;\n      setCurrentSelectedColor(_objectSpread(_objectSpread({}, currentSelectedColor), {}, {\n        color: colorObj.hex\n      }));\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"Select Palette\"), templateData.palette.map(item => __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, item.name, \" : \", __jsx(\"div\", {\n    style: {\n      backgroundColor: item.color,\n      width: '30px',\n      height: '30px'\n    },\n    onClick: () => handleShowColorPicker(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 35\n    }\n  }))), __jsx(\"div\", {\n    style: {\n      display: showColorPicker ? \"\" : \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, __jsx(SketchPicker, {\n    color: currentSelectedColor === null || currentSelectedColor === void 0 ? void 0 : currentSelectedColor.color,\n    onChange: handleColorChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }), __jsx(\"button\", {\n    onClick: handleCloseColorPicker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"Close\")), __jsx(\"div\", {\n    style: {\n      marginTop: '50px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, __jsx(NavLink, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default SelectPalette;","map":{"version":3,"sources":["D:/dev/template-tool/src/components/SelectPalette.tsx"],"names":["React","useState","useTemplateData","SketchPicker","NavLink","SelectPalette","templateData","setTemplateData","showColorPicker","setShowColorPicker","currentSelectedColor","setCurrentSelectedColor","handleShowColorPicker","Color","handleCloseColorPicker","handleColorChange","colorObj","prev","index","palette","findIndex","item","name","color","hex","map","backgroundColor","width","height","display","marginTop"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,SAASC,OAAT,QAAwB,kBAAxB;;AAOA,MAAMC,aAAa,GAAG,MAAM;AAExB,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAoCL,eAAe,EAAzD;AACA,QAAM;AAAA,OAACM,eAAD;AAAA,OAAkBC;AAAlB,MAAwCR,QAAQ,CAAU,KAAV,CAAtD;AACA,QAAM;AAAA,OAACS,oBAAD;AAAA,OAAuBC;AAAvB,MAAkDV,QAAQ,CAAgB,IAAhB,CAAhE;;AAEA,QAAMW,qBAAqB,GAAIC,KAAD,IAAmB;AAC7CJ,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAE,IAAAA,uBAAuB,CAACE,KAAD,CAAvB;AACH,GAHD;;AAKA,QAAMC,sBAAsB,GAAG,MAAM;AACjCL,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACH,GAFD;;AAIA,QAAMM,iBAAiB,GAAIC,QAAD,IAAmB;AACzCT,IAAAA,eAAe,CAACU,IAAI,IAAI;AACpB,YAAMC,KAAK,GAAGD,IAAI,CAACE,OAAL,CAAaC,SAAb,CAAuBC,IAAI,IAAIA,IAAI,CAACC,IAAL,MAAcZ,oBAAd,aAAcA,oBAAd,uBAAcA,oBAAoB,CAAEY,IAApC,CAA/B,CAAd;AACAL,MAAAA,IAAI,CAACE,OAAL,CAAaD,KAAb,EAAoBK,KAApB,GAA4BP,QAAQ,CAACQ,GAArC;AACAb,MAAAA,uBAAuB,iCAAMD,oBAAN;AAA4Ba,QAAAA,KAAK,EAAEP,QAAQ,CAACQ;AAA5C,SAAvB;AACH,KAJc,CAAf;AAKH,GAND;;AAQA,SACI,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEKlB,YAAY,CAACa,OAAb,CAAqBM,GAArB,CAAyBJ,IAAI,IAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,IAAI,CAACC,IADV,SACkB;AACV,IAAA,KAAK,EAAE;AAAEI,MAAAA,eAAe,EAAEL,IAAI,CAACE,KAAxB;AAA+BI,MAAAA,KAAK,EAAE,MAAtC;AAA8CC,MAAAA,MAAM,EAAE;AAAtD,KADG;AAEV,IAAA,OAAO,EAAE,MAAMhB,qBAAqB,CAACS,IAAD,CAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADlB,CADH,CAFL,EAUI;AAAK,IAAA,KAAK,EAAE;AAAEQ,MAAAA,OAAO,EAAErB,eAAe,GAAG,EAAH,GAAQ;AAAlC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,YAAD;AACI,IAAA,KAAK,EAAEE,oBAAF,aAAEA,oBAAF,uBAAEA,oBAAoB,CAAEa,KADjC;AAEI,IAAA,QAAQ,EAAER,iBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAMI;AAAQ,IAAA,OAAO,EAAED,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANJ,CAVJ,EAkBI;AAAK,IAAA,KAAK,EAAE;AAAEgB,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,OAAD;AAAS,IAAA,EAAE,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAlBJ,CADJ;AAwBH,CA/CD;;AAiDA,eAAezB,aAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport useTemplateData from '../hooks/useTemplateData'\r\nimport { SketchPicker } from 'react-color'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\ninterface IColor {\r\n    name: string\r\n    color: string\r\n}\r\n\r\nconst SelectPalette = () => {\r\n\r\n    const { templateData, setTemplateData } = useTemplateData()\r\n    const [showColorPicker, setShowColorPicker] = useState<boolean>(false)\r\n    const [currentSelectedColor, setCurrentSelectedColor] = useState<IColor | null>(null)\r\n\r\n    const handleShowColorPicker = (Color: IColor) => {\r\n        setShowColorPicker(true)\r\n        setCurrentSelectedColor(Color)\r\n    }\r\n\r\n    const handleCloseColorPicker = () => {\r\n        setShowColorPicker(false)\r\n    }\r\n\r\n    const handleColorChange = (colorObj: any) => {\r\n        setTemplateData(prev => {\r\n            const index = prev.palette.findIndex(item => item.name === currentSelectedColor?.name)\r\n            prev.palette[index].color = colorObj.hex\r\n            setCurrentSelectedColor({ ...currentSelectedColor, color: colorObj.hex })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div>Select Palette</div>\r\n            {templateData.palette.map(item => (\r\n                <div>\r\n                    {item.name} : <div\r\n                        style={{ backgroundColor: item.color, width: '30px', height: '30px' }}\r\n                        onClick={() => handleShowColorPicker(item)}\r\n                    ></div>\r\n                </div>\r\n            ))}\r\n            <div style={{ display: showColorPicker ? \"\" : \"none\" }}>\r\n                <SketchPicker\r\n                    color={currentSelectedColor?.color}\r\n                    onChange={handleColorChange}\r\n                />\r\n                <br />\r\n                <button onClick={handleCloseColorPicker}>Close</button>\r\n            </div>\r\n            <div style={{ marginTop: '50px' }}>\r\n                <NavLink to=\"/\" />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SelectPalette\r\n"]},"metadata":{},"sourceType":"module"}