{"ast":null,"code":"import _slicedToArray from \"D:/dev/template-tool/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState } from \"react\";\nimport useImage from \"use-image\";\nimport * as svg from \"../utils/svg\";\n\nvar useSvg = function useSvg(svgString) {\n  var colors = svg.getColors(svgString);\n\n  var _useState = useState({}),\n      colorMap = _useState[0],\n      setColorMap = _useState[1];\n\n  var modifiedSVG = svg.replaceColors(svgString, colorMap);\n\n  var _useImage = useImage(svg.svgToURL(modifiedSVG)),\n      _useImage2 = _slicedToArray(_useImage, 1),\n      image = _useImage2[0]; // const [currentSelectedSvgColor, setCurrentSelectedSvgColor] = useState<string | null>(null)\n\n\n  return {\n    colors: colors,\n    colorMap: colorMap,\n    setColorMap: setColorMap,\n    image: image\n  };\n};\n\nexport default useSvg;","map":{"version":3,"sources":["D:/dev/template-tool/src/hooks/useSvg.tsx"],"names":["useState","useImage","svg","useSvg","svgString","colors","getColors","colorMap","setColorMap","modifiedSVG","replaceColors","svgToURL","image"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,KAAKC,GAAZ,MAAqB,cAArB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,SAAD,EAAuB;AAClC,MAAMC,MAAM,GAAGH,GAAG,CAACI,SAAJ,CAAcF,SAAd,CAAf;;AACA,kBAAgCJ,QAAQ,CAAC,EAAD,CAAxC;AAAA,MAAOO,QAAP;AAAA,MAAiBC,WAAjB;;AACA,MAAMC,WAAW,GAAGP,GAAG,CAACQ,aAAJ,CAAkBN,SAAlB,EAA6BG,QAA7B,CAApB;;AACA,kBAAgBN,QAAQ,CAACC,GAAG,CAACS,QAAJ,CAAaF,WAAb,CAAD,CAAxB;AAAA;AAAA,MAAOG,KAAP,iBAJkC,CAMlC;;;AAEA,SAAO;AAAEP,IAAAA,MAAM,EAANA,MAAF;AAAUE,IAAAA,QAAQ,EAARA,QAAV;AAAoBC,IAAAA,WAAW,EAAXA,WAApB;AAAiCI,IAAAA,KAAK,EAALA;AAAjC,GAAP;AACH,CATD;;AAWA,eAAeT,MAAf","sourcesContent":["import { useState } from \"react\";\r\nimport useImage from \"use-image\";\r\nimport * as svg from \"../utils/svg\"\r\n\r\nconst useSvg = (svgString: string) => {\r\n    const colors = svg.getColors(svgString);\r\n    const [colorMap, setColorMap] = useState({});\r\n    const modifiedSVG = svg.replaceColors(svgString, colorMap);\r\n    const [image] = useImage(svg.svgToURL(modifiedSVG));\r\n\r\n    // const [currentSelectedSvgColor, setCurrentSelectedSvgColor] = useState<string | null>(null)\r\n\r\n    return { colors, colorMap, setColorMap, image }\r\n}\r\n\r\nexport default useSvg\r\n"]},"metadata":{},"sourceType":"module"}