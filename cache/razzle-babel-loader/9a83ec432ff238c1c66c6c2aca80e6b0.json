{"ast":null,"code":"import { useState } from \"react\";\nimport useImage from \"use-image\";\nimport * as svg from \"../utils/svg\";\n\nconst useSvg = svgString => {\n  const {\n    0: isSvg,\n    1: setIsSvg\n  } = useState(false);\n\n  if (!!svgString) {\n    isSvg: true;\n  }\n\n  const colors = svg.getColors(svgString);\n  const {\n    0: colorMap,\n    1: setColorMap\n  } = useState({});\n  const modifiedSVG = svg.replaceColors(svgString, colorMap);\n  const [image] = useImage(svg.svgToURL(modifiedSVG)); // const [currentSelectedSvgColor, setCurrentSelectedSvgColor] = useState<string | null>(null)\n\n  return {\n    colors,\n    colorMap,\n    setColorMap,\n    image\n  };\n};\n\nexport default useSvg;","map":{"version":3,"sources":["D:/dev/template-tool/src/hooks/useSvg.tsx"],"names":["useState","useImage","svg","useSvg","svgString","isSvg","setIsSvg","colors","getColors","colorMap","setColorMap","modifiedSVG","replaceColors","image","svgToURL"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,KAAKC,GAAZ,MAAqB,cAArB;;AAEA,MAAMC,MAAM,GAAIC,SAAD,IAA8B;AAEzC,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBN,QAAQ,CAAC,KAAD,CAAlC;;AAEA,MAAI,CAAC,CAACI,SAAN,EAAiB;AAAEC,IAAAA,KAAK,EAAE;AAAM;;AAEhC,QAAME,MAAM,GAAGL,GAAG,CAACM,SAAJ,CAAcJ,SAAd,CAAf;AACA,QAAM;AAAA,OAACK,QAAD;AAAA,OAAWC;AAAX,MAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMW,WAAW,GAAGT,GAAG,CAACU,aAAJ,CAAkBR,SAAlB,EAA6BK,QAA7B,CAApB;AACA,QAAM,CAACI,KAAD,IAAUZ,QAAQ,CAACC,GAAG,CAACY,QAAJ,CAAaH,WAAb,CAAD,CAAxB,CATyC,CAWzC;;AAEA,SAAO;AAAEJ,IAAAA,MAAF;AAAUE,IAAAA,QAAV;AAAoBC,IAAAA,WAApB;AAAiCG,IAAAA;AAAjC,GAAP;AACH,CAdD;;AAgBA,eAAeV,MAAf","sourcesContent":["import { useState } from \"react\";\r\nimport useImage from \"use-image\";\r\nimport * as svg from \"../utils/svg\"\r\n\r\nconst useSvg = (svgString: string | null) => {\r\n\r\n    const [isSvg, setIsSvg] = useState(false)\r\n\r\n    if (!!svgString) { isSvg: true }\r\n\r\n    const colors = svg.getColors(svgString);\r\n    const [colorMap, setColorMap] = useState({});\r\n    const modifiedSVG = svg.replaceColors(svgString, colorMap);\r\n    const [image] = useImage(svg.svgToURL(modifiedSVG));\r\n\r\n    // const [currentSelectedSvgColor, setCurrentSelectedSvgColor] = useState<string | null>(null)\r\n\r\n    return { colors, colorMap, setColorMap, image }\r\n}\r\n\r\nexport default useSvg\r\n"]},"metadata":{},"sourceType":"module"}