{"ast":null,"code":"var _jsxFileName = \"D:\\\\dev\\\\template-tool\\\\src\\\\components\\\\SelectPalette.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport useTemplateData from '../hooks/useTemplateData';\nimport { SketchPicker } from 'react-color';\n\nconst SelectPalette = () => {\n  const {\n    templateData,\n    setTemplateData\n  } = useTemplateData();\n  const {\n    0: showColorPicker,\n    1: setShowColorPicker\n  } = useState(false);\n  const {\n    0: currentSelectedColor,\n    1: setCurrentSelectedColor\n  } = useState(null);\n\n  const handleShowColorPicker = Color => {\n    console.log({\n      Color\n    });\n    setShowColorPicker(true);\n    setCurrentSelectedColor(Color);\n  };\n\n  const handleCloseColorPicker = () => {\n    setShowColorPicker(false);\n  };\n\n  const handleColorChange = colorObj => {\n    console.log({\n      colorObj\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"Select Palette\"), templateData.palette.map(item => __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, item.name, \" : \", __jsx(\"div\", {\n    style: {\n      backgroundColor: item.color,\n      width: '30px',\n      height: '30px'\n    },\n    onClick: () => handleShowColorPicker(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 35\n    }\n  }))), __jsx(\"div\", {\n    style: {\n      display: showColorPicker ? \"\" : \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, __jsx(SketchPicker, {\n    color: currentSelectedColor === null || currentSelectedColor === void 0 ? void 0 : currentSelectedColor.color,\n    onChange: handleColorChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }), __jsx(\"button\", {\n    onClick: handleCloseColorPicker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, \"Close\")));\n};\n\nexport default SelectPalette;","map":{"version":3,"sources":["D:/dev/template-tool/src/components/SelectPalette.tsx"],"names":["React","useState","useTemplateData","SketchPicker","SelectPalette","templateData","setTemplateData","showColorPicker","setShowColorPicker","currentSelectedColor","setCurrentSelectedColor","handleShowColorPicker","Color","console","log","handleCloseColorPicker","handleColorChange","colorObj","palette","map","item","name","backgroundColor","color","width","height","display"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,SAASC,YAAT,QAA6B,aAA7B;;AAOA,MAAMC,aAAa,GAAG,MAAM;AAExB,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAoCJ,eAAe,EAAzD;AACA,QAAM;AAAA,OAACK,eAAD;AAAA,OAAkBC;AAAlB,MAAwCP,QAAQ,CAAU,KAAV,CAAtD;AACA,QAAM;AAAA,OAACQ,oBAAD;AAAA,OAAuBC;AAAvB,MAAkDT,QAAQ,CAAgB,IAAhB,CAAhE;;AAEA,QAAMU,qBAAqB,GAAIC,KAAD,IAAmB;AAC7CC,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEF,MAAAA;AAAF,KAAZ;AACAJ,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAE,IAAAA,uBAAuB,CAACE,KAAD,CAAvB;AACH,GAJD;;AAMA,QAAMG,sBAAsB,GAAG,MAAM;AACjCP,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACH,GAFD;;AAIA,QAAMQ,iBAAiB,GAAIC,QAAD,IAAc;AACpCJ,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEG,MAAAA;AAAF,KAAZ;AACH,GAFD;;AAIA,SACI,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEKZ,YAAY,CAACa,OAAb,CAAqBC,GAArB,CAAyBC,IAAI,IAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,IAAI,CAACC,IADV,SACkB;AACV,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAEF,IAAI,CAACG,KAAxB;AAA+BC,MAAAA,KAAK,EAAE,MAAtC;AAA8CC,MAAAA,MAAM,EAAE;AAAtD,KADG;AAEV,IAAA,OAAO,EAAE,MAAMd,qBAAqB,CAACS,IAAD,CAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADlB,CADH,CAFL,EAUI;AAAK,IAAA,KAAK,EAAE;AAAEM,MAAAA,OAAO,EAAEnB,eAAe,GAAG,EAAH,GAAQ;AAAlC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,YAAD;AACI,IAAA,KAAK,EAAEE,oBAAF,aAAEA,oBAAF,uBAAEA,oBAAoB,CAAEc,KADjC;AAEI,IAAA,QAAQ,EAAEP,iBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAMI;AAAQ,IAAA,OAAO,EAAED,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANJ,CAVJ,CADJ;AAqBH,CAzCD;;AA2CA,eAAeX,aAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport useTemplateData from '../hooks/useTemplateData'\r\nimport { SketchPicker } from 'react-color'\r\n\r\ninterface IColor {\r\n    name: string\r\n    color: string\r\n}\r\n\r\nconst SelectPalette = () => {\r\n\r\n    const { templateData, setTemplateData } = useTemplateData()\r\n    const [showColorPicker, setShowColorPicker] = useState<boolean>(false)\r\n    const [currentSelectedColor, setCurrentSelectedColor] = useState<IColor | null>(null)\r\n\r\n    const handleShowColorPicker = (Color: IColor) => {\r\n        console.log({ Color })\r\n        setShowColorPicker(true)\r\n        setCurrentSelectedColor(Color)\r\n    }\r\n\r\n    const handleCloseColorPicker = () => {\r\n        setShowColorPicker(false)\r\n    }\r\n\r\n    const handleColorChange = (colorObj) => {\r\n        console.log({ colorObj })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div>Select Palette</div>\r\n            {templateData.palette.map(item => (\r\n                <div>\r\n                    {item.name} : <div\r\n                        style={{ backgroundColor: item.color, width: '30px', height: '30px' }}\r\n                        onClick={() => handleShowColorPicker(item)}\r\n                    ></div>\r\n                </div>\r\n            ))}\r\n            <div style={{ display: showColorPicker ? \"\" : \"none\" }}>\r\n                <SketchPicker\r\n                    color={currentSelectedColor?.color}\r\n                    onChange={handleColorChange}\r\n                />\r\n                <br />\r\n                <button onClick={handleCloseColorPicker}>Close</button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SelectPalette\r\n"]},"metadata":{},"sourceType":"module"}