{"ast":null,"code":"import { useState } from \"react\";\nimport useImage from \"use-image\";\nimport * as svg from \"../utils/svg\";\n\nconst useSvg = svgString => {\n  if (svgString) {\n    const colors = svg.getColors(svgString);\n    const {\n      0: colorMap,\n      1: setColorMap\n    } = useState({});\n    const modifiedSVG = svg.replaceColors(svgString, colorMap);\n    const [image] = useImage(svg.svgToURL(modifiedSVG)); // const [currentSelectedSvgColor, setCurrentSelectedSvgColor] = useState<string | null>(null)\n\n    return {\n      colors,\n      colorMap,\n      setColorMap,\n      image\n    };\n  }\n\n  return {\n    colors: null,\n    colorMap: null,\n    setColorMap: null,\n    image: null\n  };\n};\n\nexport default useSvg;","map":{"version":3,"sources":["D:/dev/template-tool/src/hooks/useSvg.tsx"],"names":["useState","useImage","svg","useSvg","svgString","colors","getColors","colorMap","setColorMap","modifiedSVG","replaceColors","image","svgToURL"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,KAAKC,GAAZ,MAAqB,cAArB;;AAEA,MAAMC,MAAM,GAAIC,SAAD,IAA8B;AAEzC,MAAIA,SAAJ,EAAe;AAEX,UAAMC,MAAM,GAAGH,GAAG,CAACI,SAAJ,CAAcF,SAAd,CAAf;AACA,UAAM;AAAA,SAACG,QAAD;AAAA,SAAWC;AAAX,QAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,UAAMS,WAAW,GAAGP,GAAG,CAACQ,aAAJ,CAAkBN,SAAlB,EAA6BG,QAA7B,CAApB;AACA,UAAM,CAACI,KAAD,IAAUV,QAAQ,CAACC,GAAG,CAACU,QAAJ,CAAaH,WAAb,CAAD,CAAxB,CALW,CAOX;;AAEA,WAAO;AAAEJ,MAAAA,MAAF;AAAUE,MAAAA,QAAV;AAAoBC,MAAAA,WAApB;AAAiCG,MAAAA;AAAjC,KAAP;AACH;;AACD,SAAO;AAAEN,IAAAA,MAAM,EAAE,IAAV;AAAgBE,IAAAA,QAAQ,EAAE,IAA1B;AAAgCC,IAAAA,WAAW,EAAE,IAA7C;AAAmDG,IAAAA,KAAK,EAAE;AAA1D,GAAP;AACH,CAdD;;AAgBA,eAAeR,MAAf","sourcesContent":["import { useState } from \"react\";\r\nimport useImage from \"use-image\";\r\nimport * as svg from \"../utils/svg\"\r\n\r\nconst useSvg = (svgString: string | null) => {\r\n\r\n    if (svgString) {\r\n\r\n        const colors = svg.getColors(svgString);\r\n        const [colorMap, setColorMap] = useState({});\r\n        const modifiedSVG = svg.replaceColors(svgString, colorMap);\r\n        const [image] = useImage(svg.svgToURL(modifiedSVG));\r\n\r\n        // const [currentSelectedSvgColor, setCurrentSelectedSvgColor] = useState<string | null>(null)\r\n\r\n        return { colors, colorMap, setColorMap, image }\r\n    }\r\n    return { colors: null, colorMap: null, setColorMap: null, image: null }\r\n}\r\n\r\nexport default useSvg\r\n"]},"metadata":{},"sourceType":"module"}