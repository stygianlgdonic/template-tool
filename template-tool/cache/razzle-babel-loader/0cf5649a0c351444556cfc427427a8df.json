{"ast":null,"code":"import _slicedToArray from \"D:/dev/cardclan-backend/template-tool/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\dev\\\\cardclan-backend\\\\template-tool\\\\src\\\\components\\\\tailwindComponents\\\\PaletteColorSelect.tsx\",\n    _this = this;\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { SketchPicker } from \"react-color\";\n\nvar Modal = function Modal(_ref) {\n  var currentSelectedColor = _ref.currentSelectedColor,\n      handleColorChange = _ref.handleColorChange,\n      handleCloseColorPicker = _ref.handleCloseColorPicker;\n\n  var _React$useState = React.useState(\"#000000\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      currentColor = _React$useState2[0],\n      setCurrentColor = _React$useState2[1];\n\n  React.useEffect(function () {\n    setCurrentColor(currentSelectedColor);\n  }, [currentSelectedColor]);\n\n  var handleSave = function handleSave() {\n    handleColorChange(currentColor);\n    handleCloseColorPicker();\n  };\n\n  return __jsx(\"div\", {\n    className: \"fixed z-10 inset-0 overflow-y-auto\",\n    \"aria-labelledby\": \"modal-title\",\n    role: \"dialog\",\n    \"aria-modal\": \"true\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\",\n    \"aria-hidden\": \"true\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }), __jsx(\"span\", {\n    className: \"hidden sm:inline-block sm:align-middle sm:h-screen\",\n    \"aria-hidden\": \"true\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, \"\\u200B\"), __jsx(\"div\", {\n    className: \"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"sm:flex sm:items-start\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  }, __jsx(SketchPicker, {\n    color: currentColor,\n    onChange: function onChange(color) {\n      return setCurrentColor(color.hex);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 29\n    }\n  }))), __jsx(\"div\", {\n    className: \"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, __jsx(\"button\", {\n    onClick: handleSave,\n    type: \"button\",\n    className: \"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }, \"Done\")))));\n};\n\nexport default Modal;","map":{"version":3,"sources":["D:/dev/cardclan-backend/template-tool/src/components/tailwindComponents/PaletteColorSelect.tsx"],"names":["React","SketchPicker","Modal","currentSelectedColor","handleColorChange","handleCloseColorPicker","useState","currentColor","setCurrentColor","useEffect","handleSave","color","hex"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,aAA7B;;AAQA,IAAMC,KAAsB,GAAG,SAAzBA,KAAyB,OAAyE;AAAA,MAAtEC,oBAAsE,QAAtEA,oBAAsE;AAAA,MAAhDC,iBAAgD,QAAhDA,iBAAgD;AAAA,MAA7BC,sBAA6B,QAA7BA,sBAA6B;;AAEpG,wBAAwCL,KAAK,CAACM,QAAN,CAAe,SAAf,CAAxC;AAAA;AAAA,MAAOC,YAAP;AAAA,MAAqBC,eAArB;;AAEAR,EAAAA,KAAK,CAACS,SAAN,CAAgB,YAAM;AAClBD,IAAAA,eAAe,CAACL,oBAAD,CAAf;AACH,GAFD,EAEG,CAACA,oBAAD,CAFH;;AAIA,MAAMO,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrBN,IAAAA,iBAAiB,CAACG,YAAD,CAAjB;AACAF,IAAAA,sBAAsB;AACzB,GAHD;;AAKA,SACI;AAAK,IAAA,SAAS,EAAC,oCAAf;AAAoD,uBAAgB,aAApE;AAAkF,IAAA,IAAI,EAAC,QAAvF;AAAgG,kBAAW,MAA3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,wFAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,4DAAf;AAA4E,mBAAY,MAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAGI;AAAM,IAAA,SAAS,EAAC,oDAAhB;AAAqE,mBAAY,MAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,EAKI;AAAK,IAAA,SAAS,EAAC,0JAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,wCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,YAAD;AACI,IAAA,KAAK,EAAEE,YADX;AAEI,IAAA,QAAQ,EAAE,kBAACI,KAAD;AAAA,aAAWH,eAAe,CAACG,KAAK,CAACC,GAAP,CAA1B;AAAA,KAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,EASI;AAAK,IAAA,SAAS,EAAC,0DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,OAAO,EAAEF,UADb;AAEI,IAAA,IAAI,EAAC,QAFT;AAGI,IAAA,SAAS,EAAC,2QAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CATJ,CALJ,CADJ,CADJ;AA4BH,CAzCD;;AA2CA,eAAeR,KAAf","sourcesContent":["import React from 'react'\r\nimport { SketchPicker } from \"react-color\"\r\n\r\ninterface Props {\r\n    currentSelectedColor: string\r\n    handleColorChange: (color: string) => void\r\n    handleCloseColorPicker: () => void\r\n}\r\n\r\nconst Modal: React.FC<Props> = ({ currentSelectedColor, handleColorChange, handleCloseColorPicker }) => {\r\n\r\n    const [currentColor, setCurrentColor] = React.useState(\"#000000\")\r\n\r\n    React.useEffect(() => {\r\n        setCurrentColor(currentSelectedColor)\r\n    }, [currentSelectedColor])\r\n\r\n    const handleSave = () => {\r\n        handleColorChange(currentColor)\r\n        handleCloseColorPicker()\r\n    }\r\n\r\n    return (\r\n        <div className=\"fixed z-10 inset-0 overflow-y-auto\" aria-labelledby=\"modal-title\" role=\"dialog\" aria-modal=\"true\">\r\n            <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n                <div className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" aria-hidden=\"true\"></div>\r\n\r\n                <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\r\n\r\n                <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\r\n                    <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\r\n                        <div className=\"sm:flex sm:items-start\">\r\n                            <SketchPicker\r\n                                color={currentColor}\r\n                                onChange={(color) => setCurrentColor(color.hex)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\r\n                        <button\r\n                            onClick={handleSave}\r\n                            type=\"button\"\r\n                            className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\">\r\n                            Done\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal\r\n"]},"metadata":{},"sourceType":"module"}