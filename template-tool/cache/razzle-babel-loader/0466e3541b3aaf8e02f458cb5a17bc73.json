{"ast":null,"code":"var _jsxFileName = \"D:\\\\dev\\\\cardclan-backend\\\\template-tool\\\\src\\\\components\\\\DesignTool\\\\SideBar\\\\index.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { defaultCircle, defaultImage, defaultPolygon, defaultRect, defaultRoundedRect, defaultSvg, defaultTextBox, defaultTriangle } from '../../../utils/defaults';\nimport * as svg from \"../../../utils/svg\";\nimport { useFileUpload } from 'use-file-upload';\n\nconst SideBar = ({\n  variationIndex,\n  setTemplateData\n}) => {\n  const [file, selectFile] = useFileUpload();\n\n  const handleAddNewRect = () => {\n    setTemplateData(prev => {\n      let shapeID = new Date().getTime();\n      prev.variations[variationIndex].elements.push(_objectSpread(_objectSpread({}, defaultRect), {}, {\n        id: `shapes_${shapeID.toString()}`\n      }));\n    });\n  };\n\n  const handleAddNewCircle = () => {\n    setTemplateData(prev => {\n      let shapeID = new Date().getTime();\n      prev.variations[variationIndex].elements.push(_objectSpread(_objectSpread({}, defaultCircle), {}, {\n        id: `shapes_${shapeID.toString()}`\n      }));\n    });\n  };\n\n  const handleAddNewTrianlge = () => {\n    setTemplateData(prev => {\n      let shapeID = new Date().getTime();\n      prev.variations[variationIndex].elements.push(_objectSpread(_objectSpread({}, defaultTriangle), {}, {\n        id: `shapes_${shapeID.toString()}`\n      }));\n    });\n  };\n\n  const handleAddNewPolygon = () => {\n    setTemplateData(prev => {\n      let shapeID = new Date().getTime();\n      prev.variations[variationIndex].elements.push(_objectSpread(_objectSpread({}, defaultPolygon), {}, {\n        id: `shapes_${shapeID.toString()}`\n      }));\n    });\n  };\n\n  const handleAddNewRoundedRect = () => {\n    setTemplateData(prev => {\n      let shapeID = new Date().getTime();\n      prev.variations[variationIndex].elements.push(_objectSpread(_objectSpread({}, defaultRoundedRect), {}, {\n        id: `shapes_${shapeID.toString()}`\n      }));\n    });\n  };\n\n  const handleSvgUpload = e => {\n    svg.getSvgStringFromUpload(e.target.files).then(SVG_STRING => {\n      setTemplateData(prev => {\n        let svgId = new Date().getTime();\n        prev.variations[variationIndex].elements.push(_objectSpread({\n          id: `svgs_${svgId.toString()}`,\n          svgString: SVG_STRING\n        }, defaultSvg));\n      });\n    });\n  };\n\n  const handleImageUpload = () => {\n    selectFile({\n      accept: \"image/png, image/jpg, image/jpeg\",\n      multiple: false\n    }, ({\n      file\n    }) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onload = () => {\n        //base64encoded string\n        setTemplateData(prev => {\n          let imageID = new Date().getTime();\n          prev.variations[variationIndex].elements.push(_objectSpread(_objectSpread({}, defaultImage), {}, {\n            src: reader.result,\n            id: `images_${imageID.toString()}`\n          }));\n        });\n      };\n    });\n  };\n\n  const handleAddNewText = () => {\n    setTemplateData(prev => {\n      let textID = new Date().getTime();\n      prev.variations[variationIndex].textBoxes.push(_objectSpread(_objectSpread({}, defaultTextBox), {}, {\n        id: `textBoxes_${textID.toString()}`\n      }));\n    });\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"flex justify-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    className: \"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\",\n    onClick: handleAddNewRect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, \"Add new Square\")), __jsx(\"div\", {\n    className: \"flex justify-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    className: \"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\",\n    onClick: handleAddNewCircle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, \"Add new Circle\")), __jsx(\"div\", {\n    className: \"flex justify-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    className: \"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\",\n    onClick: handleAddNewTrianlge,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, \"Add new Triangle\")), __jsx(\"div\", {\n    className: \"flex justify-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    className: \"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\",\n    onClick: handleAddNewPolygon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, \"Add new Pentagon\")), __jsx(\"div\", {\n    className: \"flex justify-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    className: \"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\",\n    onClick: handleAddNewRoundedRect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, \"Add new Rounded Square\")), __jsx(\"div\", {\n    className: \"flex justify-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    className: \"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\",\n    onClick: handleAddNewText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, \"Add new Text\")), __jsx(\"div\", {\n    className: \"flex justify-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, \"upload svg\"), __jsx(\"input\", {\n    className: \"\",\n    type: \"file\",\n    accept: \".svg\",\n    onChange: handleSvgUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"flex justify-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    className: \"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\",\n    onClick: handleImageUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, \"Upload image\")));\n};\n\nexport default SideBar;","map":{"version":3,"sources":["D:/dev/cardclan-backend/template-tool/src/components/DesignTool/SideBar/index.tsx"],"names":["React","defaultCircle","defaultImage","defaultPolygon","defaultRect","defaultRoundedRect","defaultSvg","defaultTextBox","defaultTriangle","svg","useFileUpload","SideBar","variationIndex","setTemplateData","file","selectFile","handleAddNewRect","prev","shapeID","Date","getTime","variations","elements","push","id","toString","handleAddNewCircle","handleAddNewTrianlge","handleAddNewPolygon","handleAddNewRoundedRect","handleSvgUpload","e","getSvgStringFromUpload","target","files","then","SVG_STRING","svgId","svgString","handleImageUpload","accept","multiple","reader","FileReader","readAsDataURL","onload","imageID","src","result","handleAddNewText","textID","textBoxes"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { defaultCircle, defaultImage, defaultPolygon, defaultRect, defaultRoundedRect, defaultSvg, defaultTextBox, defaultTriangle } from '../../../utils/defaults';\r\nimport * as svg from \"../../../utils/svg\"\r\nimport { useFileUpload } from 'use-file-upload'\r\n\r\nconst SideBar = ({ variationIndex, setTemplateData }) => {\r\n    const [file, selectFile] = useFileUpload()\r\n\r\n    const handleAddNewRect = () => {\r\n        setTemplateData((prev) => {\r\n            let shapeID = new Date().getTime();\r\n            prev.variations[variationIndex].elements.push({ ...defaultRect, id: `shapes_${shapeID.toString()}` })\r\n        })\r\n    }\r\n\r\n    const handleAddNewCircle = () => {\r\n        setTemplateData((prev) => {\r\n            let shapeID = new Date().getTime();\r\n            prev.variations[variationIndex].elements.push({ ...defaultCircle, id: `shapes_${shapeID.toString()}` })\r\n        })\r\n    }\r\n    const handleAddNewTrianlge = () => {\r\n        setTemplateData((prev) => {\r\n            let shapeID = new Date().getTime();\r\n            prev.variations[variationIndex].elements.push({ ...defaultTriangle, id: `shapes_${shapeID.toString()}` })\r\n        })\r\n    }\r\n    const handleAddNewPolygon = () => {\r\n        setTemplateData((prev) => {\r\n            let shapeID = new Date().getTime();\r\n            prev.variations[variationIndex].elements.push({ ...defaultPolygon, id: `shapes_${shapeID.toString()}` })\r\n        })\r\n    }\r\n    const handleAddNewRoundedRect = () => {\r\n        setTemplateData((prev) => {\r\n            let shapeID = new Date().getTime();\r\n            prev.variations[variationIndex].elements.push({ ...defaultRoundedRect, id: `shapes_${shapeID.toString()}` })\r\n        })\r\n    }\r\n\r\n    const handleSvgUpload = (e) => {\r\n        svg.getSvgStringFromUpload(e.target.files).then((SVG_STRING) => {\r\n\r\n            setTemplateData((prev) => {\r\n                let svgId = new Date().getTime()\r\n                prev.variations[variationIndex].elements.push({\r\n\r\n                    id: `svgs_${svgId.toString()}`,\r\n                    svgString: SVG_STRING,\r\n                    ...defaultSvg\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    const handleImageUpload = () => {\r\n        selectFile({ accept: \"image/png, image/jpg, image/jpeg\", multiple: false },\r\n            ({ file }: any) => {\r\n\r\n                const reader = new FileReader();\r\n                reader.readAsDataURL(file);\r\n\r\n                reader.onload = () => {\r\n                    //base64encoded string\r\n                    setTemplateData((prev) => {\r\n                        let imageID = new Date().getTime();\r\n                        prev.variations[variationIndex].elements.push({\r\n                            ...defaultImage,\r\n                            src: reader.result,\r\n                            id: `images_${imageID.toString()}`\r\n                        })\r\n                    })\r\n                };\r\n            })\r\n    }\r\n\r\n    const handleAddNewText = () => {\r\n        setTemplateData((prev) => {\r\n            let textID = new Date().getTime();\r\n            prev.variations[variationIndex].textBoxes.push({ ...defaultTextBox, id: `textBoxes_${textID.toString()}` })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div className=\"flex justify-center\">\r\n                <button\r\n                    className=\"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\"\r\n                    onClick={handleAddNewRect}\r\n                >Add new Square</button>\r\n            </div>\r\n            <div className=\"flex justify-center\">\r\n                <button\r\n                    className=\"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\"\r\n                    onClick={handleAddNewCircle}\r\n                >Add new Circle</button>\r\n            </div>\r\n            <div className=\"flex justify-center\">\r\n                <button\r\n                    className=\"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\"\r\n                    onClick={handleAddNewTrianlge}\r\n                >Add new Triangle</button>\r\n            </div>\r\n            <div className=\"flex justify-center\">\r\n                <button\r\n                    className=\"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\"\r\n                    onClick={handleAddNewPolygon}\r\n                >Add new Pentagon</button>\r\n            </div>\r\n            <div className=\"flex justify-center\">\r\n                <button\r\n                    className=\"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\"\r\n                    onClick={handleAddNewRoundedRect}\r\n                >Add new Rounded Square</button>\r\n            </div>\r\n            <div className=\"flex justify-center\">\r\n                <button\r\n                    className=\"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\"\r\n                    onClick={handleAddNewText}\r\n                >Add new Text</button>\r\n            </div>\r\n            <div className=\"flex justify-center\">\r\n                <p>upload svg</p>\r\n                <input className=\"\" type=\"file\" accept=\".svg\" onChange={handleSvgUpload} />\r\n            </div>\r\n            <div className=\"flex justify-center\">\r\n                <button\r\n                    className=\"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\"\r\n                    onClick={handleImageUpload}\r\n                >Upload image</button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideBar\r\n"]},"metadata":{},"sourceType":"module"}