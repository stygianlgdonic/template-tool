{"ast":null,"code":"import _objectSpread from \"D:/dev/cardclan-backend/template-tool/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"D:/dev/cardclan-backend/template-tool/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { defaultCircle, defaultImage, defaultPolygon, defaultRect, defaultRoundedRect, defaultSvg, defaultTextBox, defaultTriangle } from '../../../utils/defaults';\nimport * as svg from \"../../../utils/svg\";\nimport { useFileUpload } from 'use-file-upload';\n\nvar SideBar = function SideBar(_ref) {\n  var variationIndex = _ref.variationIndex,\n      setTemplateData = _ref.setTemplateData;\n\n  var _useFileUpload = useFileUpload(),\n      _useFileUpload2 = _slicedToArray(_useFileUpload, 2),\n      file = _useFileUpload2[0],\n      selectFile = _useFileUpload2[1];\n\n  var handleAddNewRect = function handleAddNewRect() {\n    setTemplateData(function (prev) {\n      var shapeID = new Date().getTime();\n      prev.variations[variationIndex].elements.push(_objectSpread(_objectSpread({}, defaultRect), {}, {\n        id: \"shapes_\".concat(shapeID.toString())\n      }));\n    });\n  };\n\n  var handleAddNewCircle = function handleAddNewCircle() {\n    setTemplateData(function (prev) {\n      var shapeID = new Date().getTime();\n      prev.variations[variationIndex].elements.push(_objectSpread(_objectSpread({}, defaultCircle), {}, {\n        id: \"shapes_\".concat(shapeID.toString())\n      }));\n    });\n  };\n\n  var handleAddNewTrianlge = function handleAddNewTrianlge() {\n    setTemplateData(function (prev) {\n      var shapeID = new Date().getTime();\n      prev.variations[variationIndex].elements.push(_objectSpread(_objectSpread({}, defaultTriangle), {}, {\n        id: \"shapes_\".concat(shapeID.toString())\n      }));\n    });\n  };\n\n  var handleAddNewPolygon = function handleAddNewPolygon() {\n    setTemplateData(function (prev) {\n      var shapeID = new Date().getTime();\n      prev.variations[variationIndex].elements.push(_objectSpread(_objectSpread({}, defaultPolygon), {}, {\n        id: \"shapes_\".concat(shapeID.toString())\n      }));\n    });\n  };\n\n  var handleAddNewRoundedRect = function handleAddNewRoundedRect() {\n    setTemplateData(function (prev) {\n      var shapeID = new Date().getTime();\n      prev.variations[variationIndex].elements.push(_objectSpread(_objectSpread({}, defaultRoundedRect), {}, {\n        id: \"shapes_\".concat(shapeID.toString())\n      }));\n    });\n  };\n\n  var handleSvgUpload = function handleSvgUpload(e) {\n    svg.getSvgStringFromUpload(e.target.files).then(function (SVG_STRING) {\n      setTemplateData(function (prev) {\n        var svgId = new Date().getTime();\n        prev.variations[variationIndex].elements.push(_objectSpread({\n          id: \"svgs_\".concat(svgId.toString()),\n          svgString: SVG_STRING\n        }, defaultSvg));\n      });\n    });\n  };\n\n  var handleImageUpload = function handleImageUpload() {\n    selectFile({\n      accept: \"image/png, image/jpg, image/jpeg\",\n      multiple: false\n    }, function (_ref2) {\n      var file = _ref2.file;\n      var reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onload = function () {\n        //base64encoded string\n        setTemplateData(function (prev) {\n          var imageID = new Date().getTime();\n          prev.variations[variationIndex].elements.push(_objectSpread(_objectSpread({}, defaultImage), {}, {\n            src: reader.result,\n            id: \"images_\".concat(imageID.toString())\n          }));\n        });\n      };\n    });\n  };\n\n  var handleAddNewText = function handleAddNewText() {\n    setTemplateData(function (prev) {\n      var textID = new Date().getTime();\n      prev.variations[variationIndex].elements.push(_objectSpread(_objectSpread({}, defaultTextBox), {}, {\n        id: \"textBoxes_\".concat(textID.toString())\n      }));\n    });\n  };\n\n  return __jsx(\"div\", null, __jsx(\"div\", {\n    className: \"flex justify-center\"\n  }, __jsx(\"button\", {\n    className: \"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\",\n    onClick: handleAddNewRect\n  }, \"Add new Square\")), __jsx(\"div\", {\n    className: \"flex justify-center\"\n  }, __jsx(\"button\", {\n    className: \"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\",\n    onClick: handleAddNewCircle\n  }, \"Add new Circle\")), __jsx(\"div\", {\n    className: \"flex justify-center\"\n  }, __jsx(\"button\", {\n    className: \"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\",\n    onClick: handleAddNewTrianlge\n  }, \"Add new Triangle\")), __jsx(\"div\", {\n    className: \"flex justify-center\"\n  }, __jsx(\"button\", {\n    className: \"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\",\n    onClick: handleAddNewPolygon\n  }, \"Add new Pentagon\")), __jsx(\"div\", {\n    className: \"flex justify-center\"\n  }, __jsx(\"button\", {\n    className: \"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\",\n    onClick: handleAddNewRoundedRect\n  }, \"Add new Rounded Square\")), __jsx(\"div\", {\n    className: \"flex justify-center\"\n  }, __jsx(\"button\", {\n    className: \"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\",\n    onClick: handleAddNewText\n  }, \"Add new Text\")), __jsx(\"div\", {\n    className: \"flex justify-center\"\n  }, __jsx(\"p\", null, \"upload svg\"), __jsx(\"input\", {\n    className: \"\",\n    type: \"file\",\n    accept: \".svg\",\n    onChange: handleSvgUpload\n  })), __jsx(\"div\", {\n    className: \"flex justify-center\"\n  }, __jsx(\"button\", {\n    className: \"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\",\n    onClick: handleImageUpload\n  }, \"Upload image\")));\n};\n\nexport default SideBar;","map":{"version":3,"sources":["D:/dev/cardclan-backend/template-tool/src/components/DesignTool/SideBar/index.tsx"],"names":["React","defaultCircle","defaultImage","defaultPolygon","defaultRect","defaultRoundedRect","defaultSvg","defaultTextBox","defaultTriangle","svg","useFileUpload","SideBar","variationIndex","setTemplateData","file","selectFile","handleAddNewRect","prev","shapeID","Date","getTime","variations","elements","push","id","toString","handleAddNewCircle","handleAddNewTrianlge","handleAddNewPolygon","handleAddNewRoundedRect","handleSvgUpload","e","getSvgStringFromUpload","target","files","then","SVG_STRING","svgId","svgString","handleImageUpload","accept","multiple","reader","FileReader","readAsDataURL","onload","imageID","src","result","handleAddNewText","textID"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { defaultCircle, defaultImage, defaultPolygon, defaultRect, defaultRoundedRect, defaultSvg, defaultTextBox, defaultTriangle } from '../../../utils/defaults';\r\nimport * as svg from \"../../../utils/svg\"\r\nimport { useFileUpload } from 'use-file-upload'\r\n\r\nconst SideBar = ({ variationIndex, setTemplateData }) => {\r\n    const [file, selectFile] = useFileUpload()\r\n\r\n    const handleAddNewRect = () => {\r\n        setTemplateData((prev) => {\r\n            let shapeID = new Date().getTime();\r\n            prev.variations[variationIndex].elements.push({ ...defaultRect, id: `shapes_${shapeID.toString()}` })\r\n        })\r\n    }\r\n\r\n    const handleAddNewCircle = () => {\r\n        setTemplateData((prev) => {\r\n            let shapeID = new Date().getTime();\r\n            prev.variations[variationIndex].elements.push({ ...defaultCircle, id: `shapes_${shapeID.toString()}` })\r\n        })\r\n    }\r\n    const handleAddNewTrianlge = () => {\r\n        setTemplateData((prev) => {\r\n            let shapeID = new Date().getTime();\r\n            prev.variations[variationIndex].elements.push({ ...defaultTriangle, id: `shapes_${shapeID.toString()}` })\r\n        })\r\n    }\r\n    const handleAddNewPolygon = () => {\r\n        setTemplateData((prev) => {\r\n            let shapeID = new Date().getTime();\r\n            prev.variations[variationIndex].elements.push({ ...defaultPolygon, id: `shapes_${shapeID.toString()}` })\r\n        })\r\n    }\r\n    const handleAddNewRoundedRect = () => {\r\n        setTemplateData((prev) => {\r\n            let shapeID = new Date().getTime();\r\n            prev.variations[variationIndex].elements.push({ ...defaultRoundedRect, id: `shapes_${shapeID.toString()}` })\r\n        })\r\n    }\r\n\r\n    const handleSvgUpload = (e) => {\r\n        svg.getSvgStringFromUpload(e.target.files).then((SVG_STRING) => {\r\n\r\n            setTemplateData((prev) => {\r\n                let svgId = new Date().getTime()\r\n                prev.variations[variationIndex].elements.push({\r\n\r\n                    id: `svgs_${svgId.toString()}`,\r\n                    svgString: SVG_STRING,\r\n                    ...defaultSvg\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    const handleImageUpload = () => {\r\n        selectFile({ accept: \"image/png, image/jpg, image/jpeg\", multiple: false },\r\n            ({ file }: any) => {\r\n\r\n                const reader = new FileReader();\r\n                reader.readAsDataURL(file);\r\n\r\n                reader.onload = () => {\r\n                    //base64encoded string\r\n                    setTemplateData((prev) => {\r\n                        let imageID = new Date().getTime();\r\n                        prev.variations[variationIndex].elements.push({\r\n                            ...defaultImage,\r\n                            src: reader.result,\r\n                            id: `images_${imageID.toString()}`\r\n                        })\r\n                    })\r\n                };\r\n            })\r\n    }\r\n\r\n    const handleAddNewText = () => {\r\n        setTemplateData((prev) => {\r\n            let textID = new Date().getTime();\r\n            prev.variations[variationIndex].elements.push({ ...defaultTextBox, id: `textBoxes_${textID.toString()}` })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div className=\"flex justify-center\">\r\n                <button\r\n                    className=\"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\"\r\n                    onClick={handleAddNewRect}\r\n                >Add new Square</button>\r\n            </div>\r\n            <div className=\"flex justify-center\">\r\n                <button\r\n                    className=\"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\"\r\n                    onClick={handleAddNewCircle}\r\n                >Add new Circle</button>\r\n            </div>\r\n            <div className=\"flex justify-center\">\r\n                <button\r\n                    className=\"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\"\r\n                    onClick={handleAddNewTrianlge}\r\n                >Add new Triangle</button>\r\n            </div>\r\n            <div className=\"flex justify-center\">\r\n                <button\r\n                    className=\"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\"\r\n                    onClick={handleAddNewPolygon}\r\n                >Add new Pentagon</button>\r\n            </div>\r\n            <div className=\"flex justify-center\">\r\n                <button\r\n                    className=\"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\"\r\n                    onClick={handleAddNewRoundedRect}\r\n                >Add new Rounded Square</button>\r\n            </div>\r\n            <div className=\"flex justify-center\">\r\n                <button\r\n                    className=\"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\"\r\n                    onClick={handleAddNewText}\r\n                >Add new Text</button>\r\n            </div>\r\n            <div className=\"flex justify-center\">\r\n                <p>upload svg</p>\r\n                <input className=\"\" type=\"file\" accept=\".svg\" onChange={handleSvgUpload} />\r\n            </div>\r\n            <div className=\"flex justify-center\">\r\n                <button\r\n                    className=\"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\"\r\n                    onClick={handleImageUpload}\r\n                >Upload image</button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideBar\r\n"]},"metadata":{},"sourceType":"module"}