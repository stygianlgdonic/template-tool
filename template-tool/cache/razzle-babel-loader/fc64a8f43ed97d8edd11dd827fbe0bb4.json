{"ast":null,"code":"var _jsxFileName = \"/app/src/components/tailwindComponents/SvgColorSelector.tsx\",\n    _this = this;\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { SketchPicker } from \"react-color\";\nimport * as svg from \"../../utils/svg\";\n\nvar SvgColorSelector = function SvgColorSelector(_ref) {\n  var selectedId = _ref.selectedId,\n      templateData = _ref.templateData,\n      setTemplateData = _ref.setTemplateData,\n      variationIndex = _ref.variationIndex;\n\n  var _useState = useState(\"#171717\"),\n      currentColor = _useState[0],\n      setCurrentColor = _useState[1];\n\n  var svgData = templateData.variations[variationIndex].svgs.find(function (item) {\n    return item.id === selectedId;\n  });\n  var colors = svg.getColors(svgData.svgString);\n  var colorMap = svgData.colorMap;\n\n  var handleSvgElementColorChange = function handleSvgElementColorChange(oldColor, newColor) {\n    setTemplateData(function (prev) {\n      prev.variations[variationIndex].svgs.find(function (item) {\n        return item.id === selectedId;\n      }).colorMap[oldColor] = newColor;\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: \"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, \"Select a color to edit\"), colors.map(function (item, index) {\n    return __jsx(\"div\", {\n      key: index,\n      className: \"h-10 m-5 inline-block\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }\n    }, __jsx(\"div\", {\n      className: \"w-10 h-10 border border-black\",\n      style: {\n        backgroundColor: svgData.colorMap[item] || item\n      },\n      onClick: function onClick() {\n        return setCurrentColor(item);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 29\n      }\n    }));\n  })), __jsx(\"div\", {\n    className: !!currentColor ? \"\" : \"hidden\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, templateData.palette.map(function (item, index) {\n    return __jsx(\"div\", {\n      key: index,\n      className: \"h-10 mt-5 mb-5 flex flex-wrap justify-center content-center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }\n    }, __jsx(\"p\", {\n      className: \"w-48\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 29\n      }\n    }, \"Select \", item.name), \" \", __jsx(\"div\", {\n      className: \"w-10 h-10 border border-black \" + (currentColor === item.color && \"opacity-50\"),\n      style: {\n        backgroundColor: item.color\n      },\n      onClick: function onClick() {\n        return handleSvgElementColorChange(currentColor, item.color);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 72\n      }\n    }));\n  })), __jsx(\"div\", {\n    className: !!currentColor ? \"sm:flex sm:items-start\" : \"hidden\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, __jsx(SketchPicker, {\n    width: \"100%\",\n    color: colorMap[currentColor] || \"#000000\",\n    onChange: function onChange(color) {\n      return handleSvgElementColorChange(currentColor, color.hex);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default SvgColorSelector;","map":{"version":3,"sources":["/app/src/components/tailwindComponents/SvgColorSelector.tsx"],"names":["React","useState","SketchPicker","svg","SvgColorSelector","selectedId","templateData","setTemplateData","variationIndex","currentColor","setCurrentColor","svgData","variations","svgs","find","item","id","colors","getColors","svgString","colorMap","handleSvgElementColorChange","oldColor","newColor","prev","map","index","backgroundColor","palette","name","color","hex"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { SketchPicker } from \"react-color\"\r\nimport * as svg from \"../../utils/svg\"\r\n\r\ninterface Props {\r\n    selectedId: string\r\n    templateData: any\r\n    setTemplateData: any\r\n    variationIndex: number\r\n}\r\n\r\nconst SvgColorSelector: React.FC<Props> = ({\r\n    selectedId,\r\n    templateData,\r\n    setTemplateData,\r\n    variationIndex\r\n}) => {\r\n\r\n    const [currentColor, setCurrentColor] = useState(\"#171717\")\r\n\r\n    const svgData = templateData.variations[variationIndex].svgs.find(item => item.id === selectedId)\r\n    const colors = svg.getColors(svgData.svgString);\r\n    const colorMap = svgData.colorMap\r\n\r\n    const handleSvgElementColorChange = (oldColor: string, newColor: string) => {\r\n        setTemplateData(prev => {\r\n            prev.variations[variationIndex].svgs.find(item => item.id === selectedId)\r\n                .colorMap[oldColor] = newColor\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\r\n            <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\r\n                <div>\r\n                    <p>Select a color to edit</p>\r\n                    {colors.map((item, index) => (\r\n                        <div key={index} className=\"h-10 m-5 inline-block\" >\r\n                            <div\r\n                                className=\"w-10 h-10 border border-black\"\r\n                                style={{ backgroundColor: svgData.colorMap[item] || item }}\r\n                                onClick={() => setCurrentColor(item)}\r\n                            ></div>\r\n                        </div>\r\n                    ))}\r\n\r\n                </div>\r\n                <div className={!!currentColor ? \"\" : \"hidden\"}>\r\n                    {templateData.palette.map((item, index) => (\r\n                        <div key={index} className=\"h-10 mt-5 mb-5 flex flex-wrap justify-center content-center\" >\r\n                            <p className=\"w-48\">Select {item.name}</p> <div\r\n                                className={\"w-10 h-10 border border-black \" + (currentColor === item.color && \"opacity-50\")}\r\n                                style={{ backgroundColor: item.color }}\r\n                                onClick={() => handleSvgElementColorChange(currentColor, item.color)}\r\n                            ></div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className={!!currentColor ? \"sm:flex sm:items-start\" : \"hidden\"}>\r\n                    <SketchPicker\r\n                        width=\"100%\"\r\n                        color={colorMap[currentColor] || \"#000000\"}\r\n                        onChange={(color) => handleSvgElementColorChange(currentColor, color.hex)}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SvgColorSelector\r\n"]},"metadata":{},"sourceType":"module"}