{"ast":null,"code":"var _jsxFileName = \"D:\\\\dev\\\\cardclan-backend\\\\template-tool\\\\src\\\\components\\\\tailwindComponents\\\\ShapeColorSelector.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { SketchPicker } from \"react-color\";\nimport { useFileUpload } from 'use-file-upload';\nimport { stageDimensions } from '../../utils/defaults';\n\nconst ShapeColorSelector = ({\n  selectedId,\n  templateData,\n  setTemplateData,\n  variationIndex,\n  currentPalette\n}) => {\n  const [file, selectFile] = useFileUpload();\n\n  const handleFillImagePattern = () => {\n    selectFile({\n      accept: \"image/png, image/jpg, image/jpeg\",\n      multiple: false\n    }, ({\n      file\n    }) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onload = () => {\n        //base64encoded string => reader.result\n        setTemplateData(prev => {\n          const selectedShape = prev.variations[variationIndex].shapes.find(item => item.id === selectedId);\n          selectedShape.fill = \"\";\n          selectedShape.patternImageUrl = reader.result;\n        });\n      };\n    });\n  };\n\n  const handleStrokeWidthChange = e => {\n    setTemplateData(prev => {\n      const selectedShape = prev.variations[variationIndex].shapes.find(item => item.id === selectedId);\n      selectedShape.strokeWidth = parseInt(e.target.value);\n    });\n  };\n\n  const handleCornerRadius = e => {\n    setTemplateData(prev => {\n      const selectedShape = prev.variations[variationIndex].shapes.find(item => item.id === selectedId);\n      selectedShape.cornerRadius = parseInt(e.target.value);\n    });\n  };\n\n  const handleOpacity = e => {\n    setTemplateData(prev => {\n      const selectedShape = prev.variations[variationIndex].shapes.find(item => item.id === selectedId);\n      selectedShape.opacity = parseFloat(e.target.value);\n    });\n  };\n\n  const handleStrokeColor = color => {\n    setTemplateData(prev => {\n      const selectedShape = prev.variations[variationIndex].shapes.find(item => item.id === selectedId);\n      selectedShape.stroke = color.hex;\n    });\n  };\n\n  const handleShapeFill = color => {\n    setTemplateData(prev => {\n      const selectedShape = prev.variations[variationIndex].shapes.find(item => item.id === selectedId);\n      selectedShape.fill = color;\n      selectedShape.patternImageUrl = undefined;\n    });\n  };\n\n  const handleGradientColor = (color1, color2) => {\n    setTemplateData(prev => {\n      const selectedShape = prev.variations[variationIndex].shapes.find(item => item.id === selectedId);\n      selectedShape.fill = \"\";\n      selectedShape.fillLinearGradientColorStops = [0, color1, 1, color2];\n      selectedShape.fillLinearGradientStartPoint = {\n        x: 0,\n        y: 0\n      };\n      selectedShape.fillLinearGradientEndPoint = {\n        x: selectedId === \"shapes_background\" ? stageDimensions.width : 100,\n        y: selectedId === \"shapes_background\" ? stageDimensions.height : 100\n      };\n      selectedShape.patternImageUrl = undefined;\n    });\n  };\n\n  const handleFillPatternScaleX = e => {\n    setTemplateData(prev => {\n      const selectedShape = prev.variations[variationIndex].shapes.find(item => item.id === selectedId);\n      selectedShape.fillPatternScaleX = parseFloat(e.target.value);\n    });\n  };\n\n  const handleFillPatternScaleY = e => {\n    setTemplateData(prev => {\n      const selectedShape = prev.variations[variationIndex].shapes.find(item => item.id === selectedId);\n      selectedShape.fillPatternScaleY = parseFloat(e.target.value);\n    });\n  };\n\n  const handleFillPatternOffsetX = e => {\n    setTemplateData(prev => {\n      const selectedShape = prev.variations[variationIndex].shapes.find(item => item.id === selectedId);\n      selectedShape.fillPatternOffsetX = parseFloat(e.target.value);\n    });\n  };\n\n  const handleFillPatternOffsetY = e => {\n    setTemplateData(prev => {\n      prev.variations[variationIndex].shapes.find(item => item.id === selectedId).fillPatternOffsetY = parseFloat(e.target.value);\n    });\n  };\n\n  const selectedShapeData = templateData.variations[variationIndex].shapes.find(item => item.id === selectedId);\n  return __jsx(\"div\", {\n    className: \"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: selectedId !== \"shapes_background\" ? \"\" : \"hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, \"Border width: \"), __jsx(\"input\", {\n    className: \"border mb-5\",\n    type: \"number\",\n    min: 0,\n    value: selectedShapeData === null || selectedShapeData === void 0 ? void 0 : selectedShapeData.strokeWidth,\n    onChange: handleStrokeWidthChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }, \"Corner radius:\"), __jsx(\"input\", {\n    className: \"border mb-5\",\n    type: \"number\",\n    min: 0,\n    value: selectedShapeData === null || selectedShapeData === void 0 ? void 0 : selectedShapeData.cornerRadius,\n    onChange: handleCornerRadius,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }, \"Opacity: \"), __jsx(\"input\", {\n    className: \"border mb-5\",\n    type: \"number\",\n    value: selectedShapeData === null || selectedShapeData === void 0 ? void 0 : selectedShapeData.opacity,\n    step: 0.1,\n    min: 0.1,\n    max: 1.0,\n    onChange: handleOpacity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 21\n    }\n  }, \"Image Scale X: \"), __jsx(\"input\", {\n    className: \"border mb-5\",\n    type: \"number\",\n    step: 0.1,\n    value: (selectedShapeData === null || selectedShapeData === void 0 ? void 0 : selectedShapeData.fillPatternScaleX) || 0,\n    onChange: handleFillPatternScaleX,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 21\n    }\n  }, \"Image Scale Y: \"), __jsx(\"input\", {\n    className: \"border mb-5\",\n    type: \"number\",\n    step: 0.1,\n    value: (selectedShapeData === null || selectedShapeData === void 0 ? void 0 : selectedShapeData.fillPatternScaleY) || 0,\n    onChange: handleFillPatternScaleY,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 21\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 21\n    }\n  }, \"Image offset X: \"), __jsx(\"input\", {\n    className: \"border mb-5\",\n    type: \"number\",\n    step: 0.1,\n    value: (selectedShapeData === null || selectedShapeData === void 0 ? void 0 : selectedShapeData.fillPatternOffsetX) || 0,\n    onChange: handleFillPatternOffsetX,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 21\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 21\n    }\n  }, \"Image offset Y: \"), __jsx(\"input\", {\n    className: \"border mb-5\",\n    type: \"number\",\n    step: 0.1,\n    value: (selectedShapeData === null || selectedShapeData === void 0 ? void 0 : selectedShapeData.fillPatternOffsetY) || 0,\n    onChange: handleFillPatternOffsetY,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 21\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 21\n    }\n  }, \"Borer color:\"), __jsx(SketchPicker, {\n    width: \"150px\",\n    color: selectedShapeData === null || selectedShapeData === void 0 ? void 0 : selectedShapeData.stroke,\n    onChange: handleStrokeColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 21\n    }\n  })), __jsx(\"div\", {\n    className: !!(selectedShapeData !== null && selectedShapeData !== void 0 && selectedShapeData.fillPatternImage) ? \"\" : \"hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 21\n    }\n  }, \"Image Offset X: \"), __jsx(\"input\", {\n    className: \"border mb-5\",\n    type: \"number\",\n    value: selectedShapeData === null || selectedShapeData === void 0 ? void 0 : selectedShapeData.fillPatternOffsetX,\n    step: 0.1,\n    min: 0.1,\n    max: 1.0,\n    onChange: handleFillPatternOffsetX,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 21\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 21\n    }\n  }, \"Image Offset Y: \"), __jsx(\"input\", {\n    className: \"border mb-5\",\n    type: \"number\",\n    value: selectedShapeData === null || selectedShapeData === void 0 ? void 0 : selectedShapeData.fillPatternOffsetY,\n    step: 0.1,\n    min: 0.1,\n    max: 1.0,\n    onChange: handleFillPatternOffsetY,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 21\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 21\n    }\n  }, \"Image Scale X: \"), __jsx(\"input\", {\n    className: \"border mb-5\",\n    type: \"number\",\n    value: selectedShapeData === null || selectedShapeData === void 0 ? void 0 : selectedShapeData.fillPatternScaleX,\n    step: 0.1,\n    min: 0.1,\n    max: 1.0,\n    onChange: handleFillPatternScaleX,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 21\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 21\n    }\n  }, \"Image Scale Y: \"), __jsx(\"input\", {\n    className: \"border mb-5\",\n    type: \"number\",\n    value: selectedShapeData === null || selectedShapeData === void 0 ? void 0 : selectedShapeData.fillPatternScaleY,\n    step: 0.1,\n    min: 0.1,\n    max: 1.0,\n    onChange: handleFillPatternScaleY,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 21\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 17\n    }\n  }, currentPalette.map((item, index) => __jsx(\"div\", {\n    key: index,\n    className: \"h-10 mt-5 mb-5 flex flex-wrap justify-center content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 25\n    }\n  }, __jsx(\"p\", {\n    className: \"w-48\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 29\n    }\n  }, \"Select \", item.name), \" \", __jsx(\"div\", {\n    className: \"w-10 h-10 border border-black\",\n    style: {\n      backgroundColor: item.color\n    },\n    onClick: () => handleShapeFill(item.color),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 72\n    }\n  })))), __jsx(\"div\", {\n    className: \"sm:flex sm:items-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 17\n    }\n  }, __jsx(SketchPicker, {\n    width: \"100%\",\n    color: selectedShapeData === null || selectedShapeData === void 0 ? void 0 : selectedShapeData.fill,\n    onChange: color => handleShapeFill(color.hex),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 21\n    }\n  }))), __jsx(\"div\", {\n    className: \"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"flex justify-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 17\n    }\n  }, __jsx(\"button\", {\n    className: \"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\",\n    onClick: handleFillImagePattern,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 21\n    }\n  }, \"Insert image\"))), __jsx(\"div\", {\n    className: \"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }\n  }, __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 17\n    }\n  }, \"Gradient:\"), __jsx(\"div\", {\n    className: \"grid grid-cols-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 21\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 25\n    }\n  }, \"Color 1\"), __jsx(\"div\", {\n    className: \"sm:flex sm:items-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 25\n    }\n  }, __jsx(SketchPicker, {\n    width: \"150px\",\n    color: selectedShapeData !== null && selectedShapeData !== void 0 && selectedShapeData.fillLinearGradientColorStops ? selectedShapeData === null || selectedShapeData === void 0 ? void 0 : selectedShapeData.fillLinearGradientColorStops[1] : \"#171717\",\n    onChange: color => handleGradientColor(color.hex, selectedShapeData !== null && selectedShapeData !== void 0 && selectedShapeData.fillLinearGradientColorStops ? selectedShapeData === null || selectedShapeData === void 0 ? void 0 : selectedShapeData.fillLinearGradientColorStops[3] : \"#171717\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 29\n    }\n  }))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 21\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 25\n    }\n  }, \"Color 2\"), __jsx(\"div\", {\n    className: \"sm:flex sm:items-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 25\n    }\n  }, __jsx(SketchPicker, {\n    width: \"150px\",\n    color: selectedShapeData !== null && selectedShapeData !== void 0 && selectedShapeData.fillLinearGradientColorStops ? selectedShapeData === null || selectedShapeData === void 0 ? void 0 : selectedShapeData.fillLinearGradientColorStops[3] : selectedShapeData === null || selectedShapeData === void 0 ? void 0 : selectedShapeData.fill,\n    onChange: color => handleGradientColor(selectedShapeData !== null && selectedShapeData !== void 0 && selectedShapeData.fillLinearGradientColorStops ? selectedShapeData === null || selectedShapeData === void 0 ? void 0 : selectedShapeData.fillLinearGradientColorStops[1] : selectedShapeData === null || selectedShapeData === void 0 ? void 0 : selectedShapeData.fill, color.hex),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 29\n    }\n  }))))));\n};\n\nexport default ShapeColorSelector;","map":{"version":3,"sources":["D:/dev/cardclan-backend/template-tool/src/components/tailwindComponents/ShapeColorSelector.tsx"],"names":["React","SketchPicker","useFileUpload","stageDimensions","ShapeColorSelector","selectedId","templateData","setTemplateData","variationIndex","currentPalette","file","selectFile","handleFillImagePattern","accept","multiple","reader","FileReader","readAsDataURL","onload","prev","selectedShape","variations","shapes","find","item","id","fill","patternImageUrl","result","handleStrokeWidthChange","e","strokeWidth","parseInt","target","value","handleCornerRadius","cornerRadius","handleOpacity","opacity","parseFloat","handleStrokeColor","color","stroke","hex","handleShapeFill","undefined","handleGradientColor","color1","color2","fillLinearGradientColorStops","fillLinearGradientStartPoint","x","y","fillLinearGradientEndPoint","width","height","handleFillPatternScaleX","fillPatternScaleX","handleFillPatternScaleY","fillPatternScaleY","handleFillPatternOffsetX","fillPatternOffsetX","handleFillPatternOffsetY","fillPatternOffsetY","selectedShapeData","fillPatternImage","map","index","name","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { SketchPicker } from \"react-color\"\r\nimport { useFileUpload } from 'use-file-upload'\r\nimport { stageDimensions } from '../../utils/defaults'\r\n\r\ninterface Props {\r\n    selectedId: string\r\n    templateData: any\r\n    setTemplateData: any\r\n    variationIndex: number\r\n    currentPalette: { name: string, color: string }[]\r\n}\r\n\r\nconst ShapeColorSelector: React.FC<Props> = ({\r\n    selectedId,\r\n    templateData,\r\n    setTemplateData,\r\n    variationIndex,\r\n    currentPalette,\r\n}) => {\r\n    const [file, selectFile] = useFileUpload()\r\n\r\n    const handleFillImagePattern = () => {\r\n        selectFile({ accept: \"image/png, image/jpg, image/jpeg\", multiple: false },\r\n            ({ file }: any) => {\r\n\r\n                const reader = new FileReader();\r\n                reader.readAsDataURL(file);\r\n\r\n                reader.onload = () => {\r\n                    //base64encoded string => reader.result\r\n                    setTemplateData((prev) => {\r\n                        const selectedShape = prev.variations[variationIndex].shapes.find(item => item.id === selectedId)\r\n                        selectedShape.fill = \"\"\r\n                        selectedShape.patternImageUrl = reader.result\r\n                    })\r\n                };\r\n            })\r\n    }\r\n\r\n    const handleStrokeWidthChange = e => {\r\n        setTemplateData(prev => {\r\n            const selectedShape = prev.variations[variationIndex].shapes.find(item => item.id === selectedId)\r\n            selectedShape.strokeWidth = parseInt(e.target.value)\r\n        })\r\n    }\r\n\r\n    const handleCornerRadius = e => {\r\n        setTemplateData(prev => {\r\n            const selectedShape = prev.variations[variationIndex].shapes.find(item => item.id === selectedId)\r\n            selectedShape.cornerRadius = parseInt(e.target.value)\r\n        })\r\n    }\r\n\r\n    const handleOpacity = e => {\r\n        setTemplateData(prev => {\r\n            const selectedShape = prev.variations[variationIndex].shapes.find(item => item.id === selectedId)\r\n            selectedShape.opacity = parseFloat(e.target.value)\r\n        })\r\n    }\r\n\r\n    const handleStrokeColor = (color) => {\r\n        setTemplateData(prev => {\r\n            const selectedShape = prev.variations[variationIndex].shapes.find(item => item.id === selectedId)\r\n            selectedShape.stroke = color.hex\r\n        })\r\n    }\r\n\r\n    const handleShapeFill = (color: string) => {\r\n        setTemplateData(prev => {\r\n            const selectedShape = prev.variations[variationIndex].shapes.find(item => item.id === selectedId)\r\n            selectedShape.fill = color\r\n            selectedShape.patternImageUrl = undefined\r\n        })\r\n    }\r\n\r\n    const handleGradientColor = (color1: string, color2: string) => {\r\n        setTemplateData(prev => {\r\n            const selectedShape = prev.variations[variationIndex].shapes.find(item => item.id === selectedId)\r\n            selectedShape.fill = \"\"\r\n            selectedShape.fillLinearGradientColorStops = [0, color1, 1, color2]\r\n            selectedShape.fillLinearGradientStartPoint = { x: 0, y: 0 }\r\n            selectedShape.fillLinearGradientEndPoint = {\r\n                x: selectedId === \"shapes_background\" ? stageDimensions.width : 100,\r\n                y: selectedId === \"shapes_background\" ? stageDimensions.height : 100\r\n            }\r\n            selectedShape.patternImageUrl = undefined\r\n        })\r\n    }\r\n\r\n    const handleFillPatternScaleX = (e) => {\r\n        setTemplateData(prev => {\r\n            const selectedShape = prev.variations[variationIndex].shapes.find(item => item.id === selectedId)\r\n            selectedShape.fillPatternScaleX = parseFloat(e.target.value)\r\n        })\r\n    }\r\n\r\n    const handleFillPatternScaleY = (e) => {\r\n        setTemplateData(prev => {\r\n            const selectedShape = prev.variations[variationIndex].shapes.find(item => item.id === selectedId)\r\n            selectedShape.fillPatternScaleY = parseFloat(e.target.value)\r\n        })\r\n    }\r\n\r\n    const handleFillPatternOffsetX = (e) => {\r\n        setTemplateData(prev => {\r\n            const selectedShape = prev.variations[variationIndex].shapes.find(item => item.id === selectedId)\r\n            selectedShape.fillPatternOffsetX = parseFloat(e.target.value)\r\n        })\r\n    }\r\n\r\n    const handleFillPatternOffsetY = (e) => {\r\n        setTemplateData(prev => {\r\n            prev.variations[variationIndex].shapes.find(item => item.id === selectedId)\r\n                .fillPatternOffsetY = parseFloat(e.target.value)\r\n        })\r\n    }\r\n\r\n\r\n    const selectedShapeData = templateData.variations[variationIndex].shapes.find(item => item.id === selectedId)\r\n\r\n    return (\r\n        <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\r\n            <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\r\n                <div className={selectedId !== \"shapes_background\" ? \"\" : \"hidden\"}>\r\n                    <p>Border width: </p>\r\n                    <input\r\n                        className=\"border mb-5\"\r\n                        type=\"number\"\r\n                        min={0}\r\n                        value={selectedShapeData?.strokeWidth}\r\n                        onChange={handleStrokeWidthChange}\r\n                    />\r\n                    <p>Corner radius:</p>\r\n                    <input\r\n                        className=\"border mb-5\"\r\n                        type=\"number\"\r\n                        min={0}\r\n                        value={selectedShapeData?.cornerRadius}\r\n                        onChange={handleCornerRadius}\r\n                    />\r\n                    <p>Opacity: </p>\r\n                    <input\r\n                        className=\"border mb-5\"\r\n                        type=\"number\"\r\n                        value={selectedShapeData?.opacity}\r\n                        step={0.1}\r\n                        min={0.1}\r\n                        max={1.0}\r\n                        onChange={handleOpacity}\r\n                    />\r\n                    <p>Image Scale X: </p>\r\n                    <input\r\n                        className=\"border mb-5\"\r\n                        type=\"number\"\r\n                        step={0.1}\r\n                        value={selectedShapeData?.fillPatternScaleX || 0}\r\n                        onChange={handleFillPatternScaleX}\r\n                    />\r\n                    <p>Image Scale Y: </p>\r\n                    <input\r\n                        className=\"border mb-5\"\r\n                        type=\"number\"\r\n                        step={0.1}\r\n                        value={selectedShapeData?.fillPatternScaleY || 0}\r\n                        onChange={handleFillPatternScaleY}\r\n                    />\r\n                    <p>Image offset X: </p>\r\n                    <input\r\n                        className=\"border mb-5\"\r\n                        type=\"number\"\r\n                        step={0.1}\r\n                        value={selectedShapeData?.fillPatternOffsetX || 0}\r\n                        onChange={handleFillPatternOffsetX}\r\n                    />\r\n                    <p>Image offset Y: </p>\r\n                    <input\r\n                        className=\"border mb-5\"\r\n                        type=\"number\"\r\n                        step={0.1}\r\n                        value={selectedShapeData?.fillPatternOffsetY || 0}\r\n                        onChange={handleFillPatternOffsetY}\r\n                    />\r\n                    <p>Borer color:</p>\r\n                    <SketchPicker\r\n                        width=\"150px\"\r\n                        color={selectedShapeData?.stroke}\r\n                        onChange={handleStrokeColor}\r\n                    />\r\n                </div>\r\n                <div className={!!selectedShapeData?.fillPatternImage ? \"\" : \"hidden\"}>\r\n                    <p>Image Offset X: </p>\r\n                    <input\r\n                        className=\"border mb-5\"\r\n                        type=\"number\"\r\n                        value={selectedShapeData?.fillPatternOffsetX}\r\n                        step={0.1} min={0.1} max={1.0}\r\n                        onChange={handleFillPatternOffsetX}\r\n                    />\r\n                    <p>Image Offset Y: </p>\r\n                    <input\r\n                        className=\"border mb-5\"\r\n                        type=\"number\"\r\n                        value={selectedShapeData?.fillPatternOffsetY}\r\n                        step={0.1} min={0.1} max={1.0}\r\n                        onChange={handleFillPatternOffsetY}\r\n                    />\r\n                    <p>Image Scale X: </p>\r\n                    <input\r\n                        className=\"border mb-5\"\r\n                        type=\"number\"\r\n                        value={selectedShapeData?.fillPatternScaleX}\r\n                        step={0.1} min={0.1} max={1.0}\r\n                        onChange={handleFillPatternScaleX}\r\n                    />\r\n                    <p>Image Scale Y: </p>\r\n                    <input\r\n                        className=\"border mb-5\"\r\n                        type=\"number\"\r\n                        value={selectedShapeData?.fillPatternScaleY}\r\n                        step={0.1} min={0.1} max={1.0}\r\n                        onChange={handleFillPatternScaleY}\r\n                    />\r\n\r\n                </div>\r\n                <div>\r\n                    {currentPalette.map((item, index) => (\r\n                        <div key={index} className=\"h-10 mt-5 mb-5 flex flex-wrap justify-center content-center\" >\r\n                            <p className=\"w-48\">Select {item.name}</p> <div\r\n                                className=\"w-10 h-10 border border-black\"\r\n                                style={{ backgroundColor: item.color }}\r\n                                onClick={() => handleShapeFill(item.color)}\r\n                            ></div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"sm:flex sm:items-start\">\r\n                    <SketchPicker\r\n                        width=\"100%\"\r\n                        color={selectedShapeData?.fill}\r\n                        onChange={(color) => handleShapeFill(color.hex)}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\r\n                <div className=\"flex justify-center\">\r\n                    <button\r\n                        className=\"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\"\r\n                        onClick={handleFillImagePattern}\r\n                    >Insert image</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\r\n                <b>Gradient:</b>\r\n                <div className=\"grid grid-cols-2\">\r\n                    <div>\r\n                        <p>Color 1</p>\r\n                        <div className=\"sm:flex sm:items-start\">\r\n                            <SketchPicker\r\n                                width=\"150px\"\r\n                                color={selectedShapeData?.fillLinearGradientColorStops ?\r\n                                    selectedShapeData?.fillLinearGradientColorStops[1] :\r\n                                    \"#171717\"}\r\n                                onChange={(color) => handleGradientColor(\r\n                                    color.hex,\r\n                                    selectedShapeData?.fillLinearGradientColorStops ?\r\n                                        selectedShapeData?.fillLinearGradientColorStops[3] :\r\n                                        \"#171717\")}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <p>Color 2</p>\r\n                        <div className=\"sm:flex sm:items-start\">\r\n                            <SketchPicker\r\n                                width=\"150px\"\r\n                                color={selectedShapeData?.fillLinearGradientColorStops ?\r\n                                    selectedShapeData?.fillLinearGradientColorStops[3] :\r\n                                    selectedShapeData?.fill}\r\n                                onChange={(color) => handleGradientColor(\r\n                                    selectedShapeData?.fillLinearGradientColorStops ?\r\n                                        selectedShapeData?.fillLinearGradientColorStops[1] :\r\n                                        selectedShapeData?.fill,\r\n                                    color.hex)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShapeColorSelector\r\n"]},"metadata":{},"sourceType":"module"}