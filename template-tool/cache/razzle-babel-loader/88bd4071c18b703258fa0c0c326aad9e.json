{"ast":null,"code":"const _excluded = [\"patternImageUrl\"];\nvar _jsxFileName = \"D:\\\\Development\\\\cardclan-backend\\\\template-tool\\\\src\\\\components\\\\DesignTool\\\\UPolygon.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useRef } from 'react';\nimport { RegularPolygon } from 'react-konva';\nimport useImage from 'use-image';\n\nconst UPolygon = ({\n  shapeProps,\n  onSelect,\n  onChange,\n  onEditClick\n}) => {\n  const shapeRef = useRef(null);\n\n  const {\n    patternImageUrl\n  } = shapeProps,\n        restProps = _objectWithoutProperties(shapeProps, _excluded);\n\n  const [image] = useImage(patternImageUrl || null);\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, __jsx(RegularPolygon, _extends({\n    ref: shapeRef,\n    onClick: onSelect,\n    onTap: onSelect,\n    onDblClick: onEditClick,\n    onDblTap: onEditClick,\n    draggable: true,\n    strokeScaleEnabled: false,\n    onDragEnd: e => {\n      onChange(_objectSpread(_objectSpread({}, shapeProps), {}, {\n        x: e.target.x(),\n        y: e.target.y()\n      }));\n    },\n    onTransformEnd: e => {\n      onChange(_objectSpread(_objectSpread({}, shapeProps), {}, {\n        scaleX: e.target.attrs.scaleX,\n        scaleY: e.target.attrs.scaleY\n      }));\n    }\n  }, restProps, {\n    fillPatternImage: image,\n    fillPatternOffsetX: 0,\n    fillPatternOffsetY: 0,\n    fillPatternScaleX: 0.1,\n    fillPatternScaleY: 0.1,\n    fillPatternRepeat: \"no-repeat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default UPolygon;","map":{"version":3,"sources":["D:/Development/cardclan-backend/template-tool/src/components/DesignTool/UPolygon.tsx"],"names":["React","useRef","RegularPolygon","useImage","UPolygon","shapeProps","onSelect","onChange","onEditClick","shapeRef","patternImageUrl","restProps","image","e","x","target","y","scaleX","attrs","scaleY"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,cAAT,QAA+B,aAA/B;AACA,OAAOC,QAAP,MAAqB,WAArB;;AASA,MAAMC,QAAyB,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,QAAd;AAAwBC,EAAAA,QAAxB;AAAkCC,EAAAA;AAAlC,CAAD,KAAqD;AAEnF,QAAMC,QAAQ,GAAGR,MAAM,CAAC,IAAD,CAAvB;;AAEA,QAAM;AAAES,IAAAA;AAAF,MAAoCL,UAA1C;AAAA,QAA4BM,SAA5B,4BAA0CN,UAA1C;;AACA,QAAM,CAACO,KAAD,IAAUT,QAAQ,CAACO,eAAe,IAAI,IAApB,CAAxB;AAEA,SACI,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,cAAD;AACI,IAAA,GAAG,EAAED,QADT;AAEI,IAAA,OAAO,EAAEH,QAFb;AAGI,IAAA,KAAK,EAAEA,QAHX;AAII,IAAA,UAAU,EAAEE,WAJhB;AAKI,IAAA,QAAQ,EAAEA,WALd;AAMI,IAAA,SAAS,MANb;AAOI,IAAA,kBAAkB,EAAE,KAPxB;AAQI,IAAA,SAAS,EAAGK,CAAD,IAAO;AACdN,MAAAA,QAAQ,iCACDF,UADC;AAEJS,QAAAA,CAAC,EAAED,CAAC,CAACE,MAAF,CAASD,CAAT,EAFC;AAGJE,QAAAA,CAAC,EAAEH,CAAC,CAACE,MAAF,CAASC,CAAT;AAHC,SAAR;AAKH,KAdL;AAeI,IAAA,cAAc,EAAGH,CAAD,IAAO;AACnBN,MAAAA,QAAQ,iCACDF,UADC;AAEJY,QAAAA,MAAM,EAAEJ,CAAC,CAACE,MAAF,CAASG,KAAT,CAAeD,MAFnB;AAGJE,QAAAA,MAAM,EAAEN,CAAC,CAACE,MAAF,CAASG,KAAT,CAAeC;AAHnB,SAAR;AAKH;AArBL,KAsBQR,SAtBR;AAuBI,IAAA,gBAAgB,EAAEC,KAvBtB;AAwBI,IAAA,kBAAkB,EAAE,CAxBxB;AAyBI,IAAA,kBAAkB,EAAE,CAzBxB;AA0BI,IAAA,iBAAiB,EAAE,GA1BvB;AA2BI,IAAA,iBAAiB,EAAE,GA3BvB;AA4BI,IAAA,iBAAiB,EAAC,WA5BtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,CADJ;AAkCH,CAzCD;;AA0CA,eAAeR,QAAf","sourcesContent":["import React, { useRef } from 'react';\r\nimport { RegularPolygon } from 'react-konva';\r\nimport useImage from 'use-image';\r\n\r\ninterface Props {\r\n    shapeProps: any\r\n    onSelect: any\r\n    onChange: any\r\n    onEditClick: any\r\n}\r\n\r\nconst UPolygon: React.FC<Props> = ({ shapeProps, onSelect, onChange, onEditClick }) => {\r\n\r\n    const shapeRef = useRef(null)\r\n\r\n    const { patternImageUrl, ...restProps } = shapeProps\r\n    const [image] = useImage(patternImageUrl || null)\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <RegularPolygon\r\n                ref={shapeRef}\r\n                onClick={onSelect}\r\n                onTap={onSelect}\r\n                onDblClick={onEditClick}\r\n                onDblTap={onEditClick}\r\n                draggable\r\n                strokeScaleEnabled={false}\r\n                onDragEnd={(e) => {\r\n                    onChange({\r\n                        ...shapeProps,\r\n                        x: e.target.x(),\r\n                        y: e.target.y(),\r\n                    });\r\n                }}\r\n                onTransformEnd={(e) => {\r\n                    onChange({\r\n                        ...shapeProps,\r\n                        scaleX: e.target.attrs.scaleX,\r\n                        scaleY: e.target.attrs.scaleY,\r\n                    });\r\n                }}\r\n                {...restProps}\r\n                fillPatternImage={image}\r\n                fillPatternOffsetX={0}\r\n                fillPatternOffsetY={0}\r\n                fillPatternScaleX={0.1}\r\n                fillPatternScaleY={0.1}\r\n                fillPatternRepeat=\"no-repeat\"\r\n            />\r\n        </React.Fragment>\r\n    );\r\n};\r\nexport default UPolygon\r\n"]},"metadata":{},"sourceType":"module"}