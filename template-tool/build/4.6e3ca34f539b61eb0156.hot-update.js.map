{"version":3,"file":"4.6e3ca34f539b61eb0156.hot-update.js","sources":["webpack:///./src/components/Home/components/SvgLibrary/SvgListContainer/RenderSvg.tsx","webpack:///./src/components/tailwindComponents/ButtonLoader.tsx"],"sourcesContent":["import React from 'react'\r\nimport swal from 'sweetalert'\r\nimport * as svg from \"../../../../../utils/svg\"\r\nimport ButtonLoader from '../../../../tailwindComponents/ButtonLoader'\r\n\r\ninterface Props {\r\n    svgData: {\r\n        _id: string\r\n        svgURL: string\r\n        svgString: string\r\n        tags: string[]\r\n        created_at: string\r\n        updated_at: string\r\n    }\r\n}\r\n\r\nconst RenderSvg: React.FC<Props> = ({ svgData }) => {\r\n    const svgUrl = svg.svgToURL(svgData.svgString)\r\n\r\n    const { mutate: deleteSvg, isLoading: deleteSvgLoading, error: errorDeleteSvg } = useMutation(\r\n        (SVG_ID: string) => svg_service.deleteSvgByID(SVG_ID), {\r\n        onSuccess: (data, variables, context) => {\r\n            refetchSvgList()\r\n        }\r\n    })\r\n\r\n    const handleDeleteSvg = () => {\r\n        swal(\"Are you sure?\", \"You want to delete this svg\", \"warning\").then((willDelete) => {\r\n            if (!!willDelete) {\r\n                deleteSvg(svgData._id)\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex justify-between pr-2 pl-2\">\r\n            <div>\r\n                <button className=\"outline-none\" style={{ width: 100, height: 100 }} >\r\n                    <img className=\"border border-gray95\" alt=\"svg\" src={svgUrl} />\r\n                </button>\r\n            </div>\r\n            <div className=\"flex flex-col justify-center\">\r\n                <button\r\n                    onClick={handleDeleteSvg}\r\n                    disabled={!!deleteSvgLoading}\r\n                    className=\"bg-redish hover:bg-red600 text-white font-bold py-2 px-4 rounded w-20\"\r\n                >\r\n                    {!!deleteSvgLoading ? <ButtonLoader /> : <p>Delete</p>}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RenderSvg\r\n","import React from 'react'\r\n\r\nconst ButtonLoader = () => {\r\n    return (\r\n        <div className=\" flex justify-center items-center\">\r\n            <div className=\"animate-spin rounded-full h-6 w-6 border-t-2 border-b-2 border-purple-500\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ButtonLoader\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAYA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;ACtDA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;A","sourceRoot":""}