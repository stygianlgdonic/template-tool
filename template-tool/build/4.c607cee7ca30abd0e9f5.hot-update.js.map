{"version":3,"file":"4.c607cee7ca30abd0e9f5.hot-update.js","sources":["webpack:///./src/components/Home/components/SvgLibrary/SvgListContainer/RenderSvg.tsx","webpack:///./src/components/Home/components/SvgLibrary/SvgListContainer/index.tsx","webpack:///./src/components/tailwindComponents/ButtonLoader.tsx"],"sourcesContent":["import React from 'react'\r\nimport { useMutation } from 'react-query'\r\nimport swal from 'sweetalert'\r\nimport { svg_service } from '../../../../../services/svgService'\r\nimport * as svg from \"../../../../../utils/svg\"\r\nimport ButtonLoader from '../../../../tailwindComponents/ButtonLoader'\r\n\r\ninterface Props {\r\n    svgData: {\r\n        _id: string\r\n        svgURL: string\r\n        svgString: string\r\n        tags: string[]\r\n        created_at: string\r\n        updated_at: string\r\n    }\r\n    refetchSvgList: any\r\n}\r\n\r\nconst RenderSvg: React.FC<Props> = ({ svgData, refetchSvgList }) => {\r\n    const svgUrl = svg.svgToURL(svgData.svgString)\r\n\r\n    const { mutate: deleteSvg, isLoading: deleteSvgLoading, error: errorDeleteSvg } = useMutation(\r\n        (SVG_ID: string) => svg_service.deleteSvgByID(SVG_ID), {\r\n        onSuccess: (data, variables, context) => {\r\n            refetchSvgList()\r\n        }\r\n    })\r\n\r\n    const handleDeleteSvg = () => {\r\n        swal(\"Are you sure?\", \"You want to delete this svg\", \"warning\").then((willDelete) => {\r\n            if (!!willDelete) {\r\n                deleteSvg(svgData._id)\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex justify-between pr-2 pl-2\">\r\n            <div>\r\n                <button className=\"outline-none\">\r\n                    <img alt=\"svg\" src={svgUrl} height={100} style={{ height: 100, objectFit: \"contain\" }} />\r\n                </button>\r\n            </div>\r\n            <div className=\"flex flex-col justify-center\">\r\n                <button\r\n                    onClick={handleDeleteSvg}\r\n                    disabled={!!deleteSvgLoading}\r\n                    className=\"bg-redish hover:bg-red600 text-white font-bold py-2 px-4 rounded w-20\"\r\n                >\r\n                    {!!deleteSvgLoading ? <ButtonLoader /> : <p>Delete</p>}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RenderSvg\r\n","import React, { useState } from 'react'\r\nimport RenderSvg from './RenderSvg'\r\n\r\ninterface Props {\r\n    svgList: any\r\n    svgListLoading: any\r\n    svgListError: any\r\n    refetchSvgList: any\r\n}\r\n\r\nconst SvgListContainer: React.FC<Props> = ({ svgList, svgListLoading, svgListError, refetchSvgList }) => {\r\n\r\n    const [searchTags, setSearchTags] = useState([])\r\n    const [searchTerm, setSearchTerm] = useState(\"\")\r\n\r\n    // const { data: searchedSvgs, error: searchedSvgsError, isLoading: searchedSvgsLoading } = useQuery<any, Error>(\r\n    //     \"svgSearch\", () => svg_service.searchSvgsByTags([...searchTags])\r\n    // )\r\n\r\n    return (\r\n\r\n        <div>\r\n            {/* <div className={!!searchedSvgs?.data?.length ? \"\" : \"hidden\"} >\r\n                <div>\r\n                    Search results\r\n                </div>\r\n                <div>\r\n                    {searchedSvgs?.data?.map(item => (\r\n                        <RenderSvg key={item._id} svgData={item} />\r\n                    ))}\r\n                </div>\r\n            </div> */}\r\n            <div\r\n            // className={!!searchedSvgs?.data?.length ? \"hidden\" : \"\"}\r\n            >\r\n                <div>\r\n                    <p className=\"text-2xl mb-2\">Svgs</p>\r\n                </div>\r\n                <div className=\" h-96 overflow-auto\">\r\n                    <p className={!!svgListLoading ? \"\" : \"hidden\"} >Loading svgs ...</p>\r\n                    <p className={!!svgListError ? \"\" : \"hidden\"} >{svgListError}</p>\r\n                    <p className={!!svgList?.error ? \"\" : \"hidden\"} >{svgList?.error?.message}</p>\r\n                    <p className={!svgList?.data?.length ? \"\" : \"hidden\"} >No svgs to load, add new from below.</p>\r\n                    {svgList?.data?.map(item => (\r\n                        <div key={item._id} className=\"mb-2 border border-gray95\" >\r\n                            <RenderSvg svgData={item} refetchSvgList={refetchSvgList} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div >\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\nexport default SvgListContainer\r\n","import React from 'react'\r\n\r\nconst ButtonLoader = () => {\r\n    return (\r\n        <div className=\" flex justify-center items-center\">\r\n            <div className=\"animate-spin rounded-full h-6 w-6 border-t-2 border-b-2 border-purple-500\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ButtonLoader\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAaA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;ACzDA;AACA;AACA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;;;;;;;;;;;;;;;;;ACvDA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;A","sourceRoot":""}