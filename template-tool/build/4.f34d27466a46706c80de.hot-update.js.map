{"version":3,"file":"4.f34d27466a46706c80de.hot-update.js","sources":["webpack:///./src/components/Home/components/SvgLibrary/SvgListContainer/SearchBar.tsx","webpack:///./src/components/Home/components/SvgLibrary/SvgListContainer/index.tsx"],"sourcesContent":["import React from 'react';\r\n\r\nconst SearchBar: React.FC = () => {\r\n    return (\r\n        <div className=\" flex justify-center items-center  w-full\">\r\n\r\n            <div className=\"flex h-14 rounded-md border-bordercolor border justify-center items-center w-11/12\">\r\n                <button>\r\n                    <span className=\"w-auto flex justify-end items-center text-grey text-sm p-3\">\r\n                        <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M6 2C3.79086 2 2 3.79086 2 6C2 8.20914 3.79086 10 6 10C8.20914 10 10 8.20914 10 6C10 3.79086 8.20914 2 6 2ZM0 6C0 2.68629 2.68629 0 6 0C9.31371 0 12 2.68629 12 6C12 7.29583 11.5892 8.49572 10.8907 9.47653L15.7071 14.2929C16.0976 14.6834 16.0976 15.3166 15.7071 15.7071C15.3166 16.0976 14.6834 16.0976 14.2929 15.7071L9.47653 10.8907C8.49572 11.5892 7.29583 12 6 12C2.68629 12 0 9.31371 0 6Z\" fill=\"#9CA3AF\" />\r\n                        </svg>\r\n\r\n                    </span>\r\n                </button>\r\n                <input className=\"w-full rounded text-sm text-gray95 outline-none h-12 \" type=\"text\" placeholder=\"Search anything from elements\" />\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default SearchBar;\r\n","import React, { useState } from 'react'\r\nimport RenderSvg from './RenderSvg'\r\nimport SearchBar from \"./SearchBar\"\r\n\r\ninterface Props {\r\n    svgList: any\r\n    svgListLoading: any\r\n    svgListError: any\r\n    refetchSvgList: any\r\n}\r\n\r\nconst SvgListContainer: React.FC<Props> = ({ svgList, svgListLoading, svgListError, refetchSvgList }) => {\r\n\r\n    // const [searchTags, setSearchTags] = useState([])\r\n    const [searchTerm, setSearchTerm] = useState(\"\")\r\n\r\n    // const { data: searchedSvgs, error: searchedSvgsError, isLoading: searchedSvgsLoading } = useQuery<any, Error>(\r\n    //     \"svgSearch\", () => svg_service.searchSvgsByTags([...searchTags])\r\n    // )\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div>\r\n                <div>\r\n                    <p className=\"text-2xl mb-2\">Svgs</p>\r\n                </div>\r\n                <div>\r\n                    <SearchBar />\r\n                </div>\r\n                <div className=\" h-96 overflow-auto\">\r\n                    <p className={!!svgListLoading ? \"\" : \"hidden\"} >Loading svgs ...</p>\r\n                    <p className={!!svgListError ? \"\" : \"hidden\"} >{svgListError}</p>\r\n                    <p className={!!svgList?.error ? \"\" : \"hidden\"} >{svgList?.error?.message}</p>\r\n                    <p className={!svgList?.data?.length ? \"\" : \"hidden\"} >No svgs to load, add new from below.</p>\r\n                    {svgList?.data?.map(item => (\r\n                        <div key={item._id} className=\"mb-2\" >\r\n                            <RenderSvg svgData={item} refetchSvgList={refetchSvgList} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SvgListContainer\r\n"],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;;;;A","sourceRoot":""}