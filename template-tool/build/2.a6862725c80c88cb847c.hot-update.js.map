{"version":3,"file":"2.a6862725c80c88cb847c.hot-update.js","sources":["webpack:///./src/components/Home/components/SvgLibrary/index.tsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport * as svg from \"../../../../utils/svg\"\r\nimport { useForm } from 'react-hook-form'\r\nimport CustomTextField from '../../../tailwindComponents/CustomTextField'\r\nimport swal from 'sweetalert'\r\nimport useSvg from '../../../../utils/useSvg'\r\nimport plus from \"../../../../assets/svgs/plus.svg\"\r\nimport { svg_service } from '../../../../services/svgService'\r\nimport SvgListContainer from './SvgListContainer'\r\nimport { useMutation, useQuery } from 'react-query'\r\nimport ButtonLoader from '../../../tailwindComponents/ButtonLoader'\r\n\r\nconst SvgLibrary = () => {\r\n    const svgPath = `  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />`;\r\n    const closeIcon = useSvg(\r\n        \"http://www.w3.org/2000/svg\",\r\n        \"0 0 24 24\",\r\n        \"white\",\r\n        \"#FF3C69\",\r\n        svgPath\r\n    );\r\n\r\n    const { register, handleSubmit } = useForm()\r\n    const [tag, setTag] = useState(\"\")\r\n    const [tagsList, setTagsList] = useState([]);\r\n    const [isFirstTag, setIsFirstTag] = useState(true);\r\n    const [searchTags, setSearchTags] = useState([])\r\n\r\n    const { data: svgList, error: svgListError, isLoading: svgListLoading, refetch: refetchSvgList } = useQuery<any, Error>(\r\n        \"svgSearch\", () => svg_service.searchSvgsByTags([...searchTags])\r\n    )\r\n\r\n    console.log({ svgList })\r\n    const { mutate: mutateNewSvg, isLoading: addingNewSvg, error: errorAddingSvg } = useMutation(\r\n        (SVG_STRING: string) => svg_service.addNewSvg({\r\n            svgURL: \"\",\r\n            svgString: SVG_STRING,\r\n            tags: tagsList\r\n        }), {\r\n        onSuccess: (data, variables, context) => {\r\n            refetchSvgList()\r\n        }\r\n    })\r\n\r\n    const pushTagToTagsList = (tagName) => {\r\n        if (!tagName) {\r\n            return;\r\n        }\r\n        let checkExisting = tagsList.filter((currentTag) => currentTag == tagName);\r\n        if (checkExisting.length && !isFirstTag) {\r\n            swal({\r\n                title: \"Tag already added\",\r\n                icon: \"error\",\r\n            });\r\n        } else {\r\n            setTagsList([...tagsList, tagName]);\r\n            setIsFirstTag(false);\r\n        }\r\n    };\r\n    const removeFromTagsList = (index) => {\r\n        let newTagsList = [...tagsList];\r\n        newTagsList.splice(index, 1);\r\n        setTagsList(newTagsList);\r\n    };\r\n\r\n    const handleChangeTag = (e) => {\r\n        setTag(e.target.value);\r\n    };\r\n\r\n    const handlePushTag = () => {\r\n        pushTagToTagsList(tag);\r\n        setTag(\"\");\r\n    };\r\n\r\n    const handleKeyDown = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            e.preventDefault();\r\n            pushTagToTagsList(tag);\r\n            setTag(\"\");\r\n        }\r\n    };\r\n    const onSubmit = (data) => {\r\n\r\n        if (!tagsList?.length) {\r\n            swal({\r\n                title: \"please enter appsumo code\",\r\n                text: `Hit '+' icon or press enter after typing your code`,\r\n                icon: \"error\",\r\n            });\r\n            return\r\n        }\r\n\r\n        if (!!data?.svgupload) {\r\n            const inputFiles = data?.svgupload\r\n            svg.getSvgStringFromUpload(inputFiles).then((SVG_STRING: string) => {\r\n\r\n                mutateNewSvg(SVG_STRING)\r\n\r\n                // TODO - upload this svg to amazon s3 then get url and pass that to svgURL\r\n                // svg_service.addNewSvg({\r\n                //     svgURL: \"\",\r\n                //     svgString: SVG_STRING,\r\n                //     tags: tagsList\r\n                // }).then(res => {\r\n                //     console.log({ res })\r\n                // })\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-5\" >\r\n            <SvgListContainer\r\n                svgList={svgList}\r\n                svgListError={svgListError}\r\n                svgListLoading={svgListLoading}\r\n                refetchSvgList={refetchSvgList}\r\n                setSearchTags={setSearchTags}\r\n            />\r\n            <div>\r\n                <div>\r\n                    <p className=\"text-2xl\">Upload new Svg</p>\r\n                </div>\r\n                <div className=\"flex justify-center\">\r\n                    <form onSubmit={handleSubmit(onSubmit)} >\r\n                        <CustomTextField\r\n                            label=\"Enter Tag\"\r\n                            id=\"tagName\"\r\n                            name=\"tagName\"\r\n                            value={tag}\r\n                            onChange={handleChangeTag}\r\n                            placeholder=\"Type and hit Enter/Return key\"\r\n                            onKeyDown={handleKeyDown}\r\n                            onClick={handlePushTag}\r\n                            endIcon={plus}\r\n                            className=\"relative  border border-grey appearance-none rounded w-full p-2 mt-0 focus:outline-none cursor-text\"\r\n                        />\r\n                        <div className=\"flex flex-grow flex-wrap flex-col\">\r\n                            {tagsList.map((item, index) => (\r\n                                <div key={item} className=\"flex justify-between rounded-3xl px-5 py-1 border-radicalRed border-2 mt-1 text-radicalRed \">\r\n                                    <p>{item}</p>\r\n                                    <img\r\n                                        onClick={() => removeFromTagsList(index)}\r\n                                        src={closeIcon}\r\n                                        alt=\"error\"\r\n                                        className=\"w-4  cursor-pointer \"\r\n                                    />\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        <input\r\n                            {...register('svgupload')}\r\n                            className=\"mt-3 mb-3\"\r\n                            name=\"svgupload\"\r\n                            type=\"file\"\r\n                            accept=\".svg\"\r\n                        // onChange={handleSvgUpload}\r\n                        />\r\n                        <button\r\n                            disabled={!!addingNewSvg}\r\n                            className=\"bg-indigo500 hover:bg-indigo700 text-white font-bold py-2 px-4 w-24 rounded outline-none\"\r\n                        >\r\n                            {!!addingNewSvg ? <ButtonLoader /> : <p>Submit</p>}\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SvgLibrary\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;;;;A","sourceRoot":""}