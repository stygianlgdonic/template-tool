{"version":3,"file":"0.770722675b5ac67cabb1.hot-update.js","sources":["webpack:///./src/components/DesignTool/index.tsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { INITIAL_STATE, TemplateContext } from '../../contexts/TemplateContext';\r\nimport SelectVariation from \"../tailwindComponents/SelectVariation\"\r\nimport SaveVariation from \"../tailwindComponents/SaveVariation\"\r\nimport SaveTemplate from \"../tailwindComponents/SaveTemplate\"\r\nimport swal from \"sweetalert\"\r\nimport SideBar from './SideBar';\r\nimport WebFont from \"webfontloader\";\r\nimport TopToolBar from './TopToolBar';\r\nimport MainStage from './MainStage';\r\nimport EditingTools from './EditingTools';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { ROUTE_NAMES } from '../../routes/route_names';\r\nimport { addNewTemplate } from '../../services/templateService';\r\nimport { useMutation } from 'react-query';\r\n\r\nconst DesignTool: React.FC = () => {\r\n\r\n    const addNewTemplateMutation = useMutation(addNewTemplate)\r\n\r\n    const [variationIndex, setVariationIndex] = useState<number>(0)\r\n\r\n    const [showSaveVariationModal, setShowSaveVariationModal] = useState(false)\r\n\r\n    const [templateData, setTemplateData, { goForward, goBack, stepNum, history }] = useContext(TemplateContext)\r\n    const [selectedId, setSelectedId] = useState<string | null>(null);\r\n    const [isOpenColorPicker, setIsOpenColorPicker] = useState<boolean>(false)\r\n    const [isEditTextBox, setIsEditTextBox] = useState(false)\r\n    const [isOpenSaveTemplateModal, setIsOpenSaveTemplateModal] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setIsOpenColorPicker(false)\r\n        setIsEditTextBox(false)\r\n    }, [selectedId])\r\n\r\n    const unSelectAll = () => {\r\n        setIsOpenColorPicker(false)\r\n        setIsEditTextBox(false)\r\n        setSelectedId(null)\r\n    }\r\n\r\n    const handleEscape = (e) => {\r\n        if (e.key === \"Escape\") {\r\n            unSelectAll()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"keydown\", handleEscape, false);\r\n        WebFont.load({\r\n            google: {\r\n                families: ['Comfortaa', 'Josefin Sans', 'Euphoria Script', 'Oswald', 'Alfa Slab One', 'Bangers', 'Caveat', 'DM Sans', 'East Sea Dokdo', 'Homemade Apple', 'Kristi', 'Lobster Two', 'Maven Pro', 'Monoton', 'Montserrat', 'Playfair Display', 'Press Start 2P', 'Raleway', 'Roboto Slab', 'Shadows Into Light', 'Swanky and Moo Moo']\r\n            }\r\n        });\r\n\r\n        return () => {\r\n            document.removeEventListener(\"keydown\", handleEscape, false);\r\n        };\r\n    }, []);\r\n\r\n    const onUndo = () => {\r\n        !!setSelectedId && unSelectAll();\r\n        if (stepNum > 0) {\r\n            if (variationIndex > 0 && (history[stepNum].variations.length > history[stepNum - 1].variations.length)) {\r\n                setVariationIndex(variationIndex - 1)\r\n            }\r\n            goBack();\r\n        }\r\n    };\r\n    const onRedo = () => {\r\n        !!setSelectedId && unSelectAll();\r\n        if (stepNum > 0) {\r\n            if (variationIndex > 0 && (history[stepNum].variations.length > history[stepNum + 1].variations.length)) {\r\n                setVariationIndex(variationIndex - 1)\r\n            }\r\n        }\r\n        stepNum < (history.length - 1) && goForward();\r\n    };\r\n\r\n    const handleSaveVariation = (variationData: any) => {\r\n        setTemplateData(prev => {\r\n            prev.variations[variationIndex].name = variationData.name\r\n            prev.variations[variationIndex].face = variationData.face\r\n        })\r\n        setShowSaveVariationModal(false)\r\n    }\r\n\r\n    const handleAddVariation = () => {\r\n        if (templateData.variations.length < 3) {\r\n            setTemplateData(prev => {\r\n                prev.variations.push(templateData.variations[variationIndex])\r\n            })\r\n            setVariationIndex(prev => (prev + 1))\r\n        } else {\r\n            swal(\"Cannot create more than 3 variations!\")\r\n        }\r\n    }\r\n\r\n    const handleDeleteVariation = () => {\r\n        const variationsLength = templateData.variations.length\r\n        swal({\r\n            title: \"Are you sure?\",\r\n            text: \"Do you want to delete this variation?\",\r\n            icon: \"warning\",\r\n            buttons: [\"Cancel\", \"Confirm\"],\r\n            dangerMode: true,\r\n        }).then((willDelete) => {\r\n            if (willDelete) {\r\n                if (variationsLength > 1) {\r\n                    setTemplateData(prev => {\r\n                        prev.variations.splice(variationIndex, 1)\r\n                        if (variationIndex === (variationsLength - 1)) setVariationIndex(variationIndex - 1)\r\n                    })\r\n                } else {\r\n                    setTemplateData(INITIAL_STATE)\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    const handleEditSelectedItem = () => {\r\n        if (selectedId.split(\"_\")[0] === \"textBoxes\") {\r\n            setIsEditTextBox(true)\r\n            return\r\n        }\r\n        setIsOpenColorPicker(true)\r\n    }\r\n\r\n    const handleDeleteSelectedItem = () => {\r\n        setTemplateData(prev => {\r\n            prev.variations[variationIndex].elements = prev.variations[variationIndex].elements.filter(\r\n                item => item.id !== selectedId\r\n            )\r\n            unSelectAll()\r\n        })\r\n    }\r\n\r\n    const handleCloseEditTextModal = () => {\r\n        setIsEditTextBox(false)\r\n    }\r\n\r\n    const openSaveTemplateModal = () => {\r\n        setIsOpenSaveTemplateModal(true)\r\n    }\r\n\r\n    const handleSaveTemplate = (tagsList: string[], selectedCategory: string) => {\r\n        console.log({ tagsList, selectedCategory })\r\n        // TODO - handle crud into db here\r\n        addNewTemplate({ ...templateData, tagsList })\r\n        setIsOpenSaveTemplateModal(false)\r\n    }\r\n\r\n    return (\r\n        <div className=\"min-w-max bg-gray300 h-screen\">\r\n            <div className=\"h-20 mb-5 flex flex-wrap justify-evenly content-center bg-gray900\">\r\n                <NavLink\r\n                    to={ROUTE_NAMES.select_palette}\r\n                    className=\"text-white font-semibold py-2 px-4 border border-white-500 rounded\" >Select Palette</NavLink>\r\n                <p className=\"text-xl text-white\">Tempalte Design</p>\r\n                <button\r\n                    onClick={openSaveTemplateModal}\r\n                    className=\"text-white font-semibold py-2 px-4 border border-white-500 rounded\" >Save Template</button>\r\n            </div>\r\n\r\n            {showSaveVariationModal && (\r\n                <SaveVariation\r\n                    templateData={templateData}\r\n                    handleSaveVariation={handleSaveVariation}\r\n                />\r\n            )}\r\n\r\n            {isOpenSaveTemplateModal && (\r\n                <SaveTemplate\r\n                    templateData={templateData}\r\n                    handleSaveTemplate={handleSaveTemplate}\r\n                />\r\n            )}\r\n\r\n            <div className=\"grid grid-cols-3 gap-4\">\r\n\r\n                {/* first col */}\r\n                <SideBar variationIndex={variationIndex} setTemplateData={setTemplateData} />\r\n\r\n                {/* Center column */}\r\n                <div>\r\n                    <TopToolBar\r\n                        onUndo={onUndo}\r\n                        onRedo={onRedo}\r\n                        setTemplateData={setTemplateData}\r\n                        variationIndex={variationIndex}\r\n                        selectedId={selectedId}\r\n                    />\r\n                    <div className=\"flex justify-center mt-5\">\r\n                        <MainStage\r\n                            templateData={templateData}\r\n                            setTemplateData={setTemplateData}\r\n                            variationIndex={variationIndex}\r\n                            selectedId={selectedId}\r\n                            setSelectedId={setSelectedId}\r\n                            unSelectAll={unSelectAll}\r\n                            handleEditSelectedItem={handleEditSelectedItem}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"flex justify-center mt-5\">\r\n                        <SelectVariation\r\n                            variations={templateData.variations}\r\n                            variationIndex={variationIndex}\r\n                            setVariationIndex={setVariationIndex}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"flex justify-center\">\r\n                        <button\r\n                            className=\"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\"\r\n                            onClick={() => setShowSaveVariationModal(true)}\r\n                        >Save Variation</button>\r\n                        <button\r\n                            className=\"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\"\r\n                            onClick={handleAddVariation}\r\n                        >Add New Variation</button>\r\n                        <button\r\n                            className=\"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\"\r\n                            onClick={handleDeleteVariation}\r\n                        >Delete variation</button>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* third col */}\r\n                <div className={selectedId ? \"\" : \"hidden\"}>\r\n                    <EditingTools\r\n                        selectedId={selectedId}\r\n                        unSelectAll={unSelectAll}\r\n                        isOpenColorPicker={isOpenColorPicker}\r\n                        isEditTextBox={isEditTextBox}\r\n                        templateData={templateData}\r\n                        setTemplateData={setTemplateData}\r\n                        variationIndex={variationIndex}\r\n                        handleEditSelectedItem={handleEditSelectedItem}\r\n                        handleDeleteSelectedItem={handleDeleteSelectedItem}\r\n                        handleCloseEditTextModal={handleCloseEditTextModal}\r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        </div >\r\n    );\r\n};\r\nexport default DesignTool\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBA;AACA;AAAA;;;;A","sourceRoot":""}