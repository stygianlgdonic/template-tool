{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///./src/utils/defaults.ts","webpack:///external \"react-konva\"","webpack:///external \"sweetalert\"","webpack:///external \"react-router-dom\"","webpack:///./src/routes/route_names.tsx","webpack:///external \"react-error-boundary\"","webpack:///external \"use-image\"","webpack:///external \"react-color\"","webpack:///./src/contexts/TemplateContext.tsx","webpack:///./src/services/templateService.ts","webpack:///./src/hooks/useCategoryList.ts","webpack:///external \"react-query\"","webpack:///external \"express\"","webpack:///./src/utils/titleCase.ts","webpack:///./src/services/categoryService.ts","webpack:///external \"@shrugsy/use-immer-state\"","webpack:///external \"use-file-upload\"","webpack:///external \"react-dom/server\"","webpack:///./node_modules/css-loader/dist/runtime/cssWithMappingToString.js","webpack:///./node_modules/css-loader/dist/runtime/api.js","webpack:///./src/assets/svgs/plus.svg","webpack:///./src/assets/svgs/chevron-down.svg","webpack:///external \"webfontloader\"","webpack:///./src/index.ts","webpack:///./node_modules/tailwindcss/tailwind.css","webpack:///./src/NoSSR.tsx","webpack:///./src/App.tsx","webpack:///./src/server.tsx","webpack:///./src/components/tailwindComponents/SelectVariation.tsx","webpack:///./src/components/tailwindComponents/SaveVariation.tsx","webpack:///./src/components/tailwindComponents/CustomTextField.tsx","webpack:///./src/components/tailwindComponents/LoadingButton.tsx","webpack:///./src/utils/useSvg.tsx","webpack:///./src/components/tailwindComponents/CustomSelect.tsx","webpack:///./src/hooks/useComponentVisible.tsx","webpack:///./src/components/tailwindComponents/SaveTemplate.tsx","webpack:///./src/utils/svg.ts","webpack:///./src/components/DesignTool/SideBar/index.tsx","webpack:///./src/components/DesignTool/TopToolBar/index.tsx","webpack:///./src/components/DesignTool/Rectangle.tsx","webpack:///./src/components/DesignTool/UCircle.tsx","webpack:///./src/components/DesignTool/UPolygon.tsx","webpack:///./src/components/DesignTool/ULine.tsx","webpack:///./src/components/DesignTool/USvg.tsx","webpack:///./src/components/DesignTool/UText.tsx","webpack:///./src/components/DesignTool/UTransformer.tsx","webpack:///./src/components/DesignTool/UImage.tsx","webpack:///./src/components/DesignTool/MainStage/index.tsx","webpack:///./src/components/tailwindComponents/EditTextBox.tsx","webpack:///./src/components/tailwindComponents/ShapeColorSelector.tsx","webpack:///./src/components/tailwindComponents/SvgColorSelector.tsx","webpack:///./src/components/DesignTool/EditingTools/index.tsx","webpack:///./src/ErrorFallacks/MainStageFallBack.tsx","webpack:///./src/ErrorFallacks/TopToolBarFallback.tsx","webpack:///./src/ErrorFallacks/SideBarFallback.tsx","webpack:///./src/ErrorFallacks/SaveVariationFallback.tsx","webpack:///./src/ErrorFallacks/SaveTemplateFallback.tsx","webpack:///./src/ErrorFallacks/SelectVariationFallback.tsx","webpack:///./src/ErrorFallacks/EditingToolsFallback.tsx","webpack:///./src/components/DesignTool/index.tsx","webpack:///./src/ErrorFallacks/CategoryListFallback.tsx","webpack:///./src/ErrorFallacks/TemplateListFallback.tsx","webpack:///./src/components/Home/components/CategoryList/index.tsx","webpack:///./src/components/Home/components/TemplateList/SearchBar/index.tsx","webpack:///./src/components/Home/components/TemplateList/Elements/index.tsx","webpack:///./src/components/Home/components/TemplateList/TemplatePreview/index.tsx","webpack:///./src/ErrorFallacks/SearchBarFallback.tsx","webpack:///./src/ErrorFallacks/TemplatePreviewFallback.tsx","webpack:///./src/hooks/useTemplateList.ts","webpack:///./src/components/Home/components/TemplateList/index.tsx","webpack:///./src/components/Home/index.tsx","webpack:///./src/components/tailwindComponents/PaletteColorSelect.tsx","webpack:///./src/components/SelectPalette/index.tsx"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","e","Promise","resolve","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","oe","err","process","nextTick","s","require","stageDimensions","width","height","defaultImage","x","y","draggable","type","defaultSvg","colorMap","defaultRect","stroke","strokeWidth","fill","defaultRoundedRect","cornerRadius","defaultCircle","radius","defaultPolygon","sides","defaultTriangle","points","tension","closed","defaultTextBox","text","fontSize","googleFontsList","ROUTE_NAMES","home","select_palette","design_tool","design_tool_noID","INITIAL_STATE","dimensions","tags","palette","color","variations","face","elements","id","fillLinearGradientStartPoint","fillLinearGradientEndPoint","fillLinearGradientColorStops","TemplateContext","createContext","displayName","TemplateProvider","children","templateData","setTemplateData","goForward","goBack","stepNum","history","useImmerState","Provider","URL_ENDPOINTS","template_service","getAllTemplates","async","response","fetch","ok","Error","json","addNewTemplate","method","headers","body","JSON","stringify","getTemplateByID","templateID","updateTemplateByID","console","log","deleteTemplateByID","useCategoryList","data","categoriesList","error","isLoading","useQuery","category_service","getAllCategories","titleCase","uservalue","toLowerCase","split","length","toUpperCase","slice","join","addNewCategory","categoryData","getCategoryByID","categoryID","updateCategoryByID","deleteCategoryByID","_slicedToArray","arr","Array","isArray","_arrayWithHoles","_i","iterator","_s","_e","_arr","_n","_d","next","done","push","_iterableToArrayLimit","minLen","_arrayLikeToArray","toString","constructor","from","test","_unsupportedIterableToArray","TypeError","_nonIterableRest","len","arr2","item","_item","content","cssMapping","btoa","base64","unescape","encodeURIComponent","concat","sourceMapping","sourceURLs","sources","map","source","sourceRoot","cssWithMappingToString","list","this","mediaQuery","dedupe","alreadyImportedModules","app","default","port","parseInt","express","use","req","res","handle","listen","___CSS_LOADER_EXPORT___","NoSSR","isClient","setIsClient","useState","useEffect","DesignTool","React","lazy","SelectPalette","Home","App","exact","path","render","Suspense","fallback","assets","renderApp","context","markup","renderToString","location","url","redirect","html","entrypoint","css","asset","cssLinksFromAssets","extra","js","jsScriptTagsFromAssets","server","disable","static","send","SelectVariation","variationIndex","setVariationIndex","className","index","onClick","role","tabIndex","SaveVariation","handleSaveVariation","variationData","setVariationData","aria-labelledby","aria-modal","aria-hidden","placeholder","onChange","prev","target","style","backgroundColor","CustomTextField","startIcon","endIcon","helperText","label","rest","textIndent","src","alt","memo","LoadingButton","loadingProps","paddingLeft","xmlns","viewBox","stroke-linecap","stroke-linejoin","stroke-width","useSvg","blob","Blob","URL","createObjectURL","CustomSelect","dataArray","ref","isComponentVisible","setIsComponentVisible","initialIsVisible","useRef","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","useComponentVisible","dropdownIcon","val","ind","SaveTemplate","handleSaveTemplate","tagsList","setTagsList","isFirstTag","setIsFirstTag","tag","setTag","selectedCategory","setSelectedCategory","closeIcon","pushTagToTagsList","tagName","filter","currentTag","swal","title","icon","onSubmit","onKeyDown","plus","newTagsList","splice","removeFromTagsList","size","disableElevation","fullWidth","variant","parseSVG","svgString","DOMParser","parseFromString","getElementColor","el","getAttribute","SideBar","file","selectFile","useFileUpload","shapeID","Date","getTime","textID","accept","files","reject","reader","FileReader","onload","svgData","result","doc","documentElement","outerHTML","readAsText","then","SVG_STRING","svgId","multiple","readAsDataURL","imageID","TopToolBar","onUndo","onRedo","selectedId","setSelectedId","shapeIndex","findIndex","temp","Rectangle","shapeProps","onSelect","onEditClick","shapeRef","patternImageUrl","restProps","image","useImage","rectWidth","rectHeight","imageWidth","imageHeight","patternScale","Math","max","Fragment","onTap","onDblClick","onDblTap","strokeScaleEnabled","onTransformEnd","node","scaleX","scaleY","onDragEnd","fillPatternImage","fillPatternOffsetX","fillPatternOffsetY","fillPatternScaleX","fillPatternScaleY","fillPatternRepeat","UCircle","attrs","UPolygon","ULine","USvg","svgProps","getElementsByTagName","element","setAttribute","XMLSerializer","serializeToString","svg","window","UText","textProps","textNode","onTransform","SX","W","setAttrs","TransformerComponent","selectedShapeName","$tr","checkNode","selectedNode","getStage","findOne","nodes","detach","getLayer","batchDraw","ignoreStroke","boundBoxFunc","oldBox","newBox","UImage","imageProps","MainStage","unSelectAll","handleEditSelectedItem","$stage","$layer","selectionRectRef","selection","visible","x1","y1","x2","y2","nodesArray","setNodes","Konva","updateSelectionRect","min","abs","oldPos","onMouseDown","isElement","findAncestor","isTransformer","pos","getPointerPosition","onMouseUp","selBox","getClientRect","find","forEach","elementNode","elBox","Util","haveIntersection","listenClickTap","onMouseMove","onTouchStart","stage","layer","tr","draw","hasName","metaPressed","evt","shiftKey","ctrlKey","metaKey","isSelected","indexOf","onDragMove","linesArray","destroy","guides","lineGuideStops","itemBounds","resultV","resultH","vertical","lineGuide","itemBound","diff","guide","snap","offset","horizontal","minV","sort","a","b","minH","orientation","getGuides","skipShape","guideItem","box","flat","getLineGuideStops","round","getObjectSnappingEdges","lg","lines","Line","dash","add","drawGuides","elem","undefined","includes","newAttrs","svgIndex","svgItem","parse","imageIndex","img","txtIndex","txt","EditTextBox","handleCloseEditTextModal","inputValue","setInputValue","setFontSize","fontStyle","setFontStyle","fontFamily","setFontFamily","textAlign","setTextAlign","fontColor","setFontColor","align","selected","hex","ShapeColorSelector","currentPalette","handleShapeFill","selectedShape","handleGradientColor","color1","color2","handleFillPatternScaleX","parseFloat","handleFillPatternScaleY","handleFillPatternOffsetX","handleFillPatternOffsetY","selectedShapeData","opacity","step","SvgColorSelector","currentColor","setCurrentColor","colors","usedColors","handleSvgElementColorChange","oldColor","newColor","EditingTools","isOpenColorPicker","isEditTextBox","handleDeleteSelectedItem","MainStageFallback","resetErrorBoundary","message","TopToolBarFallback","SideBarFallback","SaveVariationFallback","SaveTemplateFallback","SelectVariationFallback","EditingToolsFallback","browserHistory","useHistory","useContext","justUpdated","setJustUpdated","useParams","showSaveVariationModal","setShowSaveVariationModal","setIsOpenColorPicker","setIsEditTextBox","isOpenSaveTemplateModal","setIsOpenSaveTemplateModal","handleEscape","WebFont","load","google","families","to","buttons","dangerMode","willDelete","FallbackComponent","onReset","categoryId","variationsLength","CategoryListFallback","TemplateListFallback","CategoryList","newCategoryName","setNewCategoryName","cat","handleDeleteCategory","preventDefault","templateList","SearchBar","fillRule","clipRule","Elements","konvaItem","TemplatePreview","templateObj","listening","SearchBarFallback","TemplatePreviewFallback","useTemplateList","TemplateList","templateError","templateLoading","categoryError","categoryLoading","categoryFilter","setCategoryFilter","navLinksList","selectedNavLink","setSelectedNavLink","minHeight","Modal","currentSelectedColor","handleColorChange","handleCloseColorPicker","showColorPicker","setShowColorPicker","setCurrentSelectedColor","PaletteColorSelect","handleShowColorPicker","Color"],"mappings":"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","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded chunks\n \t// \"0\" means \"already loaded\"\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// The chunk loading function for additional chunks\n \t// Since all referenced chunks are already included\n \t// in this file, this function is empty here.\n \t__webpack_require__.e = function requireEnsure() {\n \t\treturn Promise.resolve();\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// uncaught error handler for webpack runtime\n \t__webpack_require__.oe = function(err) {\n \t\tprocess.nextTick(function() {\n \t\t\tthrow err; // catch this error by using import().catch()\n \t\t});\n \t};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 24);\n","module.exports = require(\"react\");","export const stageDimensions = { width: 500, height: 500 }\r\nexport const ORIGINAL_SVG = `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\"><g data-name=\"discount(Splash tag)\"><path fill=\"#db5669\" d=\"M45.93,26.39a3.2,3.2,0,0,0-.76,3.79,3.21,3.21,0,0,1-1.83,4.42,3.19,3.19,0,0,0-2.15,3c0,.06,0,.36,0,.39a3.21,3.21,0,0,1-3.4,3.2,3.19,3.19,0,0,0-3.21,2.14,3.2,3.2,0,0,1-4.42,1.83,3.2,3.2,0,0,0-3.79.76,3.2,3.2,0,0,1-4.78,0,3.2,3.2,0,0,0-3.79-.76,3.2,3.2,0,0,1-4.42-1.83,3.18,3.18,0,0,0-3.21-2.14A3.2,3.2,0,0,1,6.8,37.81,3.19,3.19,0,0,0,4.66,34.6a3.2,3.2,0,0,1-1.83-4.42,3.2,3.2,0,0,0-.76-3.79,3.2,3.2,0,0,1,0-4.78,3.2,3.2,0,0,0,.76-3.79A3.2,3.2,0,0,1,4.66,13.4,3.18,3.18,0,0,0,6.8,10.19,3.2,3.2,0,0,1,10.1,6.8h.29a3.19,3.19,0,0,0,3-2.15,3.21,3.21,0,0,1,4.42-1.83,3.2,3.2,0,0,0,3.79-.76,3.2,3.2,0,0,1,4.78,0,3.21,3.21,0,0,0,3.79.76A3.2,3.2,0,0,1,34.6,4.66a3.19,3.19,0,0,0,3,2.15l.39,0a3.21,3.21,0,0,1,3.2,3.4,3.19,3.19,0,0,0,2.14,3.21,3.19,3.19,0,0,1,2.15,3c0,1.29-.64,1.52-.64,2.79C44.85,21.68,47,21.53,47,24A3.19,3.19,0,0,1,45.93,26.39Z\"/><path fill=\"#f26674\" d=\"M45.93,26.39a3.2,3.2,0,0,0-.76,3.79,3.12,3.12,0,0,1,.18,2.3c0,.1-.76,1.28-.82,1.38a3.08,3.08,0,0,1-1.19.74,3.19,3.19,0,0,0-2.15,3s0,.14,0,.29C27.32,51.18,4,41.37,4,22A21.9,21.9,0,0,1,10.1,6.8a3.2,3.2,0,0,0,3.3-2.14c.38-1.13,1-1.39,2.11-2a2.89,2.89,0,0,1,.91-.14c1.29,0,1.52.64,2.79.64C21.68,3.15,21.53,1,24,1a3.19,3.19,0,0,1,2.39,1.07,3.21,3.21,0,0,0,3.79.76A3.2,3.2,0,0,1,34.6,4.66,3.18,3.18,0,0,0,37.81,6.8a3.2,3.2,0,0,1,3.39,3.39,3.19,3.19,0,0,0,2.14,3.21,3.2,3.2,0,0,1,1.83,4.42,3.2,3.2,0,0,0,.76,3.79A3.2,3.2,0,0,1,45.93,26.39Z\"/><path fill=\"#c4455e\" d=\"M41,24A17,17,0,0,1,24,41C8.17,41,1,21.21,13,11,23.87,1.82,41,9.36,41,24Z\"/><path fill=\"#db5669\" d=\"M41,24a16.91,16.91,0,0,1-4,11,16.91,16.91,0,0,1-11,4C11.38,39,3.81,21.88,13,11,23.87,1.82,41,9.36,41,24Z\"/><path fill=\"#ffde76\" d=\"M16 33a1 1 0 0 1-.71-1.71l16-16a1 1 0 0 1 1.42 1.42C15.31 34.1 16.59 33 16 33zM19 22a4 4 0 1 0-4-4A4 4 0 0 0 19 22zm0-6a2 2 0 1 1-2 2A2 2 0 0 1 19 16zM29 26a4 4 0 1 0 4 4A4 4 0 0 0 29 26zm0 6a2 2 0 1 1 2-2A2 2 0 0 1 29 32z\"/></g></svg>`;\r\nexport const defaultImage = { name: \"object\", x: 200, y: 250, width: 200, height: 200, draggable: true, type: \"image\" }\r\nexport const defaultSvg = { name: \"object\", colorMap: {}, type: \"svg\", x: 100, y: 200, width: 100, height: 100, draggable: true, }\r\nexport const defaultRect = { name: \"object\", x: 150, y: 150, width: 100, stroke: \"#000000\", strokeWidth: 4, height: 100, fill: '#FF0000', draggable: true, type: \"rectangle\" }\r\nexport const defaultRoundedRect = { name: \"object\", x: 150, y: 250, width: 100, stroke: \"#000000\", strokeWidth: 4, height: 100, cornerRadius: 10, fill: '#FF0000', draggable: true, type: \"rectangle\" }\r\nexport const defaultCircle = { name: \"object\", x: 200, y: 100, radius: 50, stroke: \"#000000\", strokeWidth: 4, fill: '#FF0000', draggable: true, type: \"circle\" }\r\nexport const defaultPolygon = { name: \"object\", x: 100, y: 150, sides: 6, stroke: \"#000000\", strokeWidth: 4, radius: 70, fill: '#FF0000', type: \"polygon\" }\r\nexport const defaultTriangle = { name: \"object\", x: 20, y: 200, stroke: \"#000000\", strokeWidth: 4, fill: \"#FF0000\", points: [0, 100, 50, 0, 100, 100], tension: 0, closed: true, type: \"line\", }\r\nexport const defaultTextBox = { name: \"object\", text: 'New text', x: 150, y: 200, fontSize: 20, draggable: true, width: 200, type: \"text\", fill: \"#000000\" }\r\nexport const googleFontsList = ['Montserrat', 'Comfortaa', 'Euphoria Script', 'Josefin Sans', 'Oswald', 'Alfa Slab One', 'Bangers', 'Caveat', 'DM Sans', 'East Sea Dokdo', 'Homemade Apple', 'Kristi', 'Lobster Two', 'Maven Pro', 'Monoton', 'Playfair Display', 'Raleway', 'Roboto Slab', 'Shadows Into Light', 'Swanky and Moo Moo']\r\nexport const fontSizeArray = [{ name: \"Header\", size: 40, }, { name: \"Sub header\", size: 25, }, { name: \"body text\", size: 15, }]\r\n\r\nexport const ORIGINAL_SVG_updownicon = `<svg width=\"8\" height=\"14\" viewBox=\"0 0 8 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M4 0C4.26522 5.96046e-08 4.51957 0.105357 4.70711 0.292893L7.70711 3.29289C8.09763 3.68342 8.09763 4.31658 7.70711 4.70711C7.31658 5.09763 6.68342 5.09763 6.29289 4.70711L4 2.41421L1.70711 4.70711C1.31658 5.09763 0.683417 5.09763 0.292893 4.70711C-0.0976311 4.31658 -0.097631 3.68342 0.292893 3.29289L3.29289 0.292893C3.48043 0.105357 3.73478 0 4 0ZM0.292893 9.29289C0.683417 8.90237 1.31658 8.90237 1.70711 9.29289L4 11.5858L6.29289 9.29289C6.68342 8.90237 7.31658 8.90237 7.70711 9.29289C8.09763 9.68342 8.09763 10.3166 7.70711 10.7071L4.70711 13.7071C4.31658 14.0976 3.68342 14.0976 3.29289 13.7071L0.292893 10.7071C-0.0976311 10.3166 -0.0976311 9.68342 0.292893 9.29289Z\" fill=\"#9CA3AF\"/>\r\n</svg>`;\r\n","module.exports = require(\"react-konva\");","module.exports = require(\"sweetalert\");","module.exports = require(\"react-router-dom\");","export const ROUTE_NAMES = {\r\n    home: \"/\",\r\n    select_palette: \"/selectPalette\",\r\n    design_tool: \"/tool/:templateID\",\r\n    design_tool_noID: \"/tool\",\r\n}","module.exports = require(\"react-error-boundary\");","module.exports = require(\"use-image\");","module.exports = require(\"react-color\");","import React, { createContext } from 'react'\r\nimport { useImmerState } from '@shrugsy/use-immer-state';\r\nimport { stageDimensions } from '../utils/defaults';\r\n\r\nexport const INITIAL_STATE = {\r\n    dimensions: { width: stageDimensions.width, height: stageDimensions.height },\r\n    tags: [],\r\n    palette: [\r\n        { name: \"primary\", color: \"#ff0000\" },\r\n        { name: \"secondary\", color: \"#00ff00\" },\r\n        { name: \"tertiary\", color: \"#0000ff\" }\r\n    ],\r\n    variations: [\r\n        {\r\n            name: \"untitled\",\r\n            face: \"\",\r\n            elements: [{\r\n                id: 'shapes_background',\r\n                type: \"rectangle\",\r\n                x: 0,\r\n                y: 0,\r\n                width: stageDimensions.width,\r\n                height: stageDimensions.height,\r\n                // fill: '#F0F0F0',\r\n                fillLinearGradientStartPoint: { x: 0, y: 0 },\r\n                fillLinearGradientEndPoint: { x: stageDimensions.width, y: stageDimensions.height },\r\n                fillLinearGradientColorStops: [0, '#FFFFFF', 1, '#FFFFFF'],\r\n                draggable: false,\r\n            }],\r\n        }\r\n    ],\r\n}\r\n\r\nconst TemplateContext = createContext(null)\r\nTemplateContext.displayName = 'TemplateContext';\r\n\r\nconst TemplateProvider = ({ children }) => {\r\n\r\n    const [templateData, setTemplateData, { goForward, goBack, stepNum, history }] = useImmerState(INITIAL_STATE)\r\n\r\n    return (\r\n        <TemplateContext.Provider\r\n            value={[templateData, setTemplateData, { goForward, goBack, stepNum, history }]}\r\n        >\r\n            {children}\r\n        </TemplateContext.Provider >\r\n    );\r\n\r\n}\r\n\r\nexport { TemplateContext, TemplateProvider }","const URL_ENDPOINTS = {\r\n    getAllTemplatesURL: \"https://polar-tor-04971.herokuapp.com/template\",\r\n    getTemplateByIdURL: \"https://polar-tor-04971.herokuapp.com/template\",\r\n    createTemplateURL: \"https://polar-tor-04971.herokuapp.com/template\",\r\n    updateTemplateByIdURL: \"https://polar-tor-04971.herokuapp.com/template\",\r\n    deleteTemplateByIdURL: \"https://polar-tor-04971.herokuapp.com/template\"\r\n}\r\n\r\nexport const template_service = {\r\n    getAllTemplates,\r\n    addNewTemplate,\r\n    getTemplateByID,\r\n    updateTemplateByID,\r\n    deleteTemplateByID\r\n}\r\n\r\nasync function getAllTemplates() {\r\n    const response = await fetch(URL_ENDPOINTS.getAllTemplatesURL)\r\n    if (!response.ok) {\r\n        throw new Error(\"Error while fetching Templates\")\r\n    }\r\n    return response.json()\r\n}\r\n\r\nasync function addNewTemplate(templateData: any) {\r\n    const response = await fetch(URL_ENDPOINTS.createTemplateURL, {\r\n        method: \"POST\",\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(templateData)\r\n    })\r\n    if (!response.ok) {\r\n        throw new Error(\"Error while adding new template\")\r\n    }\r\n    return response.json()\r\n}\r\n\r\nasync function getTemplateByID(templateID: string | undefined) {\r\n    if (!templateID) return\r\n\r\n    const response = await fetch(`${URL_ENDPOINTS.getAllTemplatesURL}/${templateID}`)\r\n    if (!response.ok) {\r\n        throw new Error(\"Error while fetching Template\")\r\n    }\r\n    return response.json()\r\n}\r\n\r\nasync function updateTemplateByID(templateID: string, templateData: any) {\r\n\r\n    console.log({ JSON: JSON.stringify(templateData), templateData })\r\n\r\n    const response = await fetch(`${URL_ENDPOINTS.updateTemplateByIdURL}/${templateID}`, {\r\n        method: \"PATCH\",\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(templateData)\r\n    })\r\n    console.log({ response })\r\n    if (!response.ok) {\r\n        throw new Error(\"Error while updating template\")\r\n    }\r\n    return response.json()\r\n}\r\n\r\nasync function deleteTemplateByID(templateID: string) {\r\n    const response = await fetch(`${URL_ENDPOINTS.deleteTemplateByIdURL}/${templateID}`, {\r\n        method: \"DELETE\",\r\n    })\r\n    console.log({ response })\r\n    if (!response.ok) {\r\n        throw new Error(\"Error while delete template\")\r\n    }\r\n    return response.json()\r\n}\r\n\r\n","import { useQuery } from 'react-query'\r\nimport { category_service } from '../services/categoryService'\r\n\r\nconst useCategoryList = () => {\r\n    const { data: categoriesList, error, isLoading } = useQuery<any, Error>(\"categories\", category_service.getAllCategories)\r\n\r\n    return { categoriesList, error, isLoading }\r\n\r\n}\r\n\r\nexport default useCategoryList\r\n","module.exports = require(\"react-query\");","module.exports = require(\"express\");","export const titleCase = (uservalue) => {\r\n    if (uservalue) {\r\n\r\n        let value = uservalue?.toLowerCase().split(\"_\")\r\n        for (let i = 0; i < value?.length; i++) {\r\n            value[i] = value[i][0].toUpperCase() + value[i].slice(1)\r\n        }\r\n        return value?.join(\" \")\r\n\r\n    }\r\n    console.log(\"no value to convert to titleCase\")\r\n    return uservalue || \"\"\r\n}","const URL_ENDPOINTS = {\r\n    getAllCategoriesURL: \"https://polar-tor-04971.herokuapp.com/templatecategory\",\r\n    getCategoryByIdURL: \"https://polar-tor-04971.herokuapp.com/templatecategory\",\r\n    createCategoryURL: \"https://polar-tor-04971.herokuapp.com/templatecategory\",\r\n    updateCategoryByIdURL: \"https://polar-tor-04971.herokuapp.com/templatecategory\",\r\n    deleteCategoryByIdURL: \"https://polar-tor-04971.herokuapp.com/templatecategory\"\r\n}\r\n\r\nexport const category_service = {\r\n    getAllCategories,\r\n    addNewCategory,\r\n    getCategoryByID,\r\n    updateCategoryByID,\r\n    deleteCategoryByID\r\n}\r\n\r\nasync function getAllCategories() {\r\n    const response = await fetch(URL_ENDPOINTS.getAllCategoriesURL)\r\n    if (!response.ok) {\r\n        throw new Error(\"Error while fetching Categories\")\r\n    }\r\n    return response.json()\r\n}\r\n\r\nasync function addNewCategory(categoryData: any) {\r\n    const response = await fetch(URL_ENDPOINTS.createCategoryURL, {\r\n        method: \"POST\",\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(categoryData)\r\n    })\r\n    if (!response.ok) {\r\n        throw new Error(\"Error while adding new category\")\r\n    }\r\n    return response.json()\r\n}\r\n\r\nasync function getCategoryByID(categoryID: string | undefined) {\r\n    if (!categoryID) return\r\n\r\n    const response = await fetch(`${URL_ENDPOINTS.getAllCategoriesURL}/${categoryID}`)\r\n    if (!response.ok) {\r\n        throw new Error(\"Error while fetching Category\")\r\n    }\r\n    return response.json()\r\n}\r\n\r\nasync function updateCategoryByID(categoryID: string, categoryData: any) {\r\n\r\n    console.log({ JSON: JSON.stringify(categoryData), categoryData })\r\n\r\n    const response = await fetch(`${URL_ENDPOINTS.updateCategoryByIdURL}/${categoryID}`, {\r\n        method: \"PATCH\",\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(categoryData)\r\n    })\r\n    console.log({ response })\r\n    if (!response.ok) {\r\n        throw new Error(\"Error while updating category\")\r\n    }\r\n    return response.json()\r\n}\r\n\r\nasync function deleteCategoryByID(categoryID: string) {\r\n    const response = await fetch(`${URL_ENDPOINTS.deleteCategoryByIdURL}/${categoryID}`, {\r\n        method: \"DELETE\",\r\n    })\r\n    console.log({ response })\r\n    if (!response.ok) {\r\n        throw new Error(\"Error while delete category\")\r\n    }\r\n    return response.json()\r\n}\r\n\r\n","module.exports = require(\"@shrugsy/use-immer-state\");","module.exports = require(\"use-file-upload\");","module.exports = require(\"react-dom/server\");","\"use strict\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nmodule.exports = function cssWithMappingToString(item) {\n  var _item = _slicedToArray(item, 4),\n      content = _item[1],\n      cssMapping = _item[3];\n\n  if (typeof btoa === \"function\") {\n    // eslint-disable-next-line no-undef\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join(\"\\n\");\n  }\n\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === \"string\") {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, \"\"]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};","module.exports = __webpack_public_path__ + \"static/media/plus.cc6d96c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/chevron-down.c16040f3.svg\";","module.exports = require(\"webfontloader\");","import express from 'express';\r\n\r\nlet app = require('./server').default;\r\n\r\nif (module.hot) {\r\n    module.hot.accept('./server', () => {\r\n        console.log('🔁  HMR Reloading `./server`...');\r\n        try {\r\n            app = require('./server').default;\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    });\r\n    console.info('✅  Server-side HMR Enabled!');\r\n}\r\n\r\nconst port = process.env.PORT ? parseInt(process.env.PORT) : 3000;\r\n\r\nexport default express()\r\n    .use((req, res) => app.handle(req, res))\r\n    .listen(port, () => {\r\n        console.log(`> App started http://localhost:${port}`)\r\n    });\r\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@tailwind base;\\n\\n@tailwind components;\\n\\n@tailwind utilities;\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/tailwindcss/tailwind.css\"],\"names\":[],\"mappings\":\"AAAA,cAAc;;AAEd,oBAAoB;;AAEpB,mBAAmB\",\"sourcesContent\":[\"@tailwind base;\\n\\n@tailwind components;\\n\\n@tailwind utilities;\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import { useEffect, useState } from \"react\";\r\n\r\nconst NoSSR = ({ children }) => {\r\n    const [isClient, setIsClient] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setIsClient(true)\r\n    }, [])\r\n\r\n    return isClient ? children : null;\r\n}\r\n\r\nexport default NoSSR\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport NoSSR from './NoSSR'\r\nimport { ROUTE_NAMES } from './routes/route_names';\r\nimport { TemplateProvider } from \"./contexts/TemplateContext\"\r\nconst DesignTool = React.lazy(() => import('./components/DesignTool/index'));\r\nconst SelectPalette = React.lazy(() => import('./components/SelectPalette/index'));\r\nconst Home = React.lazy(() => import('./components/Home'));\r\nimport 'tailwindcss/tailwind.css';\r\n\r\nconst App = () => (\r\n    <Switch>\r\n        <NoSSR>\r\n            <TemplateProvider>\r\n                <Route\r\n                    exact={true}\r\n                    path={ROUTE_NAMES.home}\r\n                    render={() => (\r\n                        <React.Suspense fallback={<div>Loading ...</div>}>\r\n                            <Home />\r\n                        </React.Suspense>)\r\n                    }\r\n                />\r\n                <Route\r\n                    exact={true}\r\n                    path={ROUTE_NAMES.select_palette}\r\n                    render={() => (\r\n                        <React.Suspense fallback={<div>Loading ...</div>}>\r\n                            <SelectPalette />\r\n                        </React.Suspense>)\r\n                    }\r\n                />\r\n                <Route\r\n                    exact={true}\r\n                    path={ROUTE_NAMES.design_tool}\r\n                    render={() => (\r\n                        <React.Suspense fallback={<div>Loading ...</div>}>\r\n                            <DesignTool />\r\n                        </React.Suspense>)\r\n                    }\r\n                />\r\n                <Route\r\n                    exact={true}\r\n                    path={ROUTE_NAMES.design_tool_noID}\r\n                    render={() => (\r\n                        <React.Suspense fallback={<div>Loading ...</div>}>\r\n                            <DesignTool />\r\n                        </React.Suspense>)\r\n                    }\r\n                />\r\n            </TemplateProvider>\r\n        </NoSSR>\r\n    </Switch >\r\n);\r\n\r\nexport default App;\r\n","import express from 'express';\nimport React from 'react';\nimport { renderToString } from 'react-dom/server';\nimport { StaticRouter } from 'react-router-dom';\n\nimport App from './App';\n\nlet assets: any;\n\nconst syncLoadAssets = () => {\n  assets = require(process.env.RAZZLE_ASSETS_MANIFEST!);\n};\nsyncLoadAssets();\n\nconst cssLinksFromAssets = (assets, entrypoint) => {\n  return assets[entrypoint] ? assets[entrypoint].css ?\n  assets[entrypoint].css.map(asset=>\n    `<link rel=\"stylesheet\" href=\"${asset}\">`\n  ).join('') : '' : '';\n};\n\nconst jsScriptTagsFromAssets = (assets, entrypoint, extra = '') => {\n  return assets[entrypoint] ? assets[entrypoint].js ?\n  assets[entrypoint].js.map(asset=>\n    `<script src=\"${asset}\"${extra}></script>`\n  ).join('') : '' : '';\n};\n\nexport const renderApp = (req: express.Request, res: express.Response) => {\n  const context: any = {};\n\n  const markup = renderToString(\n    <StaticRouter context={context} location={req.url}>\n      <App />\n    </StaticRouter>\n  );\n\n  if (context.url) {\n    return { redirect: context.url };\n  } else {\n    const html =\n      // prettier-ignore\n      `<!doctype html>\n    <html lang=\"\">\n    <head>\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta charSet='utf-8' />\n        <title>Welcome to Razzle</title>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        ${cssLinksFromAssets(assets, 'client')}\n    </head>\n    <body>\n        <div id=\"root\">${markup}</div>\n        ${jsScriptTagsFromAssets(assets, 'client', ' defer crossorigin')}\n    </body>\n  </html>`;\n\n    return { html };\n  }\n};\n\nconst server = express()\n  .disable('x-powered-by')\n  .use(express.static(process.env.RAZZLE_PUBLIC_DIR!))\n  .get('/*', (req: express.Request, res: express.Response) => {\n    const { html = '', redirect = false } = renderApp(req, res);\n    if (redirect) {\n      res.redirect(redirect);\n    } else {\n      res.send(html);\n    }\n  });\n\nexport default server;\n","import React from 'react'\r\n\r\nconst SelectVariation = ({ variations, variationIndex, setVariationIndex }) => {\r\n\r\n    return (\r\n        <div className=\"flex\">\r\n            {variations.map((item, index) => (\r\n                <p\r\n                    key={index}\r\n                    className={`${variationIndex === index ? \"text-red-100\" : \"text-red-800\"} block px-4 py-2 mr-1 ml-1 text-sm cursor-pointer rounded border border-gray-900 ${variationIndex === index ? \"bg-red-700 hover:bg-red-800\" : \"\"}`}\r\n                    onClick={() => setVariationIndex(index)}\r\n                    role=\"menuitem\"\r\n                    tabIndex={-1}\r\n                >{item.name}</p>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectVariation\r\n","import { useImmerState } from '@shrugsy/use-immer-state'\r\nimport React from 'react'\r\n\r\ninterface Props {\r\n    handleSaveVariation: any\r\n    templateData: any\r\n}\r\n\r\nconst SaveVariation: React.FC<Props> = ({ handleSaveVariation, templateData }) => {\r\n\r\n    const [variationData, setVariationData] = useImmerState({ name: \"untitled\", face: \"#FF0000\" })\r\n\r\n    return (\r\n        <div className=\"fixed z-10 inset-0 overflow-y-auto\" aria-labelledby=\"modal-title\" role=\"dialog\" aria-modal=\"true\">\r\n            <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n                <div className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" aria-hidden=\"true\"></div>\r\n\r\n                <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\r\n\r\n                <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\r\n                    <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\r\n                        <div className=\"\">\r\n                            <label>Name: </label><input type=\"text\" placeholder=\"Variation name\" onChange={(e) => setVariationData(prev => { prev.name = e.target.value })} />\r\n                            <div>Current face: <div\r\n                                className=\"w-10 h-10 m-5 border border-black\"\r\n                                style={{ backgroundColor: variationData.face }}\r\n                            ></div></div>\r\n                            <p>Select face: </p>\r\n                            {templateData.palette.map((item, index) => (\r\n                                <div key={index} className=\"inline-block\" >\r\n                                    <div\r\n                                        className=\"w-10 h-10 m-5 border border-black\"\r\n                                        style={{ backgroundColor: item.color }}\r\n                                        onClick={() => setVariationData(prev => { prev.face = item.color })}\r\n                                    ></div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\r\n                        <button\r\n                            onClick={() => handleSaveVariation(variationData)}\r\n                            type=\"button\"\r\n                            className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\">\r\n                            Save\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SaveVariation\r\n","import React, { memo } from 'react'\r\nconst CustomTextField: React.FC<any> = ({\r\n    onClick,\r\n    startIcon,\r\n    endIcon,\r\n    error,\r\n    helperText,\r\n    className,\r\n    label,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"mb-4 relative  \">\r\n                <label className=\"text-jacksonsPurple\">{label}</label>\r\n                <br />\r\n\r\n                <input\r\n                    {...rest}\r\n                    className={className}\r\n                    style={{\r\n                        textIndent: startIcon ? '15px' : ''\r\n                    }}\r\n                />\r\n                {/* //? start icon */}\r\n                <img src={startIcon} alt=\"error\" width=\"18\" className={startIcon ? ' absolute left-0 top-0 mt-9 ml-2' : \"hidden\"} />\r\n\r\n                {/* //? end Icon */}\r\n                <img onClick={onClick} src={endIcon} alt=\"error\" width=\"18\" className={endIcon ? 'absolute right-0 top-0 mt-9 mr-4  cursor-pointer ' : \"hidden\"} />\r\n\r\n                {/* //? Helper Text */}\r\n                <p className={helperText ? 'text-red text-sm pl-2 transition duration-500' : 'hidden'}>{helperText}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(CustomTextField)\r\n","import React, { memo } from 'react';\r\nconst LoadingButton: React.FC<any> = ({\r\n    isLoading, loadingProps, startIcon, endIcon, className, style, children, ...rest\r\n}) => {\r\n    return (\r\n        <>\r\n            <button\r\n                className={className ? className : 'w-full  justify-center place-items-center flex focus:outline-none relative '}\r\n                style={{\r\n                    paddingLeft: startIcon ? '30px' : ''\r\n                }}\r\n                {...rest}>\r\n                {\r\n                    isLoading ?\r\n                        <svg className='animate-spin w-6 ' xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"white\" {...loadingProps} >\r\n                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 12h.01M12 12h.01M16 12h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                        </svg>\r\n                        :\r\n                        children\r\n                }\r\n            </button>\r\n\r\n            <img src={startIcon} alt=\"error\" width=\"20\" className={startIcon ? 'absolute    ml-2 ' : \"hidden\"} />\r\n\r\n            <img src={endIcon} alt=\"error\" width=\"20\" className={endIcon ? 'absolute right-0 top-0 mt-3.5 mr-4  cursor-pointer ' : \"hidden\"} />\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(LoadingButton)\r\n\r\n","const useSvg = (xmlns, viewBox, fill, stroke, path) => {\r\n\r\n    let svg = `<svg xmlns=\"${xmlns}\" fill=\"${fill}\" viewBox=\"${viewBox}\" stroke=\"${stroke}\">${path}</svg>`\r\n\r\n    let blob = new Blob([svg], { type: 'image/svg+xml' });\r\n    let url = URL.createObjectURL(blob);\r\n\r\n    return url\r\n}\r\n\r\nexport default useSvg\r\n\r\n","import React, { memo } from 'react'\r\nimport dropdownIcon from \"../../assets/svgs/chevron-down.svg\"\r\nimport useComponentVisible from '../../hooks/useComponentVisible';\r\nimport { titleCase } from '../../utils/titleCase';\r\n\r\nconst CustomSelect: React.FC<any> = ({ label, value, onChange, dataArray, width, ...res }) => {\r\n\r\n    const { ref, isComponentVisible, setIsComponentVisible } = useComponentVisible(false);\r\n\r\n    return (\r\n        <>\r\n            <div className={`flex flex-col bg-gray94  w-60 `}>\r\n                <label className='text-base text-left text-grey top-16  '>\r\n                    {label}\r\n                </label>\r\n                <div className=\" w-full relative\" ref={ref}>\r\n                    <button\r\n                        onClick={() => setIsComponentVisible(!isComponentVisible)}\r\n                        className=\"relative bg-white text-left pl-5 w-full border py-2 border-gray95 rounded-md shadow-sm cursor-pointer focus:outline-none text-jacksonsPurple focus:ring-1 focus:ring-radicalRed focus:border-radicalRed text-base\">\r\n                        <h2 className=\"truncate\">\r\n                            {titleCase(value)}\r\n                        </h2>\r\n                        <div className=\"absolute inset-y-0 right-0 pr-2 flex items-center  pointer-events-none\">\r\n                            <img src={dropdownIcon} className='w-4 ' />\r\n                        </div>\r\n                    </button>\r\n\r\n\r\n                    <ul className={isComponentVisible ? \"w-full absolute z-20 mt-1  bg-white shadow-lg  rounded-md py-1 text-base ring-1 ring-black ring-opacity-5  focus:outline-none sm:text-sm\" : \"hidden\"} >\r\n                        {dataArray?.length && dataArray.map((val, ind) => (\r\n                            <li\r\n                                key={ind}\r\n                                className=\"text-mineShaft select-none cursor-pointer relative py-2 pl-3 pr-9 hover:bg-gray94  \"\r\n                                value={val.name}\r\n                                onClick={() => {\r\n                                    onChange(val)\r\n                                    setIsComponentVisible(false)\r\n                                }}\r\n                            >\r\n                                <div className=\"flex items-center\">\r\n                                    <h2 className=\"text-jacksonsPurple font-normal ml-3 block truncate \">\r\n                                        {titleCase(val.name)}\r\n                                    </h2>\r\n                                </div>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(CustomSelect)\r\n","import { useState, useEffect, useRef } from 'react';\r\n\r\nexport default function useComponentVisible(initialIsVisible) {\r\n    const [isComponentVisible, setIsComponentVisible] = useState(initialIsVisible);\r\n    const ref = useRef(null);\r\n\r\n    const handleClickOutside = (event) => {\r\n        if (ref.current && !ref.current.contains(event.target)) {\r\n            setIsComponentVisible(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('click', handleClickOutside, true);\r\n        return () => {\r\n            document.removeEventListener('click', handleClickOutside, true);\r\n        };\r\n    });\r\n\r\n    return { ref, isComponentVisible, setIsComponentVisible };\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport swal from \"sweetalert\";\r\nimport plus from \"../../assets/svgs/plus.svg\";\r\nimport CustomTextField from \"./CustomTextField\";\r\nimport LoadingButton from \"./LoadingButton\";\r\nimport useSvg from \"../../utils/useSvg\";\r\nimport CustomSelect from \"./CustomSelect\";\r\nimport useCategoryList from \"../../hooks/useCategoryList\";\r\n\r\nconst svgPath = `  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />`;\r\n\r\ninterface Props {\r\n    templateData: any\r\n    handleSaveTemplate: (tags: string[], selectedCategory: string) => void\r\n}\r\n\r\nconst SaveTemplate: React.FC<Props> = ({ templateData, handleSaveTemplate }) => {\r\n    const [tagsList, setTagsList] = useState([]);\r\n    const [isFirstTag, setIsFirstTag] = useState(true);\r\n    const [tag, setTag] = useState(\"\");\r\n    const { categoriesList, error, isLoading } = useCategoryList()\r\n    const [selectedCategory, setSelectedCategory] = useState(!!categoriesList ? categoriesList[0] : null)\r\n\r\n    useEffect(() => {\r\n        if (!!templateData.tags?.length) {\r\n            setTagsList(templateData.tags)\r\n        }\r\n    }, [])\r\n\r\n    const closeIcon = useSvg(\r\n        \"http://www.w3.org/2000/svg\",\r\n        \"0 0 24 24\",\r\n        \"white\",\r\n        \"#FF3C69\",\r\n        svgPath\r\n    );\r\n\r\n    const pushTagToTagsList = (tagName) => {\r\n        if (!tagName) {\r\n            return;\r\n        }\r\n        let checkExisting = tagsList.filter((currentTag) => currentTag == tagName);\r\n        if (checkExisting.length && !isFirstTag) {\r\n            swal({\r\n                title: \"Tag already added\",\r\n                icon: \"error\",\r\n            });\r\n        } else {\r\n            setTagsList([...tagsList, tagName]);\r\n            setIsFirstTag(false);\r\n        }\r\n    };\r\n    const removeFromTagsList = (index) => {\r\n        let newTagsList = [...tagsList];\r\n        newTagsList.splice(index, 1);\r\n        setTagsList(newTagsList);\r\n    };\r\n\r\n    const handleChangeTag = (e) => {\r\n        setTag(e.target.value);\r\n    };\r\n\r\n    const handlePushTag = () => {\r\n        pushTagToTagsList(tag);\r\n        setTag(\"\");\r\n    };\r\n\r\n    const handleKeyDown = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            pushTagToTagsList(tag);\r\n            setTag(\"\");\r\n        }\r\n    };\r\n\r\n    const onCategoryChange = (val) => {\r\n        setSelectedCategory(val)\r\n    }\r\n\r\n    const onSubmit = () => {\r\n        handleSaveTemplate(tagsList, selectedCategory?.id)\r\n    }\r\n\r\n    return (\r\n        <div className=\"fixed z-10 inset-0 overflow-y-auto\" aria-labelledby=\"modal-title\" role=\"dialog\" aria-modal=\"true\">\r\n            <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n                <div className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" aria-hidden=\"true\"></div>\r\n\r\n                <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\r\n\r\n                <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\r\n                    <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\r\n                        <div className=\"h-96\">\r\n                            <div>\r\n                                <CustomTextField\r\n                                    label=\"Enter Tag\"\r\n                                    id=\"tagName\"\r\n                                    name=\"tagName\"\r\n                                    value={tag}\r\n                                    onChange={handleChangeTag}\r\n                                    placeholder=\"Enter tag\"\r\n                                    onKeyDown={handleKeyDown}\r\n                                    onClick={handlePushTag}\r\n                                    endIcon={plus}\r\n                                    className=\"relative  border border-grey appearance-none rounded w-full p-2 mt-0 focus:outline-none cursor-text\"\r\n                                />\r\n                                <div className=\"flex flex-grow flex-wrap flex-col\">\r\n                                    {tagsList.map((item, index) => (\r\n                                        <div key={index} className=\"flex justify-between rounded-3xl px-5 py-1 border-radicalRed border-2 mt-1 text-radicalRed \">\r\n                                            <p>{item}</p>\r\n                                            <img\r\n                                                onClick={() => removeFromTagsList(index)}\r\n                                                src={closeIcon}\r\n                                                alt=\"error\"\r\n                                                className=\"w-4  cursor-pointer \"\r\n                                            />\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n\r\n                                <div className=\"z-20\" >\r\n                                    <CustomSelect\r\n                                        label=\"Select Category\"\r\n                                        value={selectedCategory?.name || \"none\"}\r\n                                        onChange={onCategoryChange}\r\n                                        dataArray={categoriesList}\r\n                                    />\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"bg-gray-50 px-4 py-3 sm:px-6 flex justify-between\">\r\n                        <div className=\"mt-2\">\r\n                            <LoadingButton\r\n                                loadingProps={{\r\n                                    size: 24,\r\n                                    style: { color: \"white\" },\r\n                                }}\r\n                                disableElevation\r\n                                onClick={onSubmit}\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                className=\"red-button\"\r\n                            >\r\n                                Close\r\n                            </LoadingButton>\r\n                        </div>\r\n                        <div className=\"mt-2\">\r\n                            <LoadingButton\r\n                                loadingProps={{\r\n                                    size: 24,\r\n                                    style: { color: \"white\" },\r\n                                }}\r\n                                disableElevation\r\n                                onClick={onSubmit}\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                className=\"red-button\"\r\n                            >\r\n                                Save Template\r\n                            </LoadingButton>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default SaveTemplate;\r\n","// parse svg string into DOM\r\nexport function parseSVG(svgString) {\r\n    const parser = new DOMParser();\r\n    const doc = parser.parseFromString(svgString, \"image/svg+xml\");\r\n    return doc;\r\n}\r\n\r\n// get color of element\r\n// we can also check styles of element and other properties like \"stroke\"\r\nexport function getElementColor(el) {\r\n    return el.getAttribute(\"fill\");\r\n}\r\n\r\n// find all colors used in svg\r\nexport function getColors(svgString) {\r\n    const doc = parseSVG(svgString);\r\n    var elements = doc.getElementsByTagName(\"*\");\r\n    const usedColors = [];\r\n    for (const element of elements) {\r\n        const color = getElementColor(element);\r\n        // if color is defined and uniq we will add it\r\n        if (color && usedColors.indexOf(color) === -1) {\r\n            usedColors.push(color);\r\n        }\r\n    }\r\n    return usedColors;\r\n}\r\n\r\n// convert svg string into base64 data URL\r\nexport function svgToURL(s) {\r\n    const uri = window.btoa(unescape(encodeURIComponent(s)));\r\n    return \"data:image/svg+xml;base64,\" + uri;\r\n}\r\n\r\n// replace colors in svg string\r\nexport function replaceColors(svgString, map) {\r\n    // we can do some RegExp magic here\r\n    // but I will just manually check every element\r\n    const doc = parseSVG(svgString);\r\n    var elements = doc.getElementsByTagName(\"*\");\r\n\r\n    for (const element of elements) {\r\n        const color = getElementColor(element);\r\n        if (map[color]) {\r\n            element.setAttribute(\"fill\", map[color]);\r\n        }\r\n    }\r\n    var xmlSerializer = new XMLSerializer();\r\n    const str = xmlSerializer.serializeToString(doc);\r\n    return str;\r\n}\r\n\r\nexport function getSvgStringFromUpload(files) {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            var reader = new FileReader();\r\n            reader.onload = function (e) {\r\n                var svgData: any = e.target.result;\r\n                var parser = new DOMParser();\r\n                var doc = parser.parseFromString(svgData, \"image/svg+xml\");\r\n                resolve(doc.documentElement.outerHTML)\r\n            }\r\n            reader.readAsText(files[0]);\r\n        } catch (error) {\r\n            reject(error)\r\n        }\r\n    })\r\n}","import React from 'react'\r\nimport { defaultCircle, defaultImage, defaultPolygon, defaultRect, defaultRoundedRect, defaultSvg, defaultTextBox, defaultTriangle } from '../../../utils/defaults';\r\nimport * as svg from \"../../../utils/svg\"\r\nimport { useFileUpload } from 'use-file-upload'\r\n\r\nconst SideBar = ({ variationIndex, setTemplateData }) => {\r\n    const [file, selectFile] = useFileUpload()\r\n\r\n    const handleAddNewRect = () => {\r\n        setTemplateData((prev) => {\r\n            let shapeID = new Date().getTime();\r\n            prev.variations[variationIndex].elements.push({ ...defaultRect, id: `shapes_${shapeID.toString()}` })\r\n        })\r\n    }\r\n\r\n    const handleAddNewCircle = () => {\r\n        setTemplateData((prev) => {\r\n            let shapeID = new Date().getTime();\r\n            prev.variations[variationIndex].elements.push({ ...defaultCircle, id: `shapes_${shapeID.toString()}` })\r\n        })\r\n    }\r\n    const handleAddNewTrianlge = () => {\r\n        setTemplateData((prev) => {\r\n            let shapeID = new Date().getTime();\r\n            prev.variations[variationIndex].elements.push({ ...defaultTriangle, id: `shapes_${shapeID.toString()}` })\r\n        })\r\n    }\r\n    const handleAddNewPolygon = () => {\r\n        setTemplateData((prev) => {\r\n            let shapeID = new Date().getTime();\r\n            prev.variations[variationIndex].elements.push({ ...defaultPolygon, id: `shapes_${shapeID.toString()}` })\r\n        })\r\n    }\r\n    const handleAddNewRoundedRect = () => {\r\n        setTemplateData((prev) => {\r\n            let shapeID = new Date().getTime();\r\n            prev.variations[variationIndex].elements.push({ ...defaultRoundedRect, id: `shapes_${shapeID.toString()}` })\r\n        })\r\n    }\r\n\r\n    const handleSvgUpload = (e) => {\r\n        svg.getSvgStringFromUpload(e.target.files).then((SVG_STRING) => {\r\n\r\n            setTemplateData((prev) => {\r\n                let svgId = new Date().getTime()\r\n                prev.variations[variationIndex].elements.push({\r\n\r\n                    id: `svgs_${svgId.toString()}`,\r\n                    svgString: SVG_STRING,\r\n                    ...defaultSvg\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    const handleImageUpload = () => {\r\n        selectFile({ accept: \"image/png, image/jpg, image/jpeg\", multiple: false },\r\n            ({ file }: any) => {\r\n\r\n                const reader = new FileReader();\r\n                reader.readAsDataURL(file);\r\n\r\n                reader.onload = () => {\r\n                    //base64encoded string\r\n                    setTemplateData((prev) => {\r\n                        let imageID = new Date().getTime();\r\n                        prev.variations[variationIndex].elements.push({\r\n                            ...defaultImage,\r\n                            src: reader.result,\r\n                            id: `images_${imageID.toString()}`\r\n                        })\r\n                    })\r\n                };\r\n            })\r\n    }\r\n\r\n    const handleAddNewText = () => {\r\n        setTemplateData((prev) => {\r\n            let textID = new Date().getTime();\r\n            prev.variations[variationIndex].elements.push({ ...defaultTextBox, id: `textBoxes_${textID.toString()}` })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div className=\"flex justify-center\">\r\n                <button\r\n                    className=\"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\"\r\n                    onClick={handleAddNewRect}\r\n                >Add new Square</button>\r\n            </div>\r\n            <div className=\"flex justify-center\">\r\n                <button\r\n                    className=\"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\"\r\n                    onClick={handleAddNewCircle}\r\n                >Add new Circle</button>\r\n            </div>\r\n            <div className=\"flex justify-center\">\r\n                <button\r\n                    className=\"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\"\r\n                    onClick={handleAddNewTrianlge}\r\n                >Add new Triangle</button>\r\n            </div>\r\n            <div className=\"flex justify-center\">\r\n                <button\r\n                    className=\"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\"\r\n                    onClick={handleAddNewPolygon}\r\n                >Add new Pentagon</button>\r\n            </div>\r\n            <div className=\"flex justify-center\">\r\n                <button\r\n                    className=\"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\"\r\n                    onClick={handleAddNewRoundedRect}\r\n                >Add new Rounded Square</button>\r\n            </div>\r\n            <div className=\"flex justify-center\">\r\n                <button\r\n                    className=\"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\"\r\n                    onClick={handleAddNewText}\r\n                >Add new Text</button>\r\n            </div>\r\n            <div className=\"flex justify-center\">\r\n                <p>upload svg</p>\r\n                <input className=\"\" type=\"file\" accept=\".svg\" onChange={handleSvgUpload} />\r\n            </div>\r\n            <div className=\"flex justify-center\">\r\n                <button\r\n                    className=\"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\"\r\n                    onClick={handleImageUpload}\r\n                >Upload image</button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideBar\r\n","import React from 'react'\r\n\r\nconst TopToolBar = ({\r\n    onUndo,\r\n    onRedo,\r\n    setTemplateData,\r\n    variationIndex,\r\n    selectedId,\r\n    setSelectedId\r\n}) => {\r\n\r\n    const onBringtoFront = () => {\r\n        if (!selectedId || selectedId === \"shapes_background\") return\r\n        setTemplateData((prev) => {\r\n            const shapeIndex = prev.variations[variationIndex].elements.findIndex(\r\n                (item) => item.id === selectedId\r\n            );\r\n            if (shapeIndex < (prev.variations[variationIndex].elements.length - 1)) {\r\n\r\n                const temp = prev.variations[variationIndex].elements[shapeIndex + 1]\r\n\r\n                prev.variations[variationIndex].elements[shapeIndex + 1] = prev.variations[variationIndex].elements[shapeIndex]\r\n\r\n                prev.variations[variationIndex].elements[shapeIndex] = temp\r\n\r\n            }\r\n        });\r\n    };\r\n\r\n    const onBringtoBack = () => {\r\n        if (!selectedId || selectedId === \"shapes_background\") return\r\n        setTemplateData((prev) => {\r\n            const shapeIndex = prev.variations[variationIndex].elements.findIndex(\r\n                (item) => item.id === selectedId\r\n            );\r\n\r\n            // NOTE - shapeIndex > 1 because index 0 is for background\r\n            if (shapeIndex > 1) {\r\n\r\n                const temp = prev.variations[variationIndex].elements[shapeIndex - 1]\r\n\r\n                prev.variations[variationIndex].elements[shapeIndex - 1] = prev.variations[variationIndex].elements[shapeIndex]\r\n\r\n                prev.variations[variationIndex].elements[shapeIndex] = temp\r\n\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex justify-center\">\r\n            <div className=\"flex justify-center\">\r\n                <button\r\n                    onClick={() => setSelectedId(\"shapes_background\")}\r\n                    className=\"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\"\r\n                >Edit Background</button>\r\n            </div>\r\n            <div className=\"flex justify-center\">\r\n                <button\r\n                    onClick={onBringtoFront}\r\n                    className=\"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\"\r\n                >Bring to front</button>\r\n            </div>\r\n            <div className=\"flex justify-center\">\r\n                <button\r\n                    onClick={onBringtoBack}\r\n                    className=\"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\"\r\n                >Bring to Back</button>\r\n            </div>\r\n            <div className=\"flex justify-center\">\r\n                <button\r\n                    onClick={onUndo}\r\n                    className=\"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\"\r\n                >Undo</button>\r\n            </div>\r\n            <div className=\"flex justify-center\">\r\n                <button\r\n                    onClick={onRedo}\r\n                    className=\"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\"\r\n                >Redo</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopToolBar\r\n","import React, { useRef } from 'react';\r\nimport { Rect } from 'react-konva';\r\nimport useImage from \"use-image\"\r\n\r\ninterface Props {\r\n    shapeProps: any\r\n    onSelect: any\r\n    onChange: any\r\n    onEditClick: any\r\n}\r\n\r\nconst Rectangle: React.FC<Props> = ({ shapeProps, onSelect, onChange, onEditClick }) => {\r\n\r\n    const shapeRef = useRef(null)\r\n\r\n    const { patternImageUrl, ...restProps } = shapeProps\r\n    const [image] = useImage(patternImageUrl || null)\r\n    const rectWidth = restProps.width;\r\n    const rectHeight = restProps.height;\r\n    const imageWidth = image ? image.width : 10;\r\n    const imageHeight = image ? image.height : 10;\r\n    const patternScale = restProps.patternScale || Math.max(\r\n        rectWidth / imageWidth,\r\n        rectHeight / imageHeight\r\n    );\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Rect\r\n                ref={shapeRef}\r\n                onClick={onSelect}\r\n                onTap={onSelect}\r\n                onDblClick={onEditClick}\r\n                onDblTap={onEditClick}\r\n                draggable\r\n                strokeScaleEnabled={false}\r\n                onTransformEnd={(e) => {\r\n                    // transformer is changing scale of the node\r\n                    // and NOT its width or height\r\n                    // but in the store we have only width and height\r\n                    // to match the data better we will reset scale on transform end\r\n                    const node = shapeRef.current;\r\n                    const scaleX = node.scaleX();\r\n                    const scaleY = node.scaleY();\r\n\r\n                    // we will reset it back\r\n                    node.scaleX(1);\r\n                    node.scaleY(1);\r\n                    onChange({\r\n                        ...shapeProps,\r\n                        x: node.x(),\r\n                        y: node.y(),\r\n                        width: Math.max(node.width() * scaleX),\r\n                        height: Math.max(node.height() * scaleY)\r\n                    });\r\n                }}\r\n                onDragEnd={(e) => {\r\n                    onChange({\r\n                        ...shapeProps,\r\n                        x: e.target.x(),\r\n                        y: e.target.y(),\r\n                    });\r\n                }}\r\n                fillPatternImage={image}\r\n                fillPatternOffsetX={0}\r\n                fillPatternOffsetY={0}\r\n                fillPatternScaleX={patternScale}\r\n                fillPatternScaleY={patternScale}\r\n                fillPatternRepeat=\"no-repeat\"\r\n                {...restProps}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n};\r\nexport default Rectangle\r\n","import React, { useRef } from 'react';\r\nimport { Circle } from 'react-konva';\r\nimport useImage from \"use-image\"\r\ninterface Props {\r\n    shapeProps: any\r\n    onSelect: any\r\n    onChange: any\r\n    onEditClick: any\r\n}\r\n\r\nconst UCircle: React.FC<Props> = ({ shapeProps, onSelect, onChange, onEditClick }) => {\r\n    const shapeRef = useRef(null)\r\n\r\n    const { patternImageUrl, ...restProps } = shapeProps\r\n    const [image] = useImage(patternImageUrl || null)\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Circle\r\n                ref={shapeRef}\r\n                onClick={onSelect}\r\n                onTap={onSelect}\r\n                onDblClick={onEditClick}\r\n                onDblTap={onEditClick}\r\n                draggable\r\n                strokeScaleEnabled={false}\r\n                onTransformEnd={(e) => {\r\n                    onChange({\r\n                        ...shapeProps,\r\n                        scaleX: e.target.attrs.scaleX,\r\n                        scaleY: e.target.attrs.scaleY,\r\n                    });\r\n                }}\r\n                onDragEnd={(e) => {\r\n                    onChange({\r\n                        ...shapeProps,\r\n                        x: e.target.x(),\r\n                        y: e.target.y(),\r\n                    });\r\n                }}\r\n                fillPatternImage={image}\r\n                fillPatternOffsetX={0}\r\n                fillPatternOffsetY={0}\r\n                fillPatternScaleX={0.1}\r\n                fillPatternScaleY={0.1}\r\n                fillPatternRepeat=\"no-repeat\"\r\n                {...restProps}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n};\r\nexport default UCircle\r\n","import React, { useRef } from 'react';\r\nimport { RegularPolygon } from 'react-konva';\r\nimport useImage from 'use-image';\r\n\r\ninterface Props {\r\n    shapeProps: any\r\n    onSelect: any\r\n    onChange: any\r\n    onEditClick: any\r\n}\r\n\r\nconst UPolygon: React.FC<Props> = ({ shapeProps, onSelect, onChange, onEditClick }) => {\r\n\r\n    const shapeRef = useRef(null)\r\n\r\n    const { patternImageUrl, ...restProps } = shapeProps\r\n    const [image] = useImage(patternImageUrl || null)\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <RegularPolygon\r\n                ref={shapeRef}\r\n                onClick={onSelect}\r\n                onTap={onSelect}\r\n                onDblClick={onEditClick}\r\n                onDblTap={onEditClick}\r\n                draggable\r\n                strokeScaleEnabled={false}\r\n                onDragEnd={(e) => {\r\n                    onChange({\r\n                        ...shapeProps,\r\n                        x: e.target.x(),\r\n                        y: e.target.y(),\r\n                    });\r\n                }}\r\n                onTransformEnd={(e) => {\r\n                    onChange({\r\n                        ...shapeProps,\r\n                        scaleX: e.target.attrs.scaleX,\r\n                        scaleY: e.target.attrs.scaleY,\r\n                    });\r\n                }}\r\n                fillPatternImage={image}\r\n                fillPatternOffsetX={0}\r\n                fillPatternOffsetY={0}\r\n                fillPatternScaleX={0.1}\r\n                fillPatternScaleY={0.1}\r\n                fillPatternRepeat=\"no-repeat\"\r\n                {...restProps}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n};\r\nexport default UPolygon\r\n","import React, { useRef } from 'react';\r\nimport { Line } from 'react-konva';\r\nimport useImage from 'use-image';\r\n\r\ninterface Props {\r\n    shapeProps: any\r\n    onSelect: any\r\n    onChange: any\r\n    onEditClick: any\r\n}\r\n\r\nconst ULine: React.FC<Props> = ({ shapeProps, onSelect, onChange, onEditClick }) => {\r\n\r\n    const shapeRef = useRef(null)\r\n\r\n    const { patternImageUrl, ...restProps } = shapeProps\r\n    const [image] = useImage(patternImageUrl || null)\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Line\r\n                ref={shapeRef}\r\n                onClick={onSelect}\r\n                onTap={onSelect}\r\n                onDblClick={onEditClick}\r\n                onDblTap={onEditClick}\r\n                draggable\r\n                strokeScaleEnabled={false}\r\n                onTransformEnd={(e) => {\r\n                    onChange({\r\n                        ...shapeProps,\r\n                        scaleX: e.target.attrs.scaleX,\r\n                        scaleY: e.target.attrs.scaleY,\r\n                    });\r\n                }}\r\n                onDragEnd={(e) => {\r\n                    onChange({\r\n                        ...shapeProps,\r\n                        x: e.target.x(),\r\n                        y: e.target.y(),\r\n                    });\r\n                }}\r\n                fillPatternImage={image}\r\n                fillPatternOffsetX={0}\r\n                fillPatternOffsetY={0}\r\n                fillPatternScaleX={0.1}\r\n                fillPatternScaleY={0.1}\r\n                fillPatternRepeat=\"no-repeat\"\r\n                {...restProps}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n};\r\nexport default ULine\r\n","import React from 'react';\r\nimport { Image } from 'react-konva';\r\nimport useImage from 'use-image';\r\nimport * as svg from \"../../utils/svg\"\r\n\r\ninterface Props {\r\n    svgProps: any\r\n    onChange: any\r\n    onSelect: any\r\n    onEditClick: any\r\n}\r\n\r\nconst USvg: React.FC<Props> = ({ svgProps, onChange, onSelect, onEditClick }) => {\r\n\r\n    const [image] = useImage(svg.svgToURL(svg.replaceColors(svgProps.svgString, svgProps.colorMap)));\r\n\r\n    return (\r\n        <>\r\n            <Image\r\n                {...svgProps}\r\n                image={image}\r\n                onClick={onSelect}\r\n                onTap={onSelect}\r\n                onDblClick={onEditClick}\r\n                onDblTap={onEditClick}\r\n                onDragEnd={onChange}\r\n                onTransformEnd={onChange}\r\n            />\r\n        </>\r\n    );\r\n\r\n}\r\nexport default USvg\r\n","import React, { useRef } from 'react'\r\nimport { Text } from 'react-konva'\r\n\r\nconst UText = ({ textProps, onChange, onSelect, onEditClick }) => {\r\n    const textNode = useRef(null)\r\n\r\n    return (\r\n        <Text\r\n            ref={textNode}\r\n            draggable\r\n            onClick={onSelect}\r\n            onTap={onSelect}\r\n            onDblClick={onEditClick}\r\n            onDblTap={onEditClick}\r\n            onTransform={(e) => {\r\n                let SX = textNode.current.scaleX();\r\n                let W = textNode.current.width();\r\n\r\n                textNode.current.setAttrs({\r\n                    // ...textNode.current.getAttrs(),\r\n                    // fontSize: isWordWrapping ? textNode.current.fontSize() : textNode.current.fontSize() * textNode.current.scaleX(),\r\n                    width: W * SX,\r\n                    scaleX: 1,\r\n                    scaleY: 1\r\n                });\r\n            }}\r\n            // onTransformEnd={onChange}\r\n            onDragEnd={onChange}\r\n            {...textProps}\r\n        />\r\n    )\r\n}\r\n\r\nexport default UText\r\n","import React, { useEffect } from 'react';\r\nimport { Transformer } from 'react-konva'\r\n\r\nexport const MIN_WIDTH = 50\r\nexport const MIN_HEIGHT = 30\r\n\r\ninterface Props {\r\n    id: any\r\n    selectedShapeName: any\r\n    templateData: any\r\n    $tr: any\r\n}\r\n\r\nconst TransformerComponent: React.FC<Props> = ({ id, selectedShapeName, templateData, $tr }) => {\r\n\r\n    useEffect(() => {\r\n        checkNode();\r\n    }, [selectedShapeName, templateData.variations])\r\n    const checkNode = () => {\r\n        const stage = $tr.current.getStage();\r\n        const selectedNode = stage.findOne(\"#\" + selectedShapeName);\r\n        if (selectedNode) {\r\n            $tr.current.nodes([selectedNode])\r\n        } else {\r\n            $tr.current.detach();\r\n        }\r\n        $tr.current.getLayer().batchDraw();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Transformer\r\n                id={id}\r\n                ref={$tr}\r\n                ignoreStroke={true}\r\n                boundBoxFunc={(oldBox, newBox) => {\r\n                    if (selectedShapeName === \"shapes_background\") return oldBox\r\n                    if (newBox.width < MIN_WIDTH) {\r\n                        return { ...oldBox, width: MIN_WIDTH };\r\n                    }\r\n                    return newBox;\r\n                }}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TransformerComponent","import React from 'react';\r\nimport { Image } from 'react-konva';\r\nimport useImage from 'use-image';\r\n\r\ninterface Props {\r\n    imageProps: any\r\n    onChange: any\r\n    onSelect: any\r\n}\r\n\r\nconst UImage: React.FC<Props> = ({ imageProps, onChange, onSelect }) => {\r\n\r\n    const [image] = useImage(imageProps.src)\r\n\r\n    const { src, ...rest } = imageProps\r\n    return (\r\n        <>\r\n            <Image\r\n                {...rest}\r\n                image={image}\r\n                onClick={() => onSelect(imageProps.id)}\r\n                onTap={() => onSelect(imageProps.id)}\r\n                onDragEnd={onChange}\r\n                onTransformEnd={onChange}\r\n            />\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default UImage","import React, { useRef, useState } from 'react'\r\nimport { Stage, Layer, Rect } from 'react-konva';\r\nimport Rectangle from \"../Rectangle\"\r\nimport UCircle from \"../UCircle\"\r\nimport UPolygon from \"../UPolygon\"\r\nimport ULine from \"../ULine\"\r\nimport USvg from \"../USvg\"\r\nimport UText from \"../UText\"\r\nimport TransformerComponent from \"../UTransformer\"\r\nimport { stageDimensions } from '../../../utils/defaults';\r\nimport UImage from '../UImage';\r\n\r\ndeclare const window: any\r\n\r\nconst MainStage = ({\r\n    templateData,\r\n    setTemplateData,\r\n    variationIndex,\r\n    selectedId,\r\n    setSelectedId,\r\n    unSelectAll,\r\n    handleEditSelectedItem,\r\n}) => {\r\n\r\n    const GUIDELINE_OFFSET = 5\r\n    const $stage = useRef(null)\r\n    const $layer = useRef(null)\r\n    const $tr = useRef(null)\r\n    const selectionRectRef = useRef(null);\r\n    const selection = useRef({\r\n        visible: false,\r\n        x1: 0,\r\n        y1: 0,\r\n        x2: 0,\r\n        y2: 0\r\n    });\r\n\r\n    const [nodesArray, setNodes] = useState([]);\r\n    const Konva = window.Konva;\r\n\r\n    const getLineGuideStops = skipShape => {\r\n        const vertical: any = [0, stageDimensions.width / 2, stageDimensions.width];\r\n        const horizontal: any = [0, stageDimensions.height / 2, stageDimensions.height];\r\n\r\n        // and we snap over edges and center of each object on the canvas\r\n        $stage.current.find(\".object\").forEach(guideItem => {\r\n            if (guideItem === skipShape) {\r\n                return;\r\n            }\r\n            const box = guideItem.getClientRect();\r\n            // and we can snap to all edges of shapes\r\n            vertical.push([box.x, box.x + box.width, box.x + box.width / 2]);\r\n            horizontal.push([box.y, box.y + box.height, box.y + box.height / 2]);\r\n        });\r\n        return {\r\n            vertical: vertical.flat(),\r\n            horizontal: horizontal.flat()\r\n        };\r\n    };\r\n\r\n    const getObjectSnappingEdges = node => {\r\n        const box = node.getClientRect();\r\n\r\n        return {\r\n            vertical: [\r\n                {\r\n                    guide: Math.round(box.x),\r\n                    offset: Math.round(node.x() - box.x),\r\n                    snap: \"start\"\r\n                },\r\n                {\r\n                    guide: Math.round(box.x + box.width / 2),\r\n                    offset: Math.round(node.x() - box.x - box.width / 2),\r\n                    snap: \"center\"\r\n                },\r\n                {\r\n                    guide: Math.round(box.x + box.width),\r\n                    offset: Math.round(node.x() - box.x - box.width),\r\n                    snap: \"end\"\r\n                }\r\n            ],\r\n            horizontal: [\r\n                {\r\n                    guide: Math.round(box.y),\r\n                    offset: Math.round(node.y() - box.y),\r\n                    snap: \"start\"\r\n                },\r\n                {\r\n                    guide: Math.round(box.y + box.height / 2),\r\n                    offset: Math.round(node.y() - box.y - box.height / 2),\r\n                    snap: \"center\"\r\n                },\r\n                {\r\n                    guide: Math.round(box.y + box.height),\r\n                    offset: Math.round(node.y() - box.y - box.height),\r\n                    snap: \"end\"\r\n                }\r\n            ]\r\n        };\r\n    };\r\n\r\n    const getGuides = (lineGuideStops, itemBounds) => {\r\n        const resultV = [];\r\n        const resultH = [];\r\n\r\n        lineGuideStops.vertical.forEach(lineGuide => {\r\n            itemBounds.vertical.forEach(itemBound => {\r\n                const diff = Math.abs(lineGuide - itemBound.guide);\r\n                // if the distance between guild line and object snap point is close we can consider this for snapping\r\n                if (diff < GUIDELINE_OFFSET) {\r\n                    resultV.push({\r\n                        lineGuide: lineGuide,\r\n                        diff: diff,\r\n                        snap: itemBound.snap,\r\n                        offset: itemBound.offset\r\n                    });\r\n                }\r\n            });\r\n        });\r\n\r\n        lineGuideStops.horizontal.forEach(lineGuide => {\r\n            itemBounds.horizontal.forEach(itemBound => {\r\n                const diff = Math.abs(lineGuide - itemBound.guide);\r\n                if (diff < GUIDELINE_OFFSET) {\r\n                    resultH.push({\r\n                        lineGuide: lineGuide,\r\n                        diff: diff,\r\n                        snap: itemBound.snap,\r\n                        offset: itemBound.offset\r\n                    });\r\n                }\r\n            });\r\n        });\r\n\r\n        const guides = [];\r\n\r\n        // find closest snap\r\n        const minV = resultV.sort((a, b) => a.diff - b.diff)[0];\r\n        const minH = resultH.sort((a, b) => a.diff - b.diff)[0];\r\n        if (minV) {\r\n            guides.push({\r\n                lineGuide: minV.lineGuide,\r\n                offset: minV.offset,\r\n                orientation: \"V\",\r\n                snap: minV.snap\r\n            });\r\n        }\r\n        if (minH) {\r\n            guides.push({\r\n                lineGuide: minH.lineGuide,\r\n                offset: minH.offset,\r\n                orientation: \"H\",\r\n                snap: minH.snap\r\n            });\r\n        }\r\n        return guides;\r\n    };\r\n\r\n    const drawGuides = guides => {\r\n        guides.forEach(lg => {\r\n            if (lg.orientation === \"H\") {\r\n                const lines = new Konva.Line({\r\n                    points: [-6000, lg.lineGuide, 6000, lg.lineGuide],\r\n                    stroke: \"rgb(0, 161, 255)\",\r\n                    strokeWidth: 1,\r\n                    name: \"guid-line\",\r\n                    dash: [4, 6]\r\n                });\r\n                $layer.current.add(lines);\r\n                $layer.current.batchDraw();\r\n            } else if (lg.orientation === \"V\") {\r\n                const lines = new Konva.Line({\r\n                    points: [lg.lineGuide, -6000, lg.lineGuide, 6000],\r\n                    stroke: \"rgb(0, 161, 255)\",\r\n                    strokeWidth: 1,\r\n                    name: \"guid-line\",\r\n                    dash: [4, 6]\r\n                });\r\n                $layer.current.add(lines);\r\n                $layer.current.batchDraw();\r\n            }\r\n        });\r\n    };\r\n\r\n    const _onDragMove = e => {\r\n        const linesArray = $layer.current.find(\".guid-line\")\r\n        if (!!linesArray.length) {\r\n            linesArray.forEach(item => item.destroy())\r\n        }\r\n        const lineGuideStops = getLineGuideStops(e.target);\r\n        const itemBounds = getObjectSnappingEdges(e.target);\r\n        const guides = getGuides(lineGuideStops, itemBounds);\r\n        if (!guides.length) {\r\n            return;\r\n        }\r\n        drawGuides(guides);\r\n        guides.forEach(lg => {\r\n            switch (lg.snap) {\r\n                case \"start\": {\r\n                    switch (lg.orientation) {\r\n                        case \"V\": {\r\n                            e.target.x(lg.lineGuide + lg.offset);\r\n                            break;\r\n                        }\r\n                        case \"H\": {\r\n                            e.target.y(lg.lineGuide + lg.offset);\r\n                            break;\r\n                        }\r\n                        default:\r\n                            return;\r\n                    }\r\n                    break;\r\n                }\r\n                case \"center\": {\r\n                    switch (lg.orientation) {\r\n                        case \"V\": {\r\n                            e.target.x(lg.lineGuide + lg.offset);\r\n                            break;\r\n                        }\r\n                        case \"H\": {\r\n                            e.target.y(lg.lineGuide + lg.offset);\r\n                            break;\r\n                        }\r\n                        default:\r\n                            return;\r\n                    }\r\n                    break;\r\n                }\r\n                case \"end\": {\r\n                    switch (lg.orientation) {\r\n                        case \"V\": {\r\n                            e.target.x(lg.lineGuide + lg.offset);\r\n                            break;\r\n                        }\r\n                        case \"H\": {\r\n                            e.target.y(lg.lineGuide + lg.offset);\r\n                            break;\r\n                        }\r\n                        default:\r\n                            return;\r\n                    }\r\n                    break;\r\n                }\r\n                default:\r\n                    return;\r\n            }\r\n        });\r\n    };\r\n\r\n    const _onDragEnd = e => {\r\n        const linesArray = $layer.current.find(\".guid-line\")\r\n        if (!!linesArray.length) {\r\n            linesArray.forEach(item => item.destroy())\r\n        }\r\n        $layer.current.batchDraw();\r\n    };\r\n\r\n    const checkDeselect = (e) => {\r\n        // deselect when clicked on empty area\r\n        const clickedOnEmpty = e.target === e.target.getStage();\r\n        if (clickedOnEmpty) {\r\n            unSelectAll();\r\n            $tr.current.nodes([]);\r\n            setNodes([]);\r\n            // layerRef.current.remove(selectionRectangle);\r\n        }\r\n    };\r\n\r\n    const updateSelectionRect = () => {\r\n        const node = selectionRectRef.current;\r\n        node.setAttrs({\r\n            visible: selection.current.visible,\r\n            x: Math.min(selection.current.x1, selection.current.x2),\r\n            y: Math.min(selection.current.y1, selection.current.y2),\r\n            width: Math.abs(selection.current.x1 - selection.current.x2),\r\n            height: Math.abs(selection.current.y1 - selection.current.y2),\r\n            fill: \"rgba(0, 161, 255, 0.3)\"\r\n        });\r\n        node.getLayer().batchDraw();\r\n    };\r\n\r\n    const oldPos = React.useRef(null);\r\n    const onMouseDown = (e) => {\r\n        const isElement = e.target.findAncestor(\".elements-container\");\r\n        const isTransformer = e.target.findAncestor(\"Transformer\");\r\n        if (isElement || isTransformer) {\r\n            return;\r\n        }\r\n\r\n        const pos = e.target.getStage().getPointerPosition();\r\n        selection.current.visible = true;\r\n        selection.current.x1 = pos.x;\r\n        selection.current.y1 = pos.y;\r\n        selection.current.x2 = pos.x;\r\n        selection.current.y2 = pos.y;\r\n        updateSelectionRect();\r\n    };\r\n\r\n    const onMouseMove = (e) => {\r\n        if (!selection.current.visible) {\r\n            return;\r\n        }\r\n        const pos = e.target.getStage().getPointerPosition();\r\n        selection.current.x2 = pos.x;\r\n        selection.current.y2 = pos.y;\r\n        updateSelectionRect();\r\n    };\r\n\r\n    const onMouseUp = () => {\r\n        oldPos.current = null;\r\n        if (!selection.current.visible) {\r\n            return;\r\n        }\r\n        const selBox = selectionRectRef.current.getClientRect();\r\n\r\n        const elements = [];\r\n        $layer.current.find(\".object\").forEach((elementNode) => {\r\n            const elBox = elementNode.getClientRect();\r\n            if (Konva.Util.haveIntersection(selBox, elBox)) {\r\n                elements.push(elementNode);\r\n            }\r\n        });\r\n        $tr.current.nodes(elements);\r\n        selection.current.visible = false;\r\n        // disable click event\r\n        Konva.listenClickTap = false;\r\n        updateSelectionRect();\r\n    };\r\n\r\n    const onClickTap = (e) => {\r\n        // if we are selecting with rect, do nothing\r\n        if (selectionRectRef.current.visible()) {\r\n            return;\r\n        }\r\n        let stage = e.target.getStage();\r\n        let layer = $layer.current;\r\n        let tr = $tr.current;\r\n        // if click on empty area - remove all selections\r\n        if (e.target === stage) {\r\n            unSelectAll();\r\n            setNodes([]);\r\n            tr.nodes([]);\r\n            layer.draw();\r\n            return;\r\n        }\r\n\r\n        // do nothing if clicked NOT on our rectangles\r\n        if (!e.target.hasName(\".object\")) {\r\n            return;\r\n        }\r\n\r\n        // do we pressed shift or ctrl?\r\n        const metaPressed = e.evt.shiftKey || e.evt.ctrlKey || e.evt.metaKey;\r\n        const isSelected = tr.nodes().indexOf(e.target) >= 0;\r\n\r\n        if (!metaPressed && !isSelected) {\r\n            // if no key pressed and the node is not selected\r\n            // select just one\r\n            tr.nodes([e.target]);\r\n        } else if (metaPressed && isSelected) {\r\n            // if we pressed keys and node was selected\r\n            // we need to remove it from selection:\r\n            const nodes = tr.nodes().slice(); // use slice to have new copy of array\r\n            // remove node from array\r\n            nodes.splice(nodes.indexOf(e.target), 1);\r\n            tr.nodes(nodes);\r\n        } else if (metaPressed && !isSelected) {\r\n            // add the node into selection\r\n            const nodes = tr.nodes().concat([e.target]);\r\n            tr.nodes(nodes);\r\n        }\r\n        layer.draw();\r\n    };\r\n\r\n    return (\r\n        <Stage\r\n            ref={$stage}\r\n            onMouseDown={onMouseDown}\r\n            onMouseUp={onMouseUp}\r\n            onMouseMove={onMouseMove}\r\n            onTouchStart={checkDeselect}\r\n            onClick={onClickTap}\r\n            {...stageDimensions}\r\n        >\r\n            <Layer\r\n                ref={$layer}\r\n                onDragMove={_onDragMove}\r\n                onDragEnd={_onDragEnd}\r\n            >\r\n                {templateData.variations[variationIndex].elements?.map((elem, i) => {\r\n                    if (elem.type === \"rectangle\") return (\r\n                        <Rectangle\r\n                            key={i}\r\n                            shapeProps={elem}\r\n                            onSelect={(e) => {\r\n                                if (e.current !== undefined) {\r\n                                    let temp = nodesArray;\r\n                                    if (!nodesArray.includes(e.current)) temp.push(e.current);\r\n                                    setNodes(temp);\r\n                                    $tr.current.nodes(nodesArray);\r\n                                    $tr.current.nodes(nodesArray);\r\n                                    $tr.current.getLayer().batchDraw();\r\n                                }\r\n                                if (elem.id !== \"shapes_background\")\r\n                                    setSelectedId(elem.id);\r\n                            }}\r\n                            // onSelect={() => {\r\n                            //     setSelectedId(rect.id)\r\n                            // }}\r\n                            onEditClick={handleEditSelectedItem}\r\n                            onChange={(newAttrs) => {\r\n                                setTemplateData((prev) => {\r\n                                    const index = prev.variations[variationIndex].elements.findIndex(item => item.id === elem.id)\r\n                                    prev.variations[variationIndex].elements[index] = newAttrs\r\n                                });\r\n                            }}\r\n                        />\r\n                    )\r\n\r\n                    if (elem.type === \"circle\") return (\r\n                        <UCircle\r\n                            key={i}\r\n                            shapeProps={elem}\r\n                            onSelect={() => {\r\n                                setSelectedId(elem.id)\r\n                            }}\r\n                            onEditClick={handleEditSelectedItem}\r\n                            onChange={(newAttrs) => {\r\n                                setTemplateData((prev) => {\r\n                                    const index = prev.variations[variationIndex].elements.findIndex(item => item.id === elem.id)\r\n                                    prev.variations[variationIndex].elements[index] = newAttrs\r\n                                });\r\n                            }}\r\n                        />\r\n                    )\r\n\r\n                    if (elem.type === \"line\") return (\r\n                        <ULine\r\n                            key={i}\r\n                            shapeProps={elem}\r\n                            onSelect={() => {\r\n                                setSelectedId(elem.id)\r\n                            }}\r\n                            onEditClick={handleEditSelectedItem}\r\n                            onChange={(newAttrs) => {\r\n                                setTemplateData((prev) => {\r\n                                    const index = prev.variations[variationIndex].elements.findIndex(item => item.id === elem.id)\r\n                                    prev.variations[variationIndex].elements[index] = newAttrs\r\n                                });\r\n                            }}\r\n                        />\r\n                    )\r\n\r\n                    if (elem.type === \"polygon\") return (\r\n                        <UPolygon\r\n                            key={i}\r\n                            shapeProps={elem}\r\n                            onSelect={() => {\r\n                                setSelectedId(elem.id)\r\n                            }}\r\n                            onEditClick={handleEditSelectedItem}\r\n                            onChange={(newAttrs) => {\r\n                                setTemplateData((prev) => {\r\n                                    const index = prev.variations[variationIndex].elements.findIndex(item => item.id === elem.id)\r\n                                    prev.variations[variationIndex].elements[index] = newAttrs\r\n                                });\r\n                            }}\r\n                        />\r\n                    )\r\n\r\n                    if (elem.type === \"svg\") return (\r\n                        <USvg\r\n                            key={i}\r\n                            svgProps={elem}\r\n                            onSelect={() => {\r\n                                setSelectedId(elem.id)\r\n                            }}\r\n                            onEditClick={handleEditSelectedItem}\r\n                            onChange={(event) => setTemplateData((prev) => {\r\n                                const svgIndex = prev.variations[variationIndex].elements.findIndex(svgItem => svgItem.id === elem.id)\r\n                                prev.variations[variationIndex].elements[svgIndex] = {\r\n                                    ...prev.variations[variationIndex].elements[svgIndex],\r\n                                    ...JSON.parse(JSON.stringify(event.target.attrs))\r\n                                }\r\n                            })}\r\n                        />\r\n                    )\r\n\r\n                    if (elem.type === \"image\") return (\r\n                        <UImage\r\n                            key={i}\r\n                            imageProps={elem}\r\n                            onSelect={() => {\r\n                                setSelectedId(elem.id)\r\n                            }}\r\n                            onChange={(event) => setTemplateData((prev) => {\r\n                                const imageIndex = prev.variations[variationIndex].elements.findIndex(img => img.id === elem.id)\r\n                                prev.variations[variationIndex].elements[imageIndex] = {\r\n                                    ...prev.variations[variationIndex].elements[imageIndex],\r\n                                    ...JSON.parse(JSON.stringify(event.target.attrs))\r\n                                }\r\n                            })}\r\n                        />\r\n                    )\r\n\r\n                    if (elem.type === \"text\") return (\r\n                        <UText\r\n                            key={i}\r\n                            textProps={elem}\r\n                            onSelect={() => {\r\n                                setSelectedId(elem.id)\r\n                            }}\r\n                            onEditClick={handleEditSelectedItem}\r\n                            onChange={(event) => setTemplateData((prev) => {\r\n                                const txtIndex = prev.variations[variationIndex].elements.findIndex(txt => txt.id === elem.id)\r\n                                prev.variations[variationIndex].elements[txtIndex] = { ...event.target.attrs }\r\n                            })}\r\n                        />\r\n                    )\r\n\r\n\r\n                })}\r\n\r\n                <TransformerComponent\r\n                    id={`tr${selectedId}`}\r\n                    $tr={$tr}\r\n                    selectedShapeName={selectedId}\r\n                    templateData={templateData}\r\n                />\r\n                <Rect fill=\"rgba(0,0,255,0.5)\" ref={selectionRectRef} />\r\n            </Layer>\r\n        </Stage>\r\n    )\r\n}\r\n\r\nexport default MainStage\r\n","import React, { useEffect, useState } from 'react'\r\nimport { SketchPicker } from 'react-color'\r\nimport { googleFontsList } from '../../utils/defaults'\r\n\r\ninterface Props {\r\n    selectedId: string\r\n    variationIndex: number\r\n    templateData: any\r\n    setTemplateData: any\r\n    handleCloseEditTextModal: any\r\n}\r\n\r\nconst EditTextBox: React.FC<Props> = ({ selectedId, variationIndex, templateData, setTemplateData, handleCloseEditTextModal }) => {\r\n\r\n    const [inputValue, setInputValue] = useState<string>(\"\")\r\n    const [fontSize, setFontSize] = useState<number>(20)\r\n    const [fontStyle, setFontStyle] = useState<string>(\"normal\")\r\n    const [fontFamily, setFontFamily] = useState(googleFontsList[0]);\r\n    const [textAlign, setTextAlign] = useState(\"left\")\r\n    const [fontColor, setFontColor] = useState(\"#000000\")\r\n\r\n    useEffect(() => {\r\n        if (selectedId?.split(\"_\")[0] === \"textBoxes\") {\r\n            const index = templateData.variations[variationIndex].elements.findIndex(item => item.id === selectedId)\r\n            setInputValue(templateData.variations[variationIndex].elements[index].text)\r\n            setFontSize(templateData.variations[variationIndex].elements[index].fontSize)\r\n            setFontStyle(templateData.variations[variationIndex].elements[index].fontStyle)\r\n            setFontFamily(templateData.variations[variationIndex].elements[index].fontFamily)\r\n            setTextAlign(templateData.variations[variationIndex].elements[index].align)\r\n            setFontColor(templateData.variations[variationIndex].elements[index].fill)\r\n        }\r\n    }, [selectedId])\r\n\r\n    const handleSave = () => {\r\n        setTemplateData(prev => {\r\n            const index = prev.variations[variationIndex].elements.findIndex(item => item.id === selectedId)\r\n            prev.variations[variationIndex].elements[index].text = inputValue\r\n            prev.variations[variationIndex].elements[index].fontSize = fontSize\r\n            prev.variations[variationIndex].elements[index].fontStyle = fontStyle\r\n            prev.variations[variationIndex].elements[index].fontFamily = fontFamily\r\n            prev.variations[variationIndex].elements[index].align = textAlign\r\n            prev.variations[variationIndex].elements[index].fill = fontColor\r\n        })\r\n        handleCloseEditTextModal()\r\n    }\r\n\r\n    return (\r\n        <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\r\n            <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\r\n                <div className=\"\">\r\n                    <p>Font Size:</p>\r\n                    <input className=\"border mb-5\" type=\"number\" value={fontSize} onChange={e => setFontSize(parseInt(e.target.value))} />\r\n                    <p>Select Font style:</p>\r\n                    <select className=\"border mb-5\" name=\"font-style\" onChange={e => setFontStyle(e.target.value)}>\r\n                        <option value=\"normal\">normal</option>\r\n                        <option value=\"bold\">bold</option>\r\n                        <option value=\"italic\">italic</option>\r\n                        <option value=\"italic bold\">italic bold</option>\r\n                    </select>\r\n                    <p>Select Text Alignment:</p>\r\n                    <select className=\"border mb-5\" name=\"text-align\" onChange={e => setTextAlign(e.target.value)}>\r\n                        <option value=\"left\">left</option>\r\n                        <option value=\"center\">center</option>\r\n                        <option value=\"right\">right</option>\r\n                    </select>\r\n                    <p>Select font family:</p>\r\n                    <select\r\n                        value={fontFamily}\r\n                        style={{ fontFamily: fontFamily }}\r\n                        onChange={e => setFontFamily(e.target.value)}\r\n                        className=\"border mb-5\"\r\n                    >\r\n                        {googleFontsList.map((val, index) => {\r\n                            return (\r\n                                <option\r\n                                    className=\"bg-white text-black\"\r\n                                    style={{ fontFamily: val }}\r\n                                    key={index}\r\n                                    selected={val === fontFamily}\r\n                                    value={val}\r\n                                >\r\n                                    {val}\r\n                                </option>\r\n                            );\r\n                        })}\r\n                    </select>\r\n                    <p>Text color:</p>\r\n                    <SketchPicker\r\n                        width=\"150px\"\r\n                        color={fontColor}\r\n                        onChange={(color) => setFontColor(color.hex)}\r\n                    />\r\n                </div>\r\n                <div className=\"mt-5\">\r\n                    <textarea\r\n                        className=\"border h-40 w-full\"\r\n                        style={{\r\n                            fontFamily: fontFamily,\r\n                            fontSize: fontSize,\r\n                            fontStyle: fontStyle,\r\n                            textAlign: textAlign as \"center\",\r\n                            color: fontColor\r\n                        }}\r\n                        value={inputValue}\r\n                        onChange={(e) => setInputValue(e.target.value)}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\r\n                <button\r\n                    onClick={handleSave}\r\n                    type=\"button\"\r\n                    className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\">\r\n                    Done\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditTextBox\r\n","import React from 'react'\r\nimport { SketchPicker } from \"react-color\"\r\nimport { useFileUpload } from 'use-file-upload'\r\nimport { stageDimensions } from '../../utils/defaults'\r\n\r\ninterface Props {\r\n    selectedId: string\r\n    templateData: any\r\n    setTemplateData: any\r\n    variationIndex: number\r\n    currentPalette: { name: string, color: string }[]\r\n}\r\n\r\nconst ShapeColorSelector: React.FC<Props> = ({\r\n    selectedId,\r\n    templateData,\r\n    setTemplateData,\r\n    variationIndex,\r\n    currentPalette,\r\n}) => {\r\n    const [file, selectFile] = useFileUpload()\r\n\r\n    const handleFillImagePattern = () => {\r\n        selectFile({ accept: \"image/png, image/jpg, image/jpeg\", multiple: false },\r\n            ({ file }: any) => {\r\n\r\n                const reader = new FileReader();\r\n                reader.readAsDataURL(file);\r\n\r\n                reader.onload = () => {\r\n                    //base64encoded string => reader.result\r\n                    setTemplateData((prev) => {\r\n                        const selectedShape = prev.variations[variationIndex].elements.find(item => item.id === selectedId)\r\n                        selectedShape.fill = \"\"\r\n                        selectedShape.patternImageUrl = reader.result\r\n                    })\r\n                };\r\n            })\r\n    }\r\n\r\n    const handleStrokeWidthChange = e => {\r\n        setTemplateData(prev => {\r\n            const selectedShape = prev.variations[variationIndex].elements.find(item => item.id === selectedId)\r\n            selectedShape.strokeWidth = parseInt(e.target.value)\r\n        })\r\n    }\r\n\r\n    const handleCornerRadius = e => {\r\n        setTemplateData(prev => {\r\n            const selectedShape = prev.variations[variationIndex].elements.find(item => item.id === selectedId)\r\n            selectedShape.cornerRadius = parseInt(e.target.value)\r\n        })\r\n    }\r\n\r\n    const handleOpacity = e => {\r\n        setTemplateData(prev => {\r\n            const selectedShape = prev.variations[variationIndex].elements.find(item => item.id === selectedId)\r\n            selectedShape.opacity = parseFloat(e.target.value)\r\n        })\r\n    }\r\n\r\n    const handleStrokeColor = (color) => {\r\n        setTemplateData(prev => {\r\n            const selectedShape = prev.variations[variationIndex].elements.find(item => item.id === selectedId)\r\n            selectedShape.stroke = color.hex\r\n        })\r\n    }\r\n\r\n    const handleShapeFill = (color: string) => {\r\n        setTemplateData(prev => {\r\n            const selectedShape = prev.variations[variationIndex].elements.find(item => item.id === selectedId)\r\n            selectedShape.fill = color\r\n            selectedShape.patternImageUrl = undefined\r\n        })\r\n    }\r\n\r\n    const handleGradientColor = (color1: string, color2: string) => {\r\n        setTemplateData(prev => {\r\n            const selectedShape = prev.variations[variationIndex].elements.find(item => item.id === selectedId)\r\n            selectedShape.fill = \"\"\r\n            selectedShape.fillLinearGradientColorStops = [0, color1, 1, color2]\r\n            selectedShape.fillLinearGradientStartPoint = { x: 0, y: 0 }\r\n            selectedShape.fillLinearGradientEndPoint = {\r\n                x: selectedId === \"shapes_background\" ? stageDimensions.width : 100,\r\n                y: selectedId === \"shapes_background\" ? stageDimensions.height : 100\r\n            }\r\n            selectedShape.patternImageUrl = undefined\r\n        })\r\n    }\r\n\r\n    const handleFillPatternScaleX = (e) => {\r\n        setTemplateData(prev => {\r\n            const selectedShape = prev.variations[variationIndex].elements.find(item => item.id === selectedId)\r\n            selectedShape.fillPatternScaleX = parseFloat(e.target.value)\r\n        })\r\n    }\r\n\r\n    const handleFillPatternScaleY = (e) => {\r\n        setTemplateData(prev => {\r\n            const selectedShape = prev.variations[variationIndex].elements.find(item => item.id === selectedId)\r\n            selectedShape.fillPatternScaleY = parseFloat(e.target.value)\r\n        })\r\n    }\r\n\r\n    const handleFillPatternOffsetX = (e) => {\r\n        setTemplateData(prev => {\r\n            const selectedShape = prev.variations[variationIndex].elements.find(item => item.id === selectedId)\r\n            selectedShape.fillPatternOffsetX = parseInt(e.target.value)\r\n        })\r\n    }\r\n\r\n    const handleFillPatternOffsetY = (e) => {\r\n        setTemplateData(prev => {\r\n            const selectedShape = prev.variations[variationIndex].elements.find(item => item.id === selectedId)\r\n            selectedShape.fillPatternOffsetY = parseInt(e.target.value)\r\n        })\r\n    }\r\n\r\n\r\n    const selectedShapeData = templateData.variations[variationIndex].elements.find(item => item.id === selectedId)\r\n\r\n    return (\r\n        <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\r\n            <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\r\n                <div className={selectedId !== \"shapes_background\" ? \"\" : \"hidden\"}>\r\n                    <p>Border width: </p>\r\n                    <input\r\n                        className=\"border mb-5\"\r\n                        type=\"number\"\r\n                        min={0}\r\n                        value={selectedShapeData?.strokeWidth}\r\n                        onChange={handleStrokeWidthChange}\r\n                    />\r\n                    <p>Corner radius:</p>\r\n                    <input\r\n                        className=\"border mb-5\"\r\n                        type=\"number\"\r\n                        min={0}\r\n                        value={selectedShapeData?.cornerRadius}\r\n                        onChange={handleCornerRadius}\r\n                    />\r\n                    <p>Opacity: </p>\r\n                    <input\r\n                        className=\"border mb-5\"\r\n                        type=\"number\"\r\n                        value={selectedShapeData?.opacity}\r\n                        step={0.1}\r\n                        min={0.1}\r\n                        max={1.0}\r\n                        onChange={handleOpacity}\r\n                    />\r\n                    <p>Image Scale X: </p>\r\n                    <input\r\n                        className=\"border mb-5\"\r\n                        type=\"number\"\r\n                        step={0.1}\r\n                        value={selectedShapeData?.fillPatternScaleX}\r\n                        onChange={handleFillPatternScaleX}\r\n                    />\r\n                    <p>Image Scale Y: </p>\r\n                    <input\r\n                        className=\"border mb-5\"\r\n                        type=\"number\"\r\n                        step={0.1}\r\n                        value={selectedShapeData?.fillPatternScaleY}\r\n                        onChange={handleFillPatternScaleY}\r\n                    />\r\n                    <p>Image offset X: </p>\r\n                    <input\r\n                        className=\"border mb-5\"\r\n                        type=\"number\"\r\n                        step={10}\r\n                        value={selectedShapeData?.fillPatternOffsetX}\r\n                        onChange={handleFillPatternOffsetX}\r\n                    />\r\n                    <p>Image offset Y: </p>\r\n                    <input\r\n                        className=\"border mb-5\"\r\n                        type=\"number\"\r\n                        step={10}\r\n                        value={selectedShapeData?.fillPatternOffsetY}\r\n                        onChange={handleFillPatternOffsetY}\r\n                    />\r\n                    <p>Borer color:</p>\r\n                    <SketchPicker\r\n                        width=\"150px\"\r\n                        color={selectedShapeData?.stroke}\r\n                        onChange={handleStrokeColor}\r\n                    />\r\n                </div>\r\n                <div className={!!selectedShapeData?.fillPatternImage ? \"\" : \"hidden\"}>\r\n                    <p>Image Offset X: </p>\r\n                    <input\r\n                        className=\"border mb-5\"\r\n                        type=\"number\"\r\n                        value={selectedShapeData?.fillPatternOffsetX}\r\n                        step={0.1} min={0.1} max={1.0}\r\n                        onChange={handleFillPatternOffsetX}\r\n                    />\r\n                    <p>Image Offset Y: </p>\r\n                    <input\r\n                        className=\"border mb-5\"\r\n                        type=\"number\"\r\n                        value={selectedShapeData?.fillPatternOffsetY}\r\n                        step={0.1} min={0.1} max={1.0}\r\n                        onChange={handleFillPatternOffsetY}\r\n                    />\r\n                    <p>Image Scale X: </p>\r\n                    <input\r\n                        className=\"border mb-5\"\r\n                        type=\"number\"\r\n                        value={selectedShapeData?.fillPatternScaleX}\r\n                        step={0.1} min={0.1} max={1.0}\r\n                        onChange={handleFillPatternScaleX}\r\n                    />\r\n                    <p>Image Scale Y: </p>\r\n                    <input\r\n                        className=\"border mb-5\"\r\n                        type=\"number\"\r\n                        value={selectedShapeData?.fillPatternScaleY}\r\n                        step={0.1} min={0.1} max={1.0}\r\n                        onChange={handleFillPatternScaleY}\r\n                    />\r\n\r\n                </div>\r\n                <div>\r\n                    {currentPalette.map((item, index) => (\r\n                        <div key={index} className=\"h-10 mt-5 mb-5 flex flex-wrap justify-center content-center\" >\r\n                            <p className=\"w-48\">Select {item.name}</p> <div\r\n                                className=\"w-10 h-10 border border-black\"\r\n                                style={{ backgroundColor: item.color }}\r\n                                onClick={() => handleShapeFill(item.color)}\r\n                            ></div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"sm:flex sm:items-start\">\r\n                    <SketchPicker\r\n                        width=\"100%\"\r\n                        color={selectedShapeData?.fill}\r\n                        onChange={(color) => handleShapeFill(color.hex)}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\r\n                <div className=\"flex justify-center\">\r\n                    <button\r\n                        className=\"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\"\r\n                        onClick={handleFillImagePattern}\r\n                    >Insert image</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\r\n                <b>Gradient:</b>\r\n                <div className=\"grid grid-cols-2\">\r\n                    <div>\r\n                        <p>Color 1</p>\r\n                        <div className=\"sm:flex sm:items-start\">\r\n                            <SketchPicker\r\n                                width=\"150px\"\r\n                                color={selectedShapeData?.fillLinearGradientColorStops ?\r\n                                    selectedShapeData?.fillLinearGradientColorStops[1] :\r\n                                    \"#171717\"}\r\n                                onChange={(color) => handleGradientColor(\r\n                                    color.hex,\r\n                                    selectedShapeData?.fillLinearGradientColorStops ?\r\n                                        selectedShapeData?.fillLinearGradientColorStops[3] :\r\n                                        \"#171717\")}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <p>Color 2</p>\r\n                        <div className=\"sm:flex sm:items-start\">\r\n                            <SketchPicker\r\n                                width=\"150px\"\r\n                                color={selectedShapeData?.fillLinearGradientColorStops ?\r\n                                    selectedShapeData?.fillLinearGradientColorStops[3] :\r\n                                    selectedShapeData?.fill}\r\n                                onChange={(color) => handleGradientColor(\r\n                                    selectedShapeData?.fillLinearGradientColorStops ?\r\n                                        selectedShapeData?.fillLinearGradientColorStops[1] :\r\n                                        selectedShapeData?.fill,\r\n                                    color.hex)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShapeColorSelector\r\n","import React, { useState } from 'react'\r\nimport { SketchPicker } from \"react-color\"\r\nimport * as svg from \"../../utils/svg\"\r\n\r\ninterface Props {\r\n    selectedId: string\r\n    templateData: any\r\n    setTemplateData: any\r\n    variationIndex: number\r\n}\r\n\r\nconst SvgColorSelector: React.FC<Props> = ({\r\n    selectedId,\r\n    templateData,\r\n    setTemplateData,\r\n    variationIndex\r\n}) => {\r\n\r\n    const [currentColor, setCurrentColor] = useState(\"#171717\")\r\n\r\n    const svgData = templateData.variations[variationIndex].elements.find(item => item.id === selectedId)\r\n    const colors = svg.getColors(svgData.svgString);\r\n    const colorMap = svgData.colorMap\r\n\r\n    const handleSvgElementColorChange = (oldColor: string, newColor: string) => {\r\n        setTemplateData(prev => {\r\n            prev.variations[variationIndex].elements.find(item => item.id === selectedId)\r\n                .colorMap[oldColor] = newColor\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\r\n            <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\r\n                <div>\r\n                    <p>Select a color to edit</p>\r\n                    {colors.map((item, index) => (\r\n                        <div key={index} className=\"h-10 m-5 inline-block\" >\r\n                            <div\r\n                                className=\"w-10 h-10 border border-black\"\r\n                                style={{ backgroundColor: svgData.colorMap[item] || item }}\r\n                                onClick={() => setCurrentColor(item)}\r\n                            ></div>\r\n                        </div>\r\n                    ))}\r\n\r\n                </div>\r\n                <div className={!!currentColor ? \"\" : \"hidden\"}>\r\n                    {templateData.palette.map((item, index) => (\r\n                        <div key={index} className=\"h-10 mt-5 mb-5 flex flex-wrap justify-center content-center\" >\r\n                            <p className=\"w-48\">Select {item.name}</p> <div\r\n                                className={\"w-10 h-10 border border-black \" + (currentColor === item.color && \"opacity-50\")}\r\n                                style={{ backgroundColor: item.color }}\r\n                                onClick={() => handleSvgElementColorChange(currentColor, item.color)}\r\n                            ></div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className={!!currentColor ? \"sm:flex sm:items-start\" : \"hidden\"}>\r\n                    <SketchPicker\r\n                        width=\"100%\"\r\n                        color={colorMap[currentColor] || \"#000000\"}\r\n                        onChange={(color) => handleSvgElementColorChange(currentColor, color.hex)}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SvgColorSelector\r\n","import React from 'react'\r\nimport EditTextBox from '../../tailwindComponents/EditTextBox'\r\nimport ShapeColorSelector from '../../tailwindComponents/ShapeColorSelector'\r\nimport SvgColorSelector from '../../tailwindComponents/SvgColorSelector'\r\n\r\nconst EditingTools = ({\r\n    selectedId,\r\n    unSelectAll,\r\n    isOpenColorPicker,\r\n    isEditTextBox,\r\n    templateData,\r\n    setTemplateData,\r\n    variationIndex,\r\n    handleEditSelectedItem,\r\n    handleDeleteSelectedItem,\r\n    handleCloseEditTextModal\r\n}) => {\r\n\r\n    return (\r\n        <div className=\"h-screen overflow-y-scroll\">\r\n            <div className=\"flex justify-center\">\r\n                <button\r\n                    onClick={handleEditSelectedItem}\r\n                    className={selectedId?.split(\"_\")[0] === \"images\" ? \"hidden\" : \"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\"}\r\n                >Edit</button>\r\n            </div>\r\n            <div className=\"flex justify-center\">\r\n                <button\r\n                    onClick={handleDeleteSelectedItem}\r\n                    className={selectedId === \"shapes_background\" ? \"hidden\" : \"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\"}\r\n                >Delete</button>\r\n            </div>\r\n            <div className=\"flex justify-center\">\r\n                <button\r\n                    onClick={unSelectAll}\r\n                    className=\"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\"\r\n                >Close</button>\r\n            </div>\r\n            {isOpenColorPicker && selectedId?.split('_')[0] === \"shapes\" && (\r\n                <ShapeColorSelector\r\n                    selectedId={selectedId}\r\n                    templateData={templateData}\r\n                    setTemplateData={setTemplateData}\r\n                    variationIndex={variationIndex}\r\n                    currentPalette={templateData.palette}\r\n                />\r\n            )}\r\n\r\n            {isOpenColorPicker && selectedId?.split('_')[0] === \"svgs\" && (\r\n                <SvgColorSelector\r\n                    selectedId={selectedId}\r\n                    templateData={templateData}\r\n                    setTemplateData={setTemplateData}\r\n                    variationIndex={variationIndex}\r\n                />\r\n            )}\r\n\r\n            {isEditTextBox && <EditTextBox\r\n                selectedId={selectedId}\r\n                templateData={templateData}\r\n                setTemplateData={setTemplateData}\r\n                variationIndex={variationIndex}\r\n                handleCloseEditTextModal={handleCloseEditTextModal}\r\n            />}\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditingTools\r\n","import React, { useEffect } from 'react'\r\nimport swal from 'sweetalert'\r\nimport { stageDimensions } from '../utils/defaults'\r\n\r\nconst MainStageFallback = ({ error, resetErrorBoundary }) => {\r\n    useEffect(() => {\r\n        swal(\"Oops!\", \"The template you selected might be corrupted\", \"error\")\r\n            .then(resetErrorBoundary)\r\n    }, [])\r\n    return (\r\n        <div style={{ width: stageDimensions.width, height: stageDimensions.height }}>\r\n            {error.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainStageFallback\r\n","import React, { useEffect } from 'react'\r\nimport swal from 'sweetalert'\r\n\r\nconst TopToolBarFallback = ({ error, resetErrorBoundary }) => {\r\n    useEffect(() => {\r\n        swal(\"Oops!\", \"Something is wrong with toolbar, try reloading the page.\", \"error\")\r\n    }, [])\r\n    return (\r\n        <div>\r\n            {error.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopToolBarFallback\r\n","import React, { useEffect } from 'react'\r\nimport swal from 'sweetalert'\r\n\r\nconst SideBarFallback = ({ error, resetErrorBoundary }) => {\r\n    useEffect(() => {\r\n        swal(\"Oops!\", \"Something is wrong with sidebar, try reloading the page.\", \"error\")\r\n    }, [])\r\n    return (\r\n        <div>\r\n            {error.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideBarFallback\r\n","import React, { useEffect } from 'react'\r\nimport swal from 'sweetalert'\r\n\r\nconst SaveVariationFallback = ({ error, resetErrorBoundary }) => {\r\n    useEffect(() => {\r\n        swal(\"Oops!\", \"Something is wrong with sidebar, try reloading the page.\", \"error\")\r\n            .then(resetErrorBoundary)\r\n    }, [])\r\n    return (\r\n        <div>\r\n            {error.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SaveVariationFallback\r\n","import React, { useEffect } from 'react'\r\nimport swal from 'sweetalert'\r\n\r\nconst SaveTemplateFallback = ({ error, resetErrorBoundary }) => {\r\n    useEffect(() => {\r\n        swal(\"Oops!\", \"Something is wrong with save template modal, try refreshing the page.\", \"error\")\r\n    }, [])\r\n    return (\r\n        <div>\r\n            {error.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SaveTemplateFallback\r\n","import React, { useEffect } from 'react'\r\nimport swal from 'sweetalert'\r\n\r\nconst SelectVariationFallback = ({ error, resetErrorBoundary }) => {\r\n    useEffect(() => {\r\n        swal(\"Oops!\", \"Something is wrong, try reloading the page.\", \"error\")\r\n            .then(resetErrorBoundary)\r\n    }, [])\r\n    return (\r\n        <div>\r\n            {error.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectVariationFallback\r\n","import React, { useEffect } from 'react'\r\nimport swal from 'sweetalert'\r\n\r\nconst EditingToolsFallback = ({ error, resetErrorBoundary }) => {\r\n    useEffect(() => {\r\n        swal(\"Oops!\", \"Something is wrong with editing tools, try reloading the page.\", \"error\")\r\n            .then(resetErrorBoundary)\r\n    }, [])\r\n    return (\r\n        <div>\r\n            {error.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditingToolsFallback\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { INITIAL_STATE, TemplateContext } from '../../contexts/TemplateContext';\r\nimport SelectVariation from \"../tailwindComponents/SelectVariation\"\r\nimport SaveVariation from \"../tailwindComponents/SaveVariation\"\r\nimport SaveTemplate from \"../tailwindComponents/SaveTemplate\"\r\nimport swal from \"sweetalert\"\r\nimport SideBar from './SideBar';\r\nimport WebFont from \"webfontloader\";\r\nimport TopToolBar from './TopToolBar';\r\nimport MainStage from './MainStage';\r\nimport EditingTools from './EditingTools';\r\nimport { NavLink, useParams, useHistory } from 'react-router-dom';\r\nimport { ROUTE_NAMES } from '../../routes/route_names';\r\nimport { useQuery } from 'react-query';\r\nimport { template_service } from '../../services/templateService';\r\nimport { ErrorBoundary } from 'react-error-boundary';\r\nimport MainStageFallback from '../../ErrorFallacks/MainStageFallBack';\r\nimport TopToolBarFallback from '../../ErrorFallacks/TopToolBarFallback';\r\nimport SideBarFallback from '../../ErrorFallacks/SideBarFallback';\r\nimport SaveVariationFallback from '../../ErrorFallacks/SaveVariationFallback';\r\nimport SaveTemplateFallback from '../../ErrorFallacks/SaveTemplateFallback';\r\nimport SelectVariationFallback from '../../ErrorFallacks/SelectVariationFallback';\r\nimport EditingToolsFallback from '../../ErrorFallacks/EditingToolsFallback';\r\n\r\nconst DesignTool: React.FC = () => {\r\n    const browserHistory = useHistory()\r\n\r\n    const [templateData, setTemplateData, { goForward, goBack, stepNum, history }] = useContext(TemplateContext)\r\n    const [justUpdated, setJustUpdated] = useState(false)\r\n\r\n    let { templateID } = useParams<{ templateID: string | undefined }>()\r\n    const { data, error, isLoading } = useQuery<any, Error>([\"currentTemplate\", templateID], () => template_service.getTemplateByID(templateID))\r\n\r\n    useEffect(() => {\r\n        if (!!justUpdated) return\r\n\r\n        if (!!data && !error) {\r\n            setTemplateData(data)\r\n            setJustUpdated(true)\r\n        }\r\n    }, [data])\r\n\r\n    const [variationIndex, setVariationIndex] = useState<number>(0)\r\n\r\n    const [showSaveVariationModal, setShowSaveVariationModal] = useState(false)\r\n\r\n    const [selectedId, setSelectedId] = useState<string | null>(null);\r\n    const [isOpenColorPicker, setIsOpenColorPicker] = useState<boolean>(false)\r\n    const [isEditTextBox, setIsEditTextBox] = useState(false)\r\n    const [isOpenSaveTemplateModal, setIsOpenSaveTemplateModal] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setIsOpenColorPicker(false)\r\n        setIsEditTextBox(false)\r\n    }, [selectedId])\r\n\r\n    const unSelectAll = () => {\r\n        setIsOpenColorPicker(false)\r\n        setIsEditTextBox(false)\r\n        setSelectedId(null)\r\n    }\r\n\r\n    const handleEscape = (e) => {\r\n        if (e.key === \"Escape\") {\r\n            unSelectAll()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"keydown\", handleEscape, false);\r\n        WebFont.load({\r\n            google: {\r\n                families: ['Comfortaa', 'Josefin Sans', 'Euphoria Script', 'Oswald', 'Alfa Slab One', 'Bangers', 'Caveat', 'DM Sans', 'East Sea Dokdo', 'Homemade Apple', 'Kristi', 'Lobster Two', 'Maven Pro', 'Monoton', 'Montserrat', 'Playfair Display', 'Press Start 2P', 'Raleway', 'Roboto Slab', 'Shadows Into Light', 'Swanky and Moo Moo']\r\n            }\r\n        });\r\n\r\n        return () => {\r\n            document.removeEventListener(\"keydown\", handleEscape, false);\r\n        };\r\n    }, []);\r\n\r\n    const onUndo = () => {\r\n        !!setSelectedId && unSelectAll();\r\n        if (stepNum > 0) {\r\n            if (variationIndex > 0 && (history[stepNum].variations.length > history[stepNum - 1].variations.length)) {\r\n                setVariationIndex(variationIndex - 1)\r\n            }\r\n            goBack();\r\n        }\r\n    };\r\n    const onRedo = () => {\r\n        !!setSelectedId && unSelectAll();\r\n        if (stepNum > 0) {\r\n            if (variationIndex > 0 && (history[stepNum].variations.length > history[stepNum + 1].variations.length)) {\r\n                setVariationIndex(variationIndex - 1)\r\n            }\r\n        }\r\n        stepNum < (history.length - 1) && goForward();\r\n    };\r\n\r\n    const handleSaveVariation = (variationData: any) => {\r\n        setTemplateData(prev => {\r\n            prev.variations[variationIndex].name = variationData.name\r\n            prev.variations[variationIndex].face = variationData.face\r\n        })\r\n        setShowSaveVariationModal(false)\r\n    }\r\n\r\n    const handleAddVariation = () => {\r\n        if (templateData.variations.length < 3) {\r\n            setTemplateData(prev => {\r\n                prev.variations.push(templateData.variations[variationIndex])\r\n            })\r\n            setVariationIndex(prev => (prev + 1))\r\n        } else {\r\n            swal(\"Cannot create more than 3 variations!\")\r\n        }\r\n    }\r\n\r\n    const handleDeleteVariation = () => {\r\n        const variationsLength = templateData.variations.length\r\n        swal({\r\n            title: \"Are you sure?\",\r\n            text: \"Do you want to delete this variation?\",\r\n            icon: \"warning\",\r\n            buttons: [\"Cancel\", \"Confirm\"],\r\n            dangerMode: true,\r\n        }).then((willDelete) => {\r\n            if (willDelete) {\r\n                if (variationsLength > 1) {\r\n                    setTemplateData(prev => {\r\n                        prev.variations.splice(variationIndex, 1)\r\n                        if (variationIndex === (variationsLength - 1)) setVariationIndex(variationIndex - 1)\r\n                    })\r\n                } else {\r\n                    setTemplateData(INITIAL_STATE)\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    const handleEditSelectedItem = () => {\r\n        if (selectedId.split(\"_\")[0] === \"textBoxes\") {\r\n            setIsEditTextBox(true)\r\n            return\r\n        }\r\n        setIsOpenColorPicker(true)\r\n    }\r\n\r\n    const handleDeleteSelectedItem = () => {\r\n        setTemplateData(prev => {\r\n            prev.variations[variationIndex].elements = prev.variations[variationIndex].elements.filter(\r\n                item => item.id !== selectedId\r\n            )\r\n            unSelectAll()\r\n        })\r\n    }\r\n\r\n    const handleCloseEditTextModal = () => {\r\n        setIsEditTextBox(false)\r\n    }\r\n\r\n    const openSaveTemplateModal = () => {\r\n        setIsOpenSaveTemplateModal(true)\r\n    }\r\n\r\n    const handleSaveTemplate = async (tags: string[], categoryId: string) => {\r\n        if (!!templateID) {\r\n            await template_service.updateTemplateByID(templateID, { ...templateData, tags, categoryId })\r\n        } else {\r\n            await template_service.addNewTemplate({ ...templateData, tags, categoryId })\r\n            browserHistory.push(ROUTE_NAMES.home)\r\n        }\r\n        setIsOpenSaveTemplateModal(false)\r\n    }\r\n\r\n    const handleDeleteTemplate = () => {\r\n        swal({\r\n            title: \"Are you sure?\",\r\n            text: \"Do you want to delete this Template?\",\r\n            icon: \"warning\",\r\n            buttons: [\"Cancel\", \"Confirm\"],\r\n            dangerMode: true,\r\n        }).then(async (willDelete) => {\r\n            if (willDelete) {\r\n                if (!!templateID) {\r\n                    await template_service.deleteTemplateByID(templateID)\r\n                } else {\r\n                    setTemplateData(INITIAL_STATE)\r\n                }\r\n                browserHistory.push(ROUTE_NAMES.home)\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"min-w-max bg-gray300 h-screen\">\r\n            <div className=\"h-20 mb-5 flex flex-wrap justify-evenly content-center bg-gray900\">\r\n                <div className=\"flex gap-2\">\r\n                    <NavLink\r\n                        to={ROUTE_NAMES.home}\r\n                        className=\"text-white font-semibold py-2 px-4 border border-white-500 rounded\" >\r\n                        Back to Home\r\n                    </NavLink>\r\n                    <NavLink\r\n                        to={ROUTE_NAMES.select_palette}\r\n                        className=\"text-white font-semibold py-2 px-4 border border-white-500 rounded\" >\r\n                        Select Palette\r\n                    </NavLink>\r\n                </div>\r\n                <p className=\"text-xl text-white\">Tempalte Design</p>\r\n                <div className=\"flex gap-2\">\r\n                    <button\r\n                        onClick={openSaveTemplateModal}\r\n                        className=\"text-white font-semibold py-2 px-4 border border-white-500 rounded\" >Save Template</button>\r\n                    <button\r\n                        onClick={handleDeleteTemplate}\r\n                        className=\"text-white font-semibold py-2 px-4 border border-red rounded\" >Delete Template</button>\r\n                </div>\r\n            </div>\r\n\r\n            {showSaveVariationModal && (\r\n                <ErrorBoundary\r\n                    FallbackComponent={SaveVariationFallback}\r\n                    onReset={() => { }}\r\n                >\r\n                    <SaveVariation\r\n                        templateData={templateData}\r\n                        handleSaveVariation={handleSaveVariation}\r\n                    />\r\n                </ErrorBoundary>\r\n            )}\r\n\r\n            {isOpenSaveTemplateModal && (\r\n                <ErrorBoundary\r\n                    FallbackComponent={SaveTemplateFallback}\r\n                    onReset={() => { }}\r\n                >\r\n                    <SaveTemplate\r\n                        templateData={templateData}\r\n                        handleSaveTemplate={handleSaveTemplate}\r\n                    />\r\n                </ErrorBoundary>\r\n            )}\r\n\r\n            <div className=\"grid grid-cols-3 gap-4\">\r\n\r\n                {/* first col */}\r\n                <ErrorBoundary\r\n                    FallbackComponent={SideBarFallback}\r\n                    onReset={() => { }}\r\n                >\r\n                    <SideBar variationIndex={variationIndex} setTemplateData={setTemplateData} />\r\n                </ErrorBoundary>\r\n\r\n                {/* Center column */}\r\n                <div>\r\n                    <ErrorBoundary\r\n                        FallbackComponent={TopToolBarFallback}\r\n                        onReset={() => { }}\r\n                    >\r\n                        <TopToolBar\r\n                            onUndo={onUndo}\r\n                            onRedo={onRedo}\r\n                            setTemplateData={setTemplateData}\r\n                            variationIndex={variationIndex}\r\n                            selectedId={selectedId}\r\n                            setSelectedId={setSelectedId}\r\n                        />\r\n                    </ErrorBoundary>\r\n                    <div className=\"flex justify-center mt-5\">\r\n                        <ErrorBoundary\r\n                            FallbackComponent={MainStageFallback}\r\n                            onReset={() => browserHistory.push(ROUTE_NAMES.home)}\r\n                        >\r\n                            <MainStage\r\n                                templateData={templateData}\r\n                                setTemplateData={setTemplateData}\r\n                                variationIndex={variationIndex}\r\n                                selectedId={selectedId}\r\n                                setSelectedId={setSelectedId}\r\n                                unSelectAll={unSelectAll}\r\n                                handleEditSelectedItem={handleEditSelectedItem}\r\n                            />\r\n                        </ErrorBoundary>\r\n                    </div>\r\n\r\n                    <div className=\"flex justify-center mt-5\">\r\n                        <ErrorBoundary\r\n                            FallbackComponent={SelectVariationFallback}\r\n                            onReset={() => { }}\r\n                        >\r\n                            <SelectVariation\r\n                                variations={templateData.variations}\r\n                                variationIndex={variationIndex}\r\n                                setVariationIndex={setVariationIndex}\r\n                            />\r\n                        </ErrorBoundary>\r\n                    </div>\r\n\r\n                    <div className=\"flex justify-center\">\r\n                        <button\r\n                            className=\"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\"\r\n                            onClick={() => setShowSaveVariationModal(true)}\r\n                        >Save Variation</button>\r\n                        <button\r\n                            className=\"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\"\r\n                            onClick={handleAddVariation}\r\n                        >Add New Variation</button>\r\n                        <button\r\n                            className=\"inline-flex items-center h-8 px-4 m-2 text-sm text-green-100 transition-colors duration-150 bg-green-700 rounded-lg focus:shadow-outline hover:bg-green-800\"\r\n                            onClick={handleDeleteVariation}\r\n                        >Delete variation</button>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* third col */}\r\n                <div className={selectedId ? \"\" : \"hidden\"}>\r\n                    <ErrorBoundary\r\n                        FallbackComponent={EditingToolsFallback}\r\n                        onReset={() => { }}\r\n                    >\r\n                        <EditingTools\r\n                            selectedId={selectedId}\r\n                            unSelectAll={unSelectAll}\r\n                            isOpenColorPicker={isOpenColorPicker}\r\n                            isEditTextBox={isEditTextBox}\r\n                            templateData={templateData}\r\n                            setTemplateData={setTemplateData}\r\n                            variationIndex={variationIndex}\r\n                            handleEditSelectedItem={handleEditSelectedItem}\r\n                            handleDeleteSelectedItem={handleDeleteSelectedItem}\r\n                            handleCloseEditTextModal={handleCloseEditTextModal}\r\n                        />\r\n                    </ErrorBoundary>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        </div >\r\n    );\r\n};\r\nexport default DesignTool\r\n","import React, { useEffect } from 'react'\r\nimport swal from 'sweetalert'\r\n\r\nconst CategoryListFallback = ({ error, resetErrorBoundary }) => {\r\n    useEffect(() => {\r\n        swal(\"Oops!\", \"Encountered an error while loading categories. Try reloading page.\", \"error\")\r\n            .then(resetErrorBoundary)\r\n    }, [])\r\n    return (\r\n        <div>\r\n            {error.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoryListFallback\r\n","import React, { useEffect } from 'react'\r\nimport swal from 'sweetalert'\r\n\r\nconst TemplateListFallback = ({ error, resetErrorBoundary }) => {\r\n    useEffect(() => {\r\n        swal(\"Oops!\", \"Encountered an error while loading categories. Try reloading page.\", \"error\")\r\n            .then(resetErrorBoundary)\r\n    }, [])\r\n    return (\r\n        <div>\r\n            {error.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TemplateListFallback\r\n","import React, { useState } from 'react'\r\nimport swal from 'sweetalert'\r\nimport useCategoryList from '../../../../hooks/useCategoryList'\r\nimport { category_service } from '../../../../services/categoryService'\r\n\r\nconst CategoryList = () => {\r\n    const [newCategoryName, setNewCategoryName] = useState<string>(\"\")\r\n    const { categoriesList, error, isLoading } = useCategoryList()\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <p>Getting all categories ...</p>\r\n            </>\r\n        )\r\n    }\r\n\r\n    if (!!error) {\r\n        return (\r\n            <>\r\n                <p>{error.message}</p>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const handleAddCategory = async (e) => {\r\n        e.preventDefault()\r\n        const res = await category_service.addNewCategory({ name: newCategoryName, templateList: [] })\r\n        console.log({ res })\r\n    }\r\n\r\n    const handleDeleteCategory = async (cat) => {\r\n        swal({\r\n            title: \"Are you sure?\",\r\n            text: `Do you want to delete ${cat.name}?`,\r\n            icon: \"warning\",\r\n            buttons: [\"Cancel\", \"Confirm\"],\r\n            dangerMode: true,\r\n        }).then(async (willDelete) => {\r\n            if (willDelete) {\r\n                const res = await category_service.deleteCategoryByID(cat.id)\r\n                console.log({ res })\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"space-y-4 p-5\">\r\n            <div>\r\n                {categoriesList?.map((cat, index) =>\r\n                    <div className=\"flex justify-between\">\r\n                        <span key={index} className=\"block\">{cat.name}</span>\r\n                        <button onClick={() => handleDeleteCategory(cat)} className=\"bg-red text-white rounded p-2 mt-2 mb-2\">Delete</button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div className=\"w-full\">\r\n                <div className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\">\r\n                    <div className=\"mb-4\">\r\n                        <label className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n                            Category name\r\n                        </label>\r\n                        <input\r\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                            id=\"username\"\r\n                            type=\"text\"\r\n                            placeholder=\"Enter category name\"\r\n                            value={newCategoryName}\r\n                            onChange={(e) => setNewCategoryName(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"flex items-center justify-between\">\r\n                        <button\r\n                            onClick={handleAddCategory}\r\n                            className=\"bg-lightGray hover:bg-gray900 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\r\n                            type=\"button\"\r\n                        >\r\n                            Add new Category\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoryList\r\n","import React from 'react';\r\n\r\nconst SearchBar: React.FC = (): JSX.Element => {\r\n    return (\r\n        <div className=\" flex justify-center items-center  w-full\">\r\n\r\n            <div className=\"flex h-14 rounded-md border-bordercolor border justify-center items-center w-11/12 z-50\">\r\n                <button>\r\n                    <span className=\"w-auto flex justify-end items-center text-grey text-sm p-3\">\r\n                        <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M6 2C3.79086 2 2 3.79086 2 6C2 8.20914 3.79086 10 6 10C8.20914 10 10 8.20914 10 6C10 3.79086 8.20914 2 6 2ZM0 6C0 2.68629 2.68629 0 6 0C9.31371 0 12 2.68629 12 6C12 7.29583 11.5892 8.49572 10.8907 9.47653L15.7071 14.2929C16.0976 14.6834 16.0976 15.3166 15.7071 15.7071C15.3166 16.0976 14.6834 16.0976 14.2929 15.7071L9.47653 10.8907C8.49572 11.5892 7.29583 12 6 12C2.68629 12 0 9.31371 0 6Z\" fill=\"#9CA3AF\" />\r\n                        </svg>\r\n\r\n                    </span>\r\n                </button>\r\n                <input className=\"w-full rounded text-sm text-gray95 outline-none h-12 z-0 \" type=\"text\" placeholder=\"Search anything from elements\" />\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default SearchBar;\r\n","import React from 'react'\r\nimport { Circle, Image, Line, Rect, RegularPolygon, Text } from 'react-konva';\r\n\r\ninterface Props {\r\n    konvaItem: any\r\n    index: number\r\n}\r\n\r\nconst Elements: React.FC<Props> = ({ konvaItem, index }) => {\r\n\r\n    if (!konvaItem) return (<></>)\r\n\r\n    return (\r\n        <>\r\n            {konvaItem?.type === \"rectangle\" && (\r\n                <Rect\r\n                    key={index}\r\n                    {...konvaItem}\r\n                />\r\n            )}\r\n\r\n            {konvaItem?.type === \"circle\" && (\r\n                <Circle\r\n                    key={index}\r\n                    {...konvaItem}\r\n                />\r\n            )}\r\n\r\n            {konvaItem?.type === \"line\" && (\r\n                <Line\r\n                    key={index}\r\n                    {...konvaItem}\r\n                />\r\n            )}\r\n\r\n            {konvaItem?.type === \"polygon\" && (\r\n                <RegularPolygon\r\n                    key={index}\r\n                    {...konvaItem}\r\n                />\r\n            )}\r\n\r\n            {konvaItem?.type === \"svg\" && (\r\n                <Image\r\n                    key={index}\r\n                    {...konvaItem}\r\n                />\r\n            )}\r\n\r\n            {konvaItem?.type === \"image\" && (\r\n                <Image\r\n                    key={index}\r\n                    {...konvaItem}\r\n                />\r\n            )}\r\n\r\n            {konvaItem?.type === \"text\" && (\r\n                <Text\r\n                    key={index}\r\n                    {...konvaItem}\r\n                />\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Elements\r\n","import React, { useContext } from 'react'\r\nimport { Layer, Stage } from 'react-konva'\r\nimport { TemplateContext } from '../../../../../contexts/TemplateContext'\r\nimport { stageDimensions } from '../../../../../utils/defaults'\r\nimport Elements from '../Elements'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { ROUTE_NAMES } from '../../../../../routes/route_names'\r\n\r\ninterface Props {\r\n    templateObj: any\r\n}\r\n\r\nconst TemplatePreview: React.FC<Props> = ({ templateObj }) => {\r\n    const history = useHistory()\r\n    const [templateData, setTemplateData] = useContext(TemplateContext)\r\n\r\n    const handleEditTemplate = () => {\r\n        setTemplateData(templateObj, false)\r\n        history.push(`/tool/${templateObj.id}`)\r\n    }\r\n\r\n    return (\r\n        <button\r\n            onClick={handleEditTemplate}\r\n            className=\"border-2  border-dashed rounded-md border-bordercolor justify-center items-center flex flex-col py-4 \">\r\n            <Stage\r\n                width={stageDimensions.width * 0.3}\r\n                height={stageDimensions.height * 0.3}\r\n                scaleX={0.3}\r\n                scaleY={0.3}\r\n            >\r\n                <Layer\r\n                    listening={false}\r\n                >\r\n                    {templateObj?.variations[0]?.elements?.map((item, index) => (\r\n                        <Elements key={index} konvaItem={item} index={index} />\r\n                    ))}\r\n                </Layer>\r\n            </Stage>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default TemplatePreview\r\n","import React, { useEffect } from 'react'\r\nimport swal from 'sweetalert'\r\n\r\nconst SearchBarFallback = ({ error, resetErrorBoundary }) => {\r\n    useEffect(() => {\r\n        swal(\"Oops!\", \"Something is wrong with Search, try reloading the page.\", \"error\")\r\n            .then(resetErrorBoundary)\r\n    }, [])\r\n    return (\r\n        <div>\r\n            {error.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBarFallback\r\n","import React, { useEffect } from 'react'\r\nimport swal from 'sweetalert'\r\n\r\nconst TemplatePreviewFallback = ({ error, resetErrorBoundary }) => {\r\n    useEffect(() => {\r\n        swal(\"Oops!\", \"This Template might be corrupted\", \"error\")\r\n            .then(resetErrorBoundary)\r\n    }, [])\r\n    return (\r\n        <div>\r\n            {error.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TemplatePreviewFallback\r\n","import { useQuery } from 'react-query'\r\nimport { template_service } from '../services/templateService'\r\n\r\nconst useTemplateList = () => {\r\n    const { data: templateList, error, isLoading } = useQuery<any, Error>(\"templates\", template_service.getAllTemplates)\r\n\r\n    return { templateList, error, isLoading }\r\n\r\n}\r\n\r\nexport default useTemplateList\r\n","import React, { useState } from 'react'\r\nimport SearchBar from './SearchBar'\r\nimport TemplatePreview from './TemplatePreview'\r\nimport { ErrorBoundary } from 'react-error-boundary'\r\nimport SearchBarFallback from '../../../../ErrorFallacks/SearchBarFallback'\r\nimport TemplatePreviewFallback from '../../../../ErrorFallacks/TemplatePreviewFallback'\r\nimport useTemplateList from '../../../../hooks/useTemplateList'\r\nimport useCategoryList from '../../../../hooks/useCategoryList'\r\nimport { titleCase } from '../../../../utils/titleCase'\r\n\r\nconst TemplateList = () => {\r\n\r\n    const { templateList, error: templateError, isLoading: templateLoading } = useTemplateList()\r\n    const { categoriesList, error: categoryError, isLoading: categoryLoading } = useCategoryList()\r\n    const [categoryFilter, setCategoryFilter] = useState<any>(null)\r\n\r\n    if (templateLoading) {\r\n        return (\r\n            <>\r\n                <p>Getting all templates ...</p>\r\n            </>\r\n        )\r\n    }\r\n\r\n    if (!!templateError) {\r\n        return (\r\n            <>\r\n                <p>{templateError.message}</p>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"space-y-4 p-5\">\r\n            <>\r\n                {/*content*/}\r\n                <div className=\"relative flex  h-full flex-col w-full  outline-none focus:outline-none\">\r\n                    {/*header*/}\r\n                    <div className=\"flex\"  >\r\n                        <div className=\"flex items-start justify-between w-full p-5 border-b border-solid border-bordercolor rounded-t\">\r\n                            <div>\r\n\r\n                                <h3 className=\"text-2xl text-gray94 font-semibold\">\r\n                                    Select Template\r\n                                </h3>\r\n                            </div>\r\n                            <div className=\"flex flex-row\">\r\n\r\n                                <div className=\"flex flex-row px-2 text-gray900 border-2 h-8 w border-bordercolor rounded-md  mr-2\">\r\n                                    <button className=\"pr-2 text-sm\">Most Popular </button>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                    {/*body*/}\r\n                    <div className=\"w-full flex justify-center\">\r\n\r\n                        <div className=\"mt-3 w-3/6 \">\r\n                            <ErrorBoundary\r\n                                FallbackComponent={SearchBarFallback}\r\n                                onReset={() => { }}\r\n                            >\r\n                                <SearchBar />\r\n                            </ErrorBoundary>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\" flex gap-4 mt-3 px-6\">\r\n                        {categoriesList?.map((cat, index) =>\r\n                            <button\r\n                                key={index}\r\n                                onClick={() => setCategoryFilter(!!categoryFilter ? null : cat)}\r\n                                className={\"rounded-md px-4 py-1 h-10 \" + (categoryFilter?.id === cat.id ? \"text-white bg-indigo700\" : \"bg-lightindigo text-indigo700 \")}>\r\n                                {titleCase(cat.name)}\r\n                            </button>\r\n                        )}\r\n\r\n                    </div>\r\n                    <div>\r\n                        <h1 className=\"text-xl font-bold mt-6 px-6 text-gray94\">Your Templates</h1>\r\n                    </div>\r\n                    <div className=\"pl-6 mt-4 flex flex-row flex-wrap gap-4\">\r\n                        {templateList?.map((item, index) => {\r\n                            if (!!categoryFilter) {\r\n                                if (item.categoryId === categoryFilter.id) {\r\n                                    return (\r\n                                        <div key={index} >\r\n                                            <ErrorBoundary\r\n                                                FallbackComponent={TemplatePreviewFallback}\r\n                                                onReset={() => { }}\r\n                                            >\r\n                                                <TemplatePreview templateObj={item} />\r\n                                            </ErrorBoundary>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            } else {\r\n                                return (\r\n                                    <div key={index} >\r\n                                        <ErrorBoundary\r\n                                            FallbackComponent={TemplatePreviewFallback}\r\n                                            onReset={() => { }}\r\n                                        >\r\n                                            <TemplatePreview templateObj={item} />\r\n                                        </ErrorBoundary>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        })}\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TemplateList\r\n","import React, { useState } from 'react'\r\nimport { ErrorBoundary } from 'react-error-boundary'\r\nimport { NavLink } from 'react-router-dom'\r\nimport CategoryListFallback from '../../ErrorFallacks/CategoryListFallback'\r\nimport TemplateListFallback from '../../ErrorFallacks/TemplateListFallback'\r\nimport { ROUTE_NAMES } from '../../routes/route_names'\r\nimport CategoryList from './components/CategoryList'\r\nimport TemplateList from './components/TemplateList'\r\n\r\nconst navLinksList = [\"categories\", \"templates\"]\r\n\r\nconst Home = () => {\r\n\r\n    const [selectedNavLink, setSelectedNavLink] = useState<string>(navLinksList[0])\r\n\r\n    return (\r\n        <div className=\"min-w-max\">\r\n            {/* HEADER */}\r\n            <div className=\"h-20 mb-5 flex flex-wrap justify-evenly content-center bg-gray900\">\r\n                <div></div>\r\n                <p className=\"text-xl text-white\">Home</p>\r\n                <NavLink\r\n                    to={ROUTE_NAMES.select_palette}\r\n                    className=\"text-white font-semibold py-2 px-4 border border-white-500 rounded\" >\r\n                    Create New Template\r\n                </NavLink>\r\n            </div>\r\n            {/* HEADER END */}\r\n\r\n            <div>\r\n\r\n\r\n                <div className=\"flex flex-no-wrap\">\r\n                    {/* Sidebar starts */}\r\n                    <div\r\n                        style={{ minHeight: \"80vh\" }}\r\n                        className=\"w-64 absolute sm:relative shadow flex-col justify-between flex\">\r\n                        <div className=\"p-8\">\r\n                            {/* \r\n                            <div className=\"h-16 w-full flex items-center\">\r\n                                    LOGO HERE\r\n                            </div>\r\n                            */}\r\n                            <ul className=\"mt-12\">\r\n                                <li\r\n                                    onClick={() => setSelectedNavLink(navLinksList[0])}\r\n                                    className=\"flex w-full bg-gray300 justify-between hover:text-gray-900 cursor-pointer items-center mb-6\">\r\n                                    <div className=\"flex items-center  hover:bg-rightbackgroundcolor  w-full hover:rounded-lg border-0 rounded-sm  h-10\">\r\n                                        <p className=\"text-gray900 font-medium pl-3\">Categories</p>\r\n                                    </div>\r\n                                </li>\r\n                                <li\r\n                                    onClick={() => setSelectedNavLink(navLinksList[1])}\r\n                                    className=\"flex w-full bg-gray300 justify-between text-gray900 hover:text-gray-900 cursor-pointer items-center mb-6\">\r\n                                    <div className=\"flex items-center  hover:bg-rightbackgroundcolor  w-full hover:rounded-lg border-0 rounded-sm h-10\">\r\n                                        <p className=\"text-gray900 font-medium pl-3\">Templates</p>\r\n                                    </div>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    {/* Sidebar ends */}\r\n                    <div className=\"container mx-auto py-10 md:w-4/5 w-11/12 px-6\">\r\n                        {/* Remove class [ border-dashed border-2 border-gray-300 ] to remove dotted border */}\r\n                        <div className=\"w-full h-full rounded border-dashed border-2 border-gray-300\">\r\n                            <div className={selectedNavLink === navLinksList[0] ? \"\" : \"hidden\"}>\r\n                                <ErrorBoundary\r\n                                    FallbackComponent={CategoryListFallback}\r\n                                    onReset={() => { }}\r\n                                >\r\n                                    <CategoryList />\r\n                                </ErrorBoundary>\r\n                            </div>\r\n                            <div className={selectedNavLink === navLinksList[1] ? \"\" : \"hidden\"}>\r\n                                <ErrorBoundary\r\n                                    FallbackComponent={TemplateListFallback}\r\n                                    onReset={() => { }}\r\n                                >\r\n                                    <TemplateList />\r\n                                </ErrorBoundary>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport { SketchPicker } from \"react-color\"\r\n\r\ninterface Props {\r\n    currentSelectedColor: string\r\n    handleColorChange: (color: string) => void\r\n    handleCloseColorPicker: () => void\r\n}\r\n\r\nconst Modal: React.FC<Props> = ({ currentSelectedColor, handleColorChange, handleCloseColorPicker }) => {\r\n\r\n    const [currentColor, setCurrentColor] = React.useState(\"#000000\")\r\n\r\n    React.useEffect(() => {\r\n        setCurrentColor(currentSelectedColor)\r\n    }, [currentSelectedColor])\r\n\r\n    const handleSave = () => {\r\n        handleColorChange(currentColor)\r\n        handleCloseColorPicker()\r\n    }\r\n\r\n    return (\r\n        <div className=\"fixed z-10 inset-0 overflow-y-auto\" aria-labelledby=\"modal-title\" role=\"dialog\" aria-modal=\"true\">\r\n            <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n                <div className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" aria-hidden=\"true\"></div>\r\n\r\n                <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\r\n\r\n                <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\r\n                    <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\r\n                        <div className=\"sm:flex sm:items-start\">\r\n                            <SketchPicker\r\n                                color={currentColor}\r\n                                onChange={(color) => setCurrentColor(color.hex)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\r\n                        <button\r\n                            onClick={handleSave}\r\n                            type=\"button\"\r\n                            className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\">\r\n                            Done\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal\r\n","import React, { useState, useContext } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { ROUTE_NAMES } from '../../routes/route_names'\r\nimport { TemplateContext } from '../../contexts/TemplateContext'\r\nimport PaletteColorSelect from \"../tailwindComponents/PaletteColorSelect\"\r\n\r\ninterface IColor {\r\n    name: string\r\n    color: string\r\n}\r\n\r\nconst SelectPalette = () => {\r\n\r\n    const [templateData, setTemplateData] = useContext(TemplateContext)\r\n    const [showColorPicker, setShowColorPicker] = useState<boolean>(false)\r\n    const [currentSelectedColor, setCurrentSelectedColor] = useState<IColor | null>(null)\r\n\r\n    const handleShowColorPicker = (Color: IColor) => {\r\n        setShowColorPicker(true)\r\n        setCurrentSelectedColor(Color)\r\n    }\r\n\r\n    const handleCloseColorPicker = () => {\r\n        setShowColorPicker(false)\r\n    }\r\n\r\n    const handleColorChange = (color: string) => {\r\n        setTemplateData(prev => {\r\n            const index = prev.palette.findIndex(item => item.name === currentSelectedColor?.name)\r\n            prev.palette[index].color = color\r\n            setCurrentSelectedColor({ ...currentSelectedColor, color: color })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"min-w-max\">\r\n            {showColorPicker && (\r\n                <PaletteColorSelect\r\n                    currentSelectedColor={currentSelectedColor.color}\r\n                    handleColorChange={handleColorChange}\r\n                    handleCloseColorPicker={handleCloseColorPicker}\r\n                />\r\n            )}\r\n            <div className=\"h-20 mb-5 flex flex-wrap justify-evenly content-center bg-gray900\">\r\n                <NavLink\r\n                    to={ROUTE_NAMES.home}\r\n                    className=\"text-white font-semibold py-2 px-4 border border-white-500 rounded\" >\r\n                    Back to home\r\n                </NavLink>\r\n                <p className=\"text-xl text-white\">Select Palette</p>\r\n                <div></div>\r\n            </div>            {templateData.palette.map((item, index) => (\r\n                <div key={index} className=\"h-10 mt-5 mb-5 flex flex-wrap justify-center content-center\" >\r\n                    <p className=\"w-48\">{item.name}</p> <div\r\n                        className=\"w-10 h-10 border border-black\"\r\n                        style={{ backgroundColor: item.color }}\r\n                        onClick={() => handleShowColorPicker(item)}\r\n                    ></div>\r\n                </div>\r\n            ))}\r\n            <div className=\"flex justify-center\">\r\n                <NavLink\r\n                    className=\"inline-flex items-center h-8 px-4 m-2 text-sm text-gray300 hover:text-gray900 transition-colors duration-150 bg-gray900 rounded-lg focus:shadow-outline hover:bg-bluish\"\r\n                    to={\"/tool\"}\r\n                >\r\n                    Proceed\r\n                </NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectPalette\r\n"],"sourceRoot":""}