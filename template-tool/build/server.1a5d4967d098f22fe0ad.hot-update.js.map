{"version":3,"file":"server.1a5d4967d098f22fe0ad.hot-update.js","sources":["webpack:///./src/App.tsx","webpack:///./src/contexts/TemplateContext.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport NoSSR from './NoSSR'\r\nimport { ROUTE_NAMES } from './routes/route_names';\r\nimport { TemplateProvider } from \"./contexts/TemplateContext\"\r\nconst DesignTool = React.lazy(() => import('./components/DesignTool/index'));\r\nconst SelectPalette = React.lazy(() => import('./components/SelectPalette/index'));\r\nconst Home = React.lazy(() => import('./components/Home'));\r\nimport 'tailwindcss/tailwind.css';\r\n\r\nconst App = () => (\r\n    <Switch>\r\n        <NoSSR>\r\n            <TemplateProvider>\r\n                <Route\r\n                    exact={true}\r\n                    path={ROUTE_NAMES.home}\r\n                    render={() => (\r\n                        <React.Suspense fallback={<div>Loading ...</div>}>\r\n                            <Home />\r\n                        </React.Suspense>)\r\n                    }\r\n                />\r\n                <Route\r\n                    exact={true}\r\n                    path={ROUTE_NAMES.select_palette}\r\n                    render={() => (\r\n                        <React.Suspense fallback={<div>Loading ...</div>}>\r\n                            <SelectPalette />\r\n                        </React.Suspense>)\r\n                    }\r\n                />\r\n                <Route\r\n                    exact={true}\r\n                    path={ROUTE_NAMES.design_tool}\r\n                    render={() => (\r\n                        <React.Suspense fallback={<div>Loading ...</div>}>\r\n                            <DesignTool />\r\n                        </React.Suspense>)\r\n                    }\r\n                />\r\n                <Route\r\n                    exact={true}\r\n                    path={ROUTE_NAMES.design_tool_noID}\r\n                    render={() => (\r\n                        <React.Suspense fallback={<div>Loading ...</div>}>\r\n                            <DesignTool />\r\n                        </React.Suspense>)\r\n                    }\r\n                />\r\n            </TemplateProvider>\r\n        </NoSSR>\r\n    </Switch >\r\n);\r\n\r\nexport default App;\r\n","import React, { createContext } from 'react'\r\nimport { useImmerState } from '@shrugsy/use-immer-state';\r\nimport { stageDimensions } from '../utils/defaults';\r\n\r\nexport const INITIAL_STATE = {\r\n    dimensions: { width: stageDimensions.width, height: stageDimensions.height },\r\n    tags: [],\r\n    palette: [\r\n        { name: \"primary\", color: \"#ff0000\" },\r\n        { name: \"secondary\", color: \"#00ff00\" },\r\n        { name: \"tertiary\", color: \"#0000ff\" }\r\n    ],\r\n    variations: [\r\n        {\r\n            name: \"untitled\",\r\n            face: \"\",\r\n            elements: [{\r\n                id: 'shapes_background',\r\n                type: \"rectangle\",\r\n                x: 0,\r\n                y: 0,\r\n                width: stageDimensions.width,\r\n                height: stageDimensions.height,\r\n                // fill: '#F0F0F0',\r\n                fillLinearGradientStartPoint: { x: 0, y: 0 },\r\n                fillLinearGradientEndPoint: { x: stageDimensions.width, y: stageDimensions.height },\r\n                fillLinearGradientColorStops: [0, '#FFFFFF', 1, '#FFFFFF'],\r\n                draggable: false,\r\n            }],\r\n        }\r\n    ],\r\n}\r\n\r\nconst TemplateContext = createContext(null)\r\nTemplateContext.displayName = 'TemplateContext';\r\n\r\nconst TemplateProvider = ({ children }) => {\r\n\r\n    const [templateData, setTemplateData, { goForward, goBack, stepNum, history }] = useImmerState(INITIAL_STATE)\r\n\r\n    return (\r\n        <TemplateContext.Provider\r\n            value={[templateData, setTemplateData, { goForward, goBack, stepNum, history }]}\r\n        >\r\n            {children}\r\n        </TemplateContext.Provider >\r\n    );\r\n\r\n}\r\n\r\nexport { TemplateContext, TemplateProvider }"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAaA;;;;;;;;;;;;;;;;;;;;;;;ACvDA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAXA;AAHA;AATA;AA6BA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;;;;;A","sourceRoot":""}