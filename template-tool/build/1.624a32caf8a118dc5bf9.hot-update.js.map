{"version":3,"file":"1.624a32caf8a118dc5bf9.hot-update.js","sources":["webpack:///./src/components/Home/components/TemplateList/index.tsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport SearchBar from './SearchBar'\r\nimport TemplatePreview from './TemplatePreview'\r\nimport { ErrorBoundary } from 'react-error-boundary'\r\nimport SearchBarFallback from '../../../../ErrorFallacks/SearchBarFallback'\r\nimport TemplatePreviewFallback from '../../../../ErrorFallacks/TemplatePreviewFallback'\r\nimport useTemplateList from '../../../../hooks/useTemplateList'\r\nimport useCategoryList from '../../../../hooks/useCategoryList'\r\nimport { titleCase } from '../../../../utils/titleCase'\r\n\r\nconst TemplateList = () => {\r\n\r\n    const { templateList, error: templateError, isLoading: templateLoading } = useTemplateList()\r\n    const { categoriesList, error: categoryError, isLoading: categoryLoading } = useCategoryList()\r\n    const [categoryFilter, setCategoryFilter] = useState<any>(null)\r\n\r\n    if (templateLoading) {\r\n        return (\r\n            <>\r\n                <p>Getting all templates ...</p>\r\n            </>\r\n        )\r\n    }\r\n\r\n    if (!!templateError) {\r\n        return (\r\n            <>\r\n                <p>{templateError.message}</p>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"space-y-4 p-5\">\r\n            <>\r\n                {/*content*/}\r\n                <div className=\"relative flex  h-full flex-col w-full  outline-none focus:outline-none\">\r\n                    {/*header*/}\r\n                    <div className=\"flex\"  >\r\n                        <div className=\"flex items-start justify-between w-full p-5 border-b border-solid border-bordercolor rounded-t\">\r\n                            <div>\r\n\r\n                                <h3 className=\"text-2xl text-gray94 font-semibold\">\r\n                                    Select Template\r\n                                </h3>\r\n                            </div>\r\n                            <div className=\"flex flex-row\">\r\n\r\n                                <div className=\"flex flex-row px-2 text-gray900 border-2 h-8 w border-bordercolor rounded-md  mr-2\">\r\n                                    <button className=\"pr-2 text-sm\">Most Popular </button>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                    {/*body*/}\r\n                    <div className=\"w-full flex justify-center\">\r\n\r\n                        <div className=\"mt-3 w-3/6 \">\r\n                            <ErrorBoundary\r\n                                FallbackComponent={SearchBarFallback}\r\n                                onReset={() => { }}\r\n                            >\r\n                                <SearchBar />\r\n                            </ErrorBoundary>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\" flex gap-4 mt-3 px-6\">\r\n                        {categoriesList?.map((cat, index) =>\r\n                            <button\r\n                                key={index}\r\n                                onClick={() => setCategoryFilter(!!categoryFilter ? null : cat)}\r\n                                className=\"bg-lightindigo text-indigo700 rounded-md px-4 py-1 h-10\">{titleCase(cat.name)}</button>\r\n                        )}\r\n\r\n                    </div>\r\n                    <div>\r\n                        <h1 className=\"text-xl font-bold mt-6 px-6 text-gray94\">Your Templates</h1>\r\n                    </div>\r\n                    <div className=\"pl-6 mt-4 flex flex-row flex-wrap gap-4\">\r\n                        {templateList?.map((item, index) => {\r\n                            if (!!categoryFilter) {\r\n                                if (item.categoryId === categoryFilter.id) {\r\n                                    return (\r\n                                        <div key={index} >\r\n                                            <ErrorBoundary\r\n                                                FallbackComponent={TemplatePreviewFallback}\r\n                                                onReset={() => { }}\r\n                                            >\r\n                                                <TemplatePreview templateObj={item} />\r\n                                            </ErrorBoundary>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            } else {\r\n                                return (\r\n                                    <div key={index} >\r\n                                        <ErrorBoundary\r\n                                            FallbackComponent={TemplatePreviewFallback}\r\n                                            onReset={() => { }}\r\n                                        >\r\n                                            <TemplatePreview templateObj={item} />\r\n                                        </ErrorBoundary>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        })}\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TemplateList\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAQA;AACA;AACA;;;;A","sourceRoot":""}